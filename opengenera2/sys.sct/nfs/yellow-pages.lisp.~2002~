;;; -*- Mode: LISP; Syntax: Common-lisp; Package: RPC; Base: 10; Lowercase: T -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>
;;;>

;;; The Yellow Pages Module 

(define-remote-module
  yp
  (:number 100004)
  (:version 2)
  (:process nil)
  (:server :lisp)
  (:client :lisp)
  (:allow-untrusted-access t)
  )

;;; YP database server remote procedures

(define-remote-entry ypproc-null yp
  (:number 0)
  (:arguments)
  (:values)
  (:whostate "YP Null")
  (:lisp (:server (rpc-values))))

(define-remote-entry ypproc-domain yp
  (:number 1)
  (:arguments (domain string))
  (:values (serves boolean))
  (:whostate "YP Domain")
  (:lisp (:server domain (rpc-values nil))))

;;; The ypproc-domain-nonack entry is used by UNIX clients to find a Yellow
;;; Pages server on their local subnet.  It is called through the
;;; pmapproc-callit procedure, using UDP broadcast RPC.  Since it is the
;;; contract of the pmapproc-callit procedure to not return any response if an
;;; error occurs, by signalling an error we ensure there won't be an ack.

(define-remote-error yp-no-domain yp (:number 1))

(define-remote-entry ypproc-domain-nonack yp
  (:number 2)
  (:arguments (domain string))
  (:values (serves boolean))
  (:whostate "YP Domain Non-Ack")
  (:lisp
    (:server
     domain
     (if (typep *default-transport-agent* 'pmapproc-callit-server-transport-agent-mixin)
	 (rpc-error yp-no-domain)
       (rpc-values nil)))))

(define-remote-type ypstat ()
  (:abbreviation-for
    `(enumeration
       (:yp-true 1)				;general purpose success code
       (:yp-nomore 2)				;no more entries in map
       (:yp-false 0)				;general purpose failure code
       (:yp-nomap -1)				;no such map in domain
       (:yp-nodom -2)				;domain not supported
       (:yp-nokey -3)				;no such key in map
       (:yp-badop -4)				;invalid operation
       (:yp-baddb -5)				;server database is bad
       (:yp-yperr -6)				;YP server error
       (:yp-badargs -7)				;request arguments bad
       (:yp-vers -8)				;YP server version mismatch
       )))

(define-remote-entry ypproc-match yp
  (:number 3)
  (:arguments (domain string) (map string) (keydat string))
  (:values (ypstat ypstat) (resp string))
  (:whostate "YP Match")
  (:lisp (:server domain map keydat (rpc-values :yp-false ""))))

(define-remote-entry ypproc-first yp
  (:number 4)
  (:arguments (domain string) (map string))
  (:values (ypstat ypstat) (key string) (val string))
  (:whostate "YP First")
  (:lisp (:server domain map (rpc-values :yp-false "" ""))))

(define-remote-entry ypproc-next yp
  (:number 5)
  (:arguments (domain string) (map string) (keydat string))
  (:values (ypstat ypstat) (key string) (val string))
  (:whostate "YP Next")
  (:lisp (:server domain map keydat (rpc-values :yp-false "" ""))))

(define-remote-type ypxfrstat ()
  (:abbreviation-for
    `(enumeration
       (:ypxfr-succ 1)				;success
       (:ypxfr-age 2)				;master's version not newer
       (:ypxfr-nomap -1)			;domain not supported
       (:ypxfr-rsrc -3)				;local resource alloc failure
       (:ypxfr-rpc -4)				;RPC failure talking to server
       (:ypxfr-maddr -5)			;can't get master address
       (:ypxfr-yperr -6)			;YP server/map db error
       (:ypxfr-badargs -7)			;request arguments bad
       (:ypxfr-dbm -8)				;local database failure
       (:ypxfr-file -9)				;local file io failure
       (:ypxfr-skew -10)			;map version skew in transfer
       (:ypxfr-clear -11)			;can't clear local ypserv
       (:ypxfr-force -12)			;must override defaults
       (:ypxfr-xfrerr -13)			;ypxfr error
       (:ypxfr-refused -14)			;ypserv refused transfer
       )))

(define-remote-entry ypproc-xfr yp
  (:number 6)
  (:arguments (domain string) (map string) (ordernum cardinal-32) (owner string)
	      (transid-arg cardinal-32) (proto cardinal-32) (port cardinal-16))
  (:values (transid-val cardinal-32) (ypxfrstat ypxfrstat))
  (:whostate "YP XFR")
  (:lisp
    (:server domain map ordernum owner transid-arg proto port
	     (rpc-values 0 :ypxfr-nomap))))

(define-remote-entry ypproc-clear yp
  (:number 7)
  (:arguments)
  (:values)
  (:whostate "YP Clear")
  (:lisp (:server (rpc-values))))

(defstruct ypresp-key-val
  ypstat
  keydat
  valdat)

(define-remote-type ypresp-key-val ()
  (:abbreviation-for
    `(structure (:lisp ypresp-key-val)
		(ypstat ypstat)
		(valdat string)
		(keydat string))))

(define-remote-entry ypproc-all yp
  (:number 8)
  (:arguments (domain string) (map string))
  (:values (resp (list ypresp-key-val)))
  (:whostate "YP All")
  (:lisp (:server domain map (rpc-values nil))))

(define-remote-entry ypproc-master yp
  (:number 9)
  (:arguments (domain string) (map string))
  (:values (ypstat ypstat) (master string))
  (:whostate "YP Master")
  (:lisp (:server domain map (rpc-values :yp-false ""))))

(define-remote-entry ypproc-order yp
  (:number 10)
  (:arguments (domain string) (map string))
  (:values (ypstat ypstat) (ordernum cardinal-32))
  (:whostate "YP Order")
  (:lisp (:server domain map (rpc-values :yp-false 0))))

(define-remote-entry ypproc-maplist yp
  (:number 11)
  (:arguments (domain string))
  (:values (ypstat ypstat) (maplist (list string)))
  (:whostate "YP Maplist")
  (:lisp (:server domain (rpc-values :yp-false nil))))

;;; The Yellow Pages Binder Module

(define-remote-module
  ypbind
  (:number 100007)
  (:version 2)
  (:process nil)
  (:server :lisp)
  (:client :lisp)
  (:allow-untrusted-access t)
  )

(define-remote-entry ypbindproc-null ypbind
  (:number 0)
  (:arguments)
  (:values)
  (:whostate "YPBind Null")
  (:lisp (:server (rpc-values))))

(defstruct ypbind-binding
  addr
  port)

;;; Can you believe I need this? They documented it to be a cardinal-16, but
;;; it's really in the high 16 bits of the 32 bit word.
(define-remote-type ypbind-binding-port ()
  (:size 1)
  (:lisp
    (:encode (value) `(dpb ,value (byte 16 16) 0))
    (:decode (value) `(ldb (byte 16 16) ,value))
    (:typep (value) `(typep ,value '(unsigned-byte 16)))))

(define-remote-type ypbind-binding ()
  (:abbreviation-for
    `(structure (:lisp ypbind-binding)
		(addr integer-32)
		(port ypbind-binding-port))))		

(defun ypbindproc-domain-server (domain)
  (multiple-value-bind (my-domain my-server my-agent)
      (yellow-pages-domain-and-server (host-unix-name-lookup-access-path net:*local-host*))
    (if (string= domain my-domain)
	(make-ypbind-binding
	  :addr (second (assoc (neti:local-network-of-type :internet)
			       (send my-server :network-addresses)))
	  :port (or (module-port my-agent 100004 2 *pmap-udp-protocol-number* nil t) 0))
      :ypbind-err-noserv)))

(define-remote-entry ypbindproc-domain ypbind
  (:number 1)
  (:arguments (domain string))
  (:values
    (resp (or (member never-used)		;never returns 0
	      ypbind-binding			;success
	      (enumeration
		(:ypbind-err-err 1)		;internal error
		(:ypbind-err-noserv 2)		;no bound server for domain
		(:ypbind-err-resc 3)))))	;can't allocate system resource
  (:whostate "YPBind Domain")
  (:lisp (:server (rpc-values (ypbindproc-domain-server domain)))))

(define-remote-entry ypbindproc-setdom ypbind
  (:number 2)
  (:arguments (domain string) (addr integer-32) (port cardinal-16) (version integer-32))
  (:values)
  (:whostate "YPBind SetDom")
  (:lisp (:server domain addr port version (rpc-values))))
