;;; -*- Mode: LISP; Package: SYSTEM-INTERNALS; Base: 10 -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

;;; This file is in the cold load.

;;; This file contains things that are used only during a cold-load operation.

(DEFVAR *AFTER-LOADING-SYSTEM-SYSTEM-INITIALIZATION-LIST* NIL)

;Once-only initializations of variables
;If you want them to be initialized on every boot, you also need a defvar-resettable
(DEFCONST *COLD-LOAD-VARIABLE-INITIALIZATIONS*
	  '((INHIBIT-SCHEDULING-FLAG T)
	    (GC-FLIP-INHIBIT 0)
	    (ALPHABETIC-CASE-AFFECTS-STRING-COMPARISON NIL)	;---no longer used
	    (GC-FLIP-WAITING NIL)
	    (NESTED-INHIBIT-GC-FLIPS-FLAG NIL)
	    (DEFAULT-CONS-AREA WORKING-STORAGE-AREA)	;Reset default areas.
	    (READ-AREA NIL)
	    ;; let sent over forms work
	    (*WARM-BOOT-BINDINGS* NIL)
	    (*STANDARD-BINDINGS* NIL)
	    (*INTERACTIVE-BINDINGS* NIL)
	    ;; Make it possible to call EVAL
	    (EVALHOOK NIL)
	    (APPLYHOOK NIL)
	    (DBG:*DEBUGGER-LEVEL* 0)
	    (ERROR-MESSAGE-HOOK NIL)
	    ;; Initialize the input editor.
	    (RUBOUT-HANDLER NIL)		;We're not in it now
	    (*INPUT-EDITOR-OPTIONS* NIL)
	    (*INPUT-EDITOR-TYPEIN* NIL)
	    ;; And all kinds of randomness...
	    (TRACE-LEVEL 0)
	    (INSIDE-TRACE NIL)
	    (IBASE 10) (BASE 10) (*NOPOINT T) (PRINLEVEL NIL) (PRINLENGTH NIL)
	    ;; Prevent the reader from doing random things
	    (XR-CORRESPONDENCES NIL)
	    (XR-READ-FOR-EFFECT NIL)
	    ;; Don't get screwed by MACRO!
	    (UNDO-DECLARATIONS-FLAG NIL)
	    (FDEFINE-FILE-PATHNAME NIL)
	    (INHIBIT-FDEFINE-WARNINGS NIL)
	    (LOCAL-DECLARATIONS NIL) (FILE-LOCAL-DECLARATIONS NIL)
	    (PRINT-READABLY NIL)
	    (*READER-INTERN* 'CL:INTERN)
	    (GLOBALLY-LOCK-PACKAGES NIL)
	    (AREA-FOR-PROPERTY-LISTS PROPERTY-LIST-AREA)
	    ;; Turn off old uses of the cold load stream, so that we can
	    ;; read from the keyboard.  This is necessary both for the
	    ;; cold load stream and for the window system.
	    (TV:COLD-LOAD-STREAM-SELECTED NIL)
	    (DBG:SAVED-SCREEN-LEVEL NIL)
	    (DBG:SAVED-SCREEN-PROCESS NIL)
	    (FS:*AUTOMATICALLY-LOGIN-TO-SYS-HOST* NIL)
	    (COMPILER:QC-FILE-IN-PROGRESS NIL)
	    (SYS:*CURRENT-PROCESS* NIL) (CURRENT-PROCESS NIL)	;we need both
	    (*PENDING-PROCESS-ABORTS* NIL)
	    (TV:WHO-LINE-PROCESS NIL)
	    (TV:LAST-WHO-LINE-PROCESS NIL)
	    (SI:WHO-LINE-JUST-COLD-BOOTED-P NIL)
	    (TV:INITIAL-LISP-LISTENER NIL)
	    (TV:*SHOW-SYSTEM-INTERNAL-PROGRESS-NOTES* T)
	    ;; These aren't defined in the cold load, so have to be set initially
	    (DBG:*BOUND-HANDLERS* NIL)
	    (DBG:*DEFAULT-HANDLERS* NIL)
	    (DBG:*INTERACTIVE-HANDLERS* (DBG:DEBUGGER-HANDLER))
	    (DBG:*RESTART-HANDLERS* NIL)
	    ;; Dummy dynamic window stuff
	    (DW::*PRESENTATION-INPUT-CONTEXT* NIL)
	    (*STANDARD-TERMINAL-TYPES* NIL)
	    ;;
	    (COMPILER:*USE-SOURCE-LOCATORS* NIL)
	    (COMPILER:COMPILER-WARNINGS-CONTEXT NIL)
	    (COMPILER:*ALLOW-WIRED-COMPILE-TO-CORE* NIL)
	    ;;
	    (TIME:*TIMEBASE-INITIALIZED* NIL)
	    ))

(DEFCONST *COLD-LOAD-FUNCTION-INITIALIZATIONS*
	  '((FERROR . FERROR-COLD-LOAD)
	    (ERROR . ERROR-COLD-LOAD)
	    (FSIGNAL . FSIGNAL-COLD-LOAD)
	    (SIGNAL . SIGNAL-COLD-LOAD)
	    (CL:WARN . WARN-COLD-LOAD)
	    (CL:CERROR . CERROR-COLD-LOAD)
	    #+3600 (SYS:MICROCODE-ERROR-HANDLER . MICROCODE-ERROR-HANDLER-COLD)
	    #+IMACH (DBG:ERROR-TRAP-HANDLER-1 . DBG:ERROR-TRAP-HANDLER-1-COLD)
	    (DBG:ENTER-DEBUGGER . ENTER-DEBUGGER-COLD)
	    (DBG:FRAME-OUT-TO-INTERESTING-ACTIVE-FRAME . CL:IDENTITY)
	    (MAKE-INSTANCE . MAKE-INSTANCE-COLD)
	    (LT:REMOVE-ARGUMENTS-FROM-LAMBDA-LIST . NTHCDR) ; for the flavor system
	    (LT:FUNCTION-INLINE-FORM-METHOD . IGNORE)
	    (PROCESS-WAIT . PROCESS-SPIN-WAIT)
	    (UNENCAPSULATE-FUNCTION-SPEC . PROG1)
	    (FS:MAKE-FASLOAD-PATHNAME . LIST)
	    (FS:FILE-ATTRIBUTE-BINDINGS . IGNORE)
	    (FS:READ-ATTRIBUTE-LIST . IGNORE)
	    (FS:AUTO-ADD-FEP-HOST . IGNORE)
	    (GET-INTERACTIVE-BINDINGS . IGNORE)
	    (PRINT-ANY-BINDING-WARNINGS . IGNORE)
	    (BEEP . IGNORE)
	    (LISP-TOP-LEVEL1 . EMERGENCY-COMMAND-LOOP)
	    (BREAK-INTERNAL . BREAK-COLD-LOAD-INTERNAL)
	    (FORMAT . FORMAT-COLD-LOAD)
	    (FORMAT:REDEFINE-FORMAT-DIRECTIVE . IGNORE)
	    (RESET-WARM-BOOT-BINDINGS . IGNORE)
	    (ADD-TIMER . IGNORE)
	    (DELETE-TIMER . IGNORE)
	    (TV:WHO-LINE-UPDATE . IGNORE)
	    (TV:WHO-LINE-PROCESS-CHANGE . IGNORE)
	    (TV:WHO-LINE-RUN-STATE-UPDATE . IGNORE)
	    (COMPILER:FILE-DECLARATION . IGNORE)
	    (COMPILER:FUNCTION-DEFINED-P . IGNORE)
	    (COMPILER:FUNCTION-DEFINED . IGNORE)
	    (COMPILER:NOTE-MACROEXPANSION . IGNORE)
	    (NETI:DISABLE-SERVICES . IGNORE)
	    (NETI:INITIALIZE-NAMESPACES-AND-NETWORK . IGNORE)
	    (KBD-INTERCEPT-CHARACTER . IGNORE)
	    (DBG:DEBUGGER-HANDLER . COLD-LOAD-INTERACTIVE-HANDLER)
	    (COMPILER:GET-FILE-WARNINGS . IGNORE)
	    (COMPILER:PROCESS-DELAYED-WARNINGS . IGNORE)
	    (DW::NOTE-PRESENTATION-INPUT-CONTEXT-CHANGE . IGNORE)
	    (DW::INHERIT-PRESENTATION-CONTEXT . IGNORE)
	    (DW::MOUSE-MOTION-PENDING . IGNORE)
	    (DW::NEW-PRESENTATION-INPUT-CONTEXT . IGNORE)
	    (DW::NOTE-PRESENTATION-INPUT-CONTEXT-CHANGE . IGNORE)
	    (DW::CLEAR-PRESENTATION-INPUT-CONTEXT . IGNORE)
	    (DW::PRESENTATION-INPUT-BLIP-HANDLER . IGNORE)
	    (DW::UPDATE-HIGHLIGHTED-PRESENTATION . IGNORE)
	    (DW:DESCRIBE-PRESENTATION-TYPE . IGNORE)	;So FQUERY will work
	    (DW:MAYBE-CHECK-TYPE-REDEFINITION . IGNORE)
	    (DW:PREPARE-FOR-TYPE-CHANGE . IGNORE)
	    (DW::INVALIDATE-TYPE-HANDLER-TABLES . IGNORE)
	    (DW::FINISH-TYPE-REDEFINITION . IGNORE)
	    (SCL:PRESENT . PRESENT-COLD-LOAD)
	    (GPRINT:PRINT-OBJECT  . PRINT-OBJECT-COLD-LOAD)
	    (TV:ADD-PROGRESS-NOTE . IGNORE)
	    (TV:REMOVE-PROGRESS-NOTE . IGNORE)
	    (TV:NOTE-PROGRESS . IGNORE)
	    (TV:ALTER-PROGRESS-NOTE-TEXT . IGNORE)
	    (TV:WITH-NOTIFICATION-MODE-INTERNAL . WITH-NOTIFICATION-MODE-INTERNAL-COLD)
	    (TV:MOUSE-WAKEUP . TRUE)
	    (TV:NOTIFY . NOTIFY-COLD)
	    (TV:NOTE-KEYBOARD-CHARACTER . IGNORE)
	    (CL:STREAMP . IGNORE-TRUE)
	    (COMPILER:PURGE-FILE-DECLARATIONS . IGNORE)
	    (CL:VECTORP . ARRAYP)		;so COPY-SEQ will work (for flavors)
	    (CL:BIT-VECTOR-P . FALSE)		;so arrays can be printed
	    (CLI::FIXNUMP . FIXNUMP)		;CLI::FIXNUMP shouldn't even exist!
	    (FLAVOR::DEFGENERIC-INTERNAL . DEFGENERIC-INTERNAL-COLD)
	    (FLAVOR::FIND-GENERIC-FUNCTION-AS-CONSTANT
	      . FIND-GENERIC-FUNCTION-AS-CONSTANT-COLD)
	    ;;(CLI::INITIALIZE-SLB-CONSOLE-WIRED . IGNORE)
	    (ZWEI:VARIABLE-VALUE . SYMEVAL)	;so history-inner will work without buffers.
	    (CL:Y-OR-N-P . YES-OR-NO-P-COLD)
	    (CL:YES-OR-NO-P . YES-OR-NO-P-COLD)
	    (Y-OR-N-P . ZL-YES-OR-NO-P-COLD)
	    (YES-OR-NO-P . ZL-YES-OR-NO-P-COLD)
	    (INITIALIZE-CONSOLE . INITIALIZE-CONSOLE-COLD)
	    (CL:SUBTYPEP . SUBTYPEP-COLD)
	    (SI:WITH-PROCESS-INTERACTIVE-PRIORITY-INTERNAL
	      . WITH-PROCESS-INTERACTIVE-PRIORITY-INTERNAL-COLD)
	    (SI:SPECIAL-LOAD . SPECIAL-LOAD-COLD)
	    (LT::DEFCONSTANT-LOAD-2 . DEFCONSTANT-LOAD-2-COLD)
	    (LT::MAKE-VARIABLE-OBSOLETE . MAKE-VARIABLE-OBSOLETE-COLD)
	    (LT:GLOBAL-SPECIAL-VARIABLE-P . GLOBAL-SPECIAL-VARIABLE-P-COLD)
	    (LT:SYMBOL-MACRO-P . FALSE)
	    (LT:NAMED-CONSTANT-P . NAMED-CONSTANT-P-COLD)
	    (LT:FORM-REFERENCES-ENVIRONMENT-P . TRUE)
	    (CL:TYPE-OF . ZL:TYPEP)
	    (CLI::TYPE-NAME-P . FALSE)
	    (SI:FUNCTION-ENCAPSULATED-P . FALSE)
	    (COMPILER:COMPILER-BIND-CONTEXT-INTERNAL . COMPILER-BIND-CONTEXT-INTERNAL-COLD)
	    (MAP-KEY-TO-SOFTWARE-CHAR . MAP-KEY-TO-SOFTWARE-CHAR-COLD)
	    (SI:LISP-SYNTAX-FROM-KEYWORD . IGNORE)
	    (TV:SHOW-PROGRESS-NOTE . IGNORE)
	    (EXPAND-GENERIC-FUNCTION-DEBUGGING-INFO . GENERIC-FUNCTION-DEBUGGING-INFO-COLD)
	    (COMPILED-FUNCTION-INTERNAL-FUNCTION-OFFSETS
	      . COMPILED-FUNCTION-INTERNAL-FUNCTION-OFFSETS-COLD)
	    (SI:WAKEUP-GC-PROCESS . IGNORE)
	    (TV:BACKGROUND-STREAM . SI:COLD-LOAD-STREAM-IO)
	    (PROCESS:PROCESS-PRIORITY-LESSP . COLD-PROCESS-PRIORITY-LESSP)
	    (DISPLAY-PROMPT-OPTION . IGNORE)
	    (KBD-HARDWARE-CHAR-AVAILABLE . KBD-HARDWARE-CHAR-AVAILABLE-COLD)
	    (KBD-GET-HARDWARE-CHAR . KBD-GET-HARDWARE-CHAR-COLD)
	    (KBD-CONVERT-TO-SOFTWARE-CHAR . KBD-CONVERT-TO-SOFTWARE-CHAR-COLD)
	    (PROCESS:MAKE-LOCK . MAKE-LOCK-COLD)
	    (PROCESS::LOCK-INTERNAL . LOCK-INTERNAL-COLD)
	    (PROCESS::UNLOCK-INTERNAL . UNLOCK-INTERNAL-COLD)
	    (PROCESS::ABORT-LOCK . ABORT-LOCK-COLD)
	    (SI:WAIT-FOR-DISK-DONE . WAIT-FOR-DISK-DONE-COLD)
	    (SI:PROCESS-FLUSH-BACKGROUND-STREAM . IGNORE)
	    (SI:MACHINE-MODEL . MACHINE-MODEL-COLD)
	    (SI:BIND-INTERACTIVE-VALUE-INTERNAL . IGNORE)
	    #+IMACH(I-LISP-COMPILER:OPCODE-FOR-INSTRUCTION . COLD-OPCODE-FOR-INSTRUCTION)
	    (CLOS:FIND-CLASS . COLD-FIND-CLASS)
	    (CL:FIND-PACKAGE . COLD-FIND-PACKAGE)
	    (CURRENT-LISP-SYNTAX . FALSE)
	    ;; Called from COMPUTE-FINGER-STRING during QLD.
	    (SCT:SYSTEM-VERSION-INFO . FALSE)
	    (SI:HARDWARE-RESOURCES-STRING . FALSE)
	    ;; Called by INITIALIZE-NAMESPACES-AND-NETWORK
	    (TIME:INITIALIZE-TIMEBASE . IGNORE)
	    (CLOS:DESCRIBE-OBJECT . SI:DEFAULT-DESCRIBE)
	    ))

(DEFVAR *COLD-LOAD-DEFERRED-FORMS*)	;Specially constructed by the cold-load generator

(DEFVAR *COLD-LOAD-WARNINGS* NIL)

(DEFCONST *COLD-LOAD-LISTS-WHICH-BECOME-OBSOLETE*
	  '(*COLD-LOAD-FUNCTION-INITIALIZATIONS*
	    *COLD-LOAD-VARIABLE-INITIALIZATIONS*
	    *COLD-LOAD-DEFERRED-FORMS*
	    *COLD-LOAD-WARNINGS*
	    COLD-LOAD-FUNCTION-PROPERTY-LISTS
	    BUILD-INITIAL-PACKAGES
	    *DEFGENERIC-COLD-FORMS*
	    *GENERIC-REFERENCE-COLD-FORMS*
	    FLAVOR::*MAKE-COMBINED-METHOD-BOOTSTRAP-GUESSES*
	    *QLD-MESSAGES*
	    *COLD-LOAD-NOTIFICATIONS*
	    ))

(DEFINE-GC-OPTIMIZATION REMOVE-OBSOLETE-COLD-LOAD-LISTS SYMBOLICS-SYSTEM-RELEASE
  (:DOCUMENTATION "Remove references to internal lists used only in world construction")
  (:ORDER (:BEFORE OPTIMIZE-WHO-CALLS-DATABASE))
  (:BEFORE-FLIP (IGNORE)
    (LOOP FOR SYMBOL IN *COLD-LOAD-LISTS-WHICH-BECOME-OBSOLETE* DO
      (SET SYMBOL NIL))))

(DEFUN IGNORE-TRUE (&REST IGNORE) T)

(DEFUN COLD-LOAD-INTERACTIVE-HANDLER (&REST ARGS)
  (PRINT ARGS)
  (EMERGENCY-BREAK "COLD-LOAD-INTERACTIVE-HANDLER"))

(DEFUN BREAK-COLD-LOAD-INTERNAL (TAG &OPTIONAL (CONDITIONAL T))
  (WHEN CONDITIONAL
    (EMERGENCY-BREAK (STRING TAG))))

(DEFUN FORMAT-COLD-LOAD (STREAM &REST FORMAT-ARGS)
  (WHEN STREAM
    (IF (EQ STREAM T) (SETQ STREAM STANDARD-OUTPUT))
    (PRINT "Format-cold-load: " STREAM)
    (PRINC FORMAT-ARGS STREAM))
  NIL)

;; Include some crucial Debugger presentation types
(DEFUN PRESENT-COLD-LOAD (OBJECT &OPTIONAL TYPE
			  &KEY (STREAM STANDARD-OUTPUT) &ALLOW-OTHER-KEYS)
  (IGNORE TYPE)
  (PRIN1 OBJECT STREAM)
  NIL)

(DEFUN PRINT-OBJECT-COLD-LOAD (OBJECT &OPTIONAL IGNORE (STREAM TERMINAL-IO) IGNORE)
  (LET ((CL:*PRINT-PRETTY* NIL))
    (WRITE-INTERNAL OBJECT STREAM)))

#+3600
(DEFVAR *MICROCODE-ERROR-HANDLER-COLD-DEPTH* 0
  "Allow more than one level of error before completely crapping into the FEP")

#+3600
(DEFUN MICROCODE-ERROR-HANDLER-COLD (MICRO-PC VMA OLD-INHIBIT-SCHEDULING-FLAG MACRO-PC)
  (DECLARE (SPECIAL MICRO-PC VMA OLD-INHIBIT-SCHEDULING-FLAG MACRO-PC))
  (INCF *MICROCODE-ERROR-HANDLER-COLD-DEPTH*)
  (WHEN (< *MICROCODE-ERROR-HANDLER-COLD-DEPTH* 5)
    (DBG:ENABLE-TRAPPING))
  (PRINT (LIST MICRO-PC VMA OLD-INHIBIT-SCHEDULING-FLAG MACRO-PC) TERMINAL-IO)
  (UNWIND-PROTECT
      (EMERGENCY-BREAK "MICROCODE-ERROR-HANDLER")
    (DECF *MICROCODE-ERROR-HANDLER-COLD-DEPTH*)
    (DBG:ENABLE-TRAPPING)
    (SETF INHIBIT-SCHEDULING-FLAG OLD-INHIBIT-SCHEDULING-FLAG)))

;Simple version of FERROR to be used in the cold load environment.
(DEFUN FERROR-COLD-LOAD (&REST ARGLIST)
  (DECLARE (SPECIAL ARGLIST))
  (PRINT ARGLIST TERMINAL-IO)
  (EMERGENCY-BREAK "FERROR"))

(DEFUN ERROR-COLD-LOAD (&REST ARGLIST)
  (DECLARE (SPECIAL ARGLIST))
  (PRINT ARGLIST TERMINAL-IO)
  (EMERGENCY-BREAK "ERROR"))

(DEFUN FSIGNAL-COLD-LOAD (&REST ARGLIST)
  (DECLARE (SPECIAL ARGLIST))
  (PRINT ARGLIST TERMINAL-IO)
  (EMERGENCY-BREAK "FSIGNAL"))

(DEFUN SIGNAL-COLD-LOAD (&REST ARGLIST)
  (DECLARE (SPECIAL ARGLIST))
  (PRINT ARGLIST TERMINAL-IO)
  (EMERGENCY-BREAK "SIGNAL"))

(DEFUN ENTER-DEBUGGER-COLD (CONDITION &REST IGNORE)
  (DECLARE (SPECIAL CONDITION))
  (CONDITION-CASE ()
       (WHEN CONDITION
	 (PRINT CONDITION TERMINAL-IO)
	 (SEND CONDITION :REPORT TERMINAL-IO))
     (ERROR))
  (EMERGENCY-BREAK "ENTER-DEBUGGER"))

(DEFUN WARN-COLD-LOAD (&REST ARGLIST)
  (PRINT "Warn-cold-load: ")
  (PRINT ARGLIST)
  (PUSH (COPYLIST ARGLIST) *COLD-LOAD-WARNINGS*)
  NIL)

(DEFUN CERROR-COLD-LOAD (&REST ARGLIST)
  (DECLARE (SPECIAL ARGLIST))
  (PRINT ARGLIST TERMINAL-IO)
  (EMERGENCY-BREAK "CERROR"))

(DEFUN ZL-YES-OR-NO-P-COLD (&OPTIONAL MESSAGE (STREAM TERMINAL-IO))
  (WHEN MESSAGE (PRIN1 MESSAGE STREAM))
  (PRIN1 "(Type T or NIL)" STREAM)
  (READ STREAM))

(DEFUN YES-OR-NO-P-COLD (&REST MESSAGE-AND-ARGS)
  (WHEN MESSAGE-AND-ARGS (PRIN1 MESSAGE-AND-ARGS TERMINAL-IO))
  (PRIN1 "(Type T or NIL)" TERMINAL-IO)
  (READ TERMINAL-IO))

(DEFUN WITH-PROCESS-INTERACTIVE-PRIORITY-INTERNAL-COLD (IGNORE FUNCTION)
  (FUNCALL FUNCTION))

(DEFVAR *COLD-LOAD-NOTIFICATIONS* NIL)

(DEFUN NOTIFY-COLD (WINDOW-OF-INTEREST FORMAT-CONTROL &REST FORMAT-ARGS)
  (PUSH (LIST* WINDOW-OF-INTEREST FORMAT-CONTROL (COPYLIST FORMAT-ARGS))
	*COLD-LOAD-NOTIFICATIONS*)
  NIL)

(DEFUN PRINT-COLD-NOTIFICATIONS ()
  (DOLIST (E (REVERSE *COLD-LOAD-NOTIFICATIONS*))
    (CL:FRESH-LINE)
    (CL:APPLY #'FORMAT T (REST1 E))))

;; Cold load support of flavors.

(DEFVAR *DEFGENERIC-COLD-FORMS* NIL)

(DEFUN DEFGENERIC-INTERNAL-COLD (&REST ARGS)
  (SETF ARGS (COPYLIST ARGS))
  (PUSH ARGS *DEFGENERIC-COLD-FORMS*)
  NIL)

(DEFVAR *COLD-MAKE-INSTANCE-MARKER*)

(DEFUN MAKE-INSTANCE-COLD (&REST ARGS)
  (LIST* *COLD-MAKE-INSTANCE-MARKER* (COPYLIST ARGS)))

(DEFVAR *COLD-FIND-GENERIC-FUNCTION-MARKER*)

(DEFUN FIND-GENERIC-FUNCTION-AS-CONSTANT-COLD (NAME)
  (LIST *COLD-FIND-GENERIC-FUNCTION-MARKER* NAME))

;; So command loops will work before everything is loaded
(DEFUN WITH-NOTIFICATION-MODE-INTERNAL-COLD (IGNORE IGNORE CONTINUATION)
  (FUNCALL CONTINUATION))

(DEFUN SUBTYPEP-COLD (SUB-TYPE SUPER-TYPE)
  (OR (EQUAL SUB-TYPE SUPER-TYPE)
      (AND (LISTP SUB-TYPE)
	   (EQUAL (FIRST SUB-TYPE) SUPER-TYPE))
      (AND (EQ SUB-TYPE 'SCL:BOOLEAN)
	   (EQUAL SUPER-TYPE '(CL:MEMBER T NIL)))))

(DEFUN COMPILER-BIND-CONTEXT-INTERNAL-COLD (CONTINUATION IGNORE IGNORE)
  (FUNCALL CONTINUATION))

(DEFUN MACHINE-MODEL-COLD ()
  #+3600 :|3600|
  #+IMACH (SYSTEM-CASE
	    (XL400 :|XL400|)
	    (UX400S :|UX400S|)
	    (UX400G :|UX400G|)
	    (XL1200 :|XL1200|)
	    (UX1200S :|UX1200S|)
	    (UX1200G :|UX1200G|)
	    (MacIvory-1&2 (IF (>= (EMB-BOARD-MAJOR-VERSION) 10)
			      :|MacIvory model 2|
			      :|MacIvory model 1|))
	    (MacIvory-3 :|MacIvory model 3|)
	    (Zora :|MB400|)
	    (NXP1000 :|NXP1000|)
	    (Alpha-VLM :|Virtual Lisp Machine|)
	    (OTHERWISE :UNKNOWN)))

(DEFVAR *COLD-LOAD-LOCKS* NIL)
(DEFVAR *COLD-LOAD-LOCK-FLAVOR* NIL)

(DEFUN MAKE-LOCK-COLD (&REST ARGS)
  (WHEN (NULL *COLD-LOAD-LOCK-FLAVOR*)
    (LET ((ARRAY (MAKE-ARRAY 8)))
      (SETF (AREF ARRAY 1) 3)
      (SETF (AREF ARRAY 2) 0)
      (SETF (AREF ARRAY 3) (LOCF (AREF ARRAY 5)))
      (SETF *COLD-LOAD-LOCK-FLAVOR*
	    #+IMACH (LOCF (AREF ARRAY 2))
	    #+3600 (%MAKE-POINTER DTP-LOCATIVE ARRAY))))
  (LET ((FAKE-LOCK (%MAKE-STRUCTURE DTP-INSTANCE DTP-HEADER-P %HEADER-TYPE-INSTANCE
				    *COLD-LOAD-LOCK-FLAVOR* DEFAULT-CONS-AREA 3)))
    (SETF (%INSTANCE-REF FAKE-LOCK 1) NIL)
    (SETF (%INSTANCE-REF FAKE-LOCK 2) (COPYLIST ARGS))
    (PUSH FAKE-LOCK *COLD-LOAD-LOCKS*)
    FAKE-LOCK))

(DEFUN LOCK-INTERNAL-COLD (LOCK LOCK-ARGUMENT)
  (DECLARE (IGNORE LOCK-ARGUMENT))
  (UNLESS (CL:GETF (CDR (%INSTANCE-REF LOCK 2)) :RECURSIVE)
    (ERROR "Lock already locked."))
  T)

(DEFUN UNLOCK-INTERNAL-COLD (LOCK LOCK-ARGUMENT)
  (DECLARE (IGNORE LOCK LOCK-ARGUMENT))
  T)

(DEFUN ABORT-LOCK-COLD (LOCK LOCK-ARGUMENT)
  (STORE-CONDITIONAL (LOCF (%INSTANCE-REF LOCK 1)) LOCK-ARGUMENT NIL))

(DEFUN WAIT-FOR-DISK-DONE-COLD ()
  (%FUNCALL-IN-AUX-STACK #'STORAGE::WAIT-FOR-DISK-DONE))

;;; Lisp Database

(DEFVAR *COLD-LOAD-LISP-DATABASE* NIL)

(DEFVAR *COLD-LOAD-SPECIALS* NIL)

(DEFVAR *COLD-LOAD-CONSTANTS* NIL)

(DEFUN SPECIAL-LOAD-COLD (SYMBOL)
  (PUSH SYMBOL *COLD-LOAD-SPECIALS*)
  SYMBOL)

(DEFUN DEFCONSTANT-LOAD-2-COLD (SYMBOL)
  (PUSH SYMBOL *COLD-LOAD-CONSTANTS*)
  SYMBOL)

(DEFUN MAKE-VARIABLE-OBSOLETE-COLD (SYMBOL REASON IGNORE)
  (PUSH `(,FDEFINE-FILE-PATHNAME LT::MAKE-VARIABLE-OBSOLETE ,SYMBOL ,REASON NIL)
	*COLD-LOAD-LISP-DATABASE*)
  NIL)

(DEFUN GLOBAL-SPECIAL-VARIABLE-P-COLD (SYMBOL &OPTIONAL IGNORE)
  (OR (NOT (NULL (MEMQ SYMBOL *COLD-LOAD-SPECIALS*)))
      (NOT (NULL (MEMQ SYMBOL *COLD-LOAD-CONSTANTS*)))))

(DEFUN NAMED-CONSTANT-P-COLD (SYMBOL &OPTIONAL IGNORE)
  (IF (NOT (NULL (MEMQ SYMBOL *COLD-LOAD-CONSTANTS*)))
      (VALUES T (SYMEVAL SYMBOL))
      NIL))


;Come here when machine starts.  Provides a base frame.

(DEFUN LISP-TOP-LEVEL-COLD ()
  (LISP-INITIALIZE-FIRST-TIME)
  (CATCH 'LISP-TOP-LEVEL-COLD
    (LOOP DOING
      (CATCH 'ERROR-ABORT
	(EMERGENCY-COMMAND-LOOP))))			;never returns
  (INITIALIZE-APPLICATION)
  (LISP-REINITIALIZE-PART-2)
  (PROCESS-DISABLE CURRENT-PROCESS)
  (PROCESS-WAIT-FOREVER))				;use newer top level

(DEFUN LISP-INITIALIZE-FIRST-TIME ()
  ;; make sure a whole host of variables get initialized if they aren't already bound
  (LOOP FOR (VAR VAL) IN *COLD-LOAD-VARIABLE-INITIALIZATIONS*
	UNLESS (BOUNDP VAR) DO (SET VAR VAL))
  ;; Do something at least if errors occur during loading.
  (LOOP FOR (FUNCTION . BOOTSTRAP-FUNCTION) IN *COLD-LOAD-FUNCTION-INITIALIZATIONS*
	UNLESS (FBOUNDP FUNCTION) DO (FSET FUNCTION BOOTSTRAP-FUNCTION))
  ;; We can deal with WIRED-FERROR now
  (SETF WIRED-FERROR-HALT NIL)
  ;; Make sure the GC doesn't think it is inside the scavenger
  (SETQ *SCAVENGE-IN-PROGRESS* NIL)
  (SETQ *INHIBIT-CONSING-FLAG* NIL)
  ;; Permit WIRED-FERROR to try to crawl out to the debugger
  (SETQ *WIRED-FERROR-RECURSION-COUNT* 0)
  (SETQ *DEBUGGER-WIRED-FERROR-RECURSION* 0)
  ;; Do some once-only initializations (might get here again if warm-boot before QLD finishes)
  (UNLESS (VARIABLE-BOUNDP SYN-TERMINAL-IO)
    ;; Packages
    (BUILD-INITIAL-PACKAGES)
    ;; Forward Symbol Cells
    (BOOTSTRAP-FORWARD-SYMBOL-CELLS)
    ;; Do all of the random initializations
    (MAPC #'EVAL *COLD-LOAD-DEFERRED-FORMS*))
  ;; If this is a warm-boot, do cold-load version of RESET-WARM-BOOT-BINDINGS
  (LOOP FOR (SYMBOL VALUE) IN *WARM-BOOT-BINDINGS* DO
    (SET SYMBOL VALUE))
  ;; Attach IO streams.
  (INITIALIZE-COLD-LOAD-STREAM)
  (SETQ SYN-TERMINAL-IO (MAKE-SYN-STREAM 'TERMINAL-IO))
  (SETQ TERMINAL-IO     COLD-LOAD-STREAM
	STANDARD-OUTPUT SYN-TERMINAL-IO
	STANDARD-INPUT  SYN-TERMINAL-IO
	QUERY-IO        SYN-TERMINAL-IO
	TRACE-OUTPUT    SYN-TERMINAL-IO
	ERROR-OUTPUT    SYN-TERMINAL-IO
	DEBUG-IO	SYN-TERMINAL-IO)
  (SEND TERMINAL-IO :SELECT)
  (SEND TERMINAL-IO :HOME-CURSOR)
  ;; The command loop
  (FUNCALL STANDARD-OUTPUT :CLEAR-EOL)
  (SETQ PACKAGE PKG-SYSTEM-INTERNALS-PACKAGE)	;Should be SI in cold load
  (SETQ READTABLE STANDARD-READTABLE)
  (PRINC "Lisp Machine cold load environment, congratulations!")
  (TERPRI)
  (PRINC "Use (DBG:EMERGENCY-DEBUGGER) to do crude debugging")
  (TERPRI)
  (PRINC "Package ")
  (PRINC PACKAGE)
  (TERPRI)
  (LOOP FOR (SYM . OTHER) IN *COLD-LOAD-DUPLICATED-SYMBOLS* DO
    (PRINC "WARNING: The symbol ")
    (PRIN1 OTHER)
    (PRINC " in package ")
    (PRINC (SYMBOL-PACKAGE OTHER))
    (PRINC " is preventing the symbol at address ")
    (PRIN1 (%POINTER SYM))
    (PRINC " in package ")
    (PRINC (SYMBOL-PACKAGE SYM))
    (PRINC " from being interned where it belongs.")
    (TERPRI))
  (TERPRI)
  (DBG:ENABLE-TRAPPING)
  NIL)


;;; System initialization

(DEFVAR QLD-MINI-DONE NIL)
(DEFVAR QLD-INNER-SYSTEM-LOADED NIL)
(DEFVAR COLD-LOAD-VERSION-NUMBER NIL)

(DEFVAR *QLD-MESSAGES*)		;A string containing everything that was printed during QLD

;;; Procedure for booting up a world load:
;;; 1. Use MINI to load kernel system, viz. FORMAT, flavors, processes, error handler,
;;;    chaos, QFILE.
;;; 2. Do like a cold boot.  This turns on the real file system.
;;; 3. Load MAKSYS and SYSDCL to build the initial systems.
;;; 4. Use MAKE-SYSTEM to load the rest of the top level system.
;;; (It would be nice to use MAKE-SYSTEM's version control to keep out undebugged
;;;  changes, but since there aren't any tools for modifying the files remembered
;;;  in the directory, that's even more inconvenient, so always load the newest
;;;  versions and then later construct the directory to correspond to them.)
(DEFUN QLD (&KEY
	    ((:GC-ON GC) '(:DYNAMIC NIL :EPHEMERAL T))
	    (LOAD-KEYWORDS '(:VERSION :NEWEST :QUERY :NO-CONFIRM
			     :NO-RELOAD-SYSTEM-DECLARATION T))
	    (MINI-ADDRESS MINI-DESTINATION-ADDRESS)
	    (MINI-ROUTER-ADDRESS NIL MINI-ROUTER-GIVEN)
	    (MINI-ALISTS-FILE  #+3600 "SYS:SYS;MINI-ALISTS.BIN.NEWEST"
			       #+(and IMach (not VLM)) "SYS:SYS;MINI-ALISTS.IBIN.NEWEST"
			       #+(and IMach VLM) "SYS:SYS;MINI-ALISTS.VBIN.NEWEST")
	    (RESTART-ALIST NIL)
	    (RESTART-FILE NIL)
	    (STOP-AFTER NIL))
  (SI:MINI-INIT)
  (LET* ((STRING-STREAM (CL:MAKE-STRING-OUTPUT-STREAM))
	 (STANDARD-OUTPUT (CL:MAKE-BROADCAST-STREAM TERMINAL-IO STRING-STREAM))
	 (ERROR-OUTPUT STANDARD-OUTPUT))
    (COND ((NULL QLD-MINI-DONE)
	   (TERPRI)
	   (PRINC "Loading inner system")
	   (TERPRI)
	   (LET ((MINI-DESTINATION-ADDRESS MINI-ADDRESS)
		 (MINI-ROUTING-ADDRESS (COND (MINI-ROUTER-GIVEN
					      MINI-ROUTER-ADDRESS)
					     (( (LDB (BYTE 8 8) MINI-ADDRESS)
						 (LDB (BYTE 8 8) CHAOS:MY-ADDRESS))
					      MINI-ROUTING-ADDRESS)
					     (T MINI-ADDRESS))))
	     ;; Load up all of the alists.
	     (MINI-LOAD-FILE MINI-ALISTS-FILE "CLI" T)
	     (WHEN (OR (NULL RESTART-ALIST) (EQ RESTART-ALIST ':INNER))
	       ;; Now load the inner system.
	       (MINI-LOAD-FILE-ALIST INNER-SYSTEM-FILE-ALIST RESTART-FILE))
	     (WHEN (EQ STOP-AFTER :INNER) (RETURN-FROM QLD STOP-AFTER))
	     ;; Even though PATHNM is now loaded, it doesn't work yet.  So must disable
	     ;; FS:MAKE-FASLOAD-PATHNAME until it does.
	     (LET ((USER-ID "Cold-Load"))	;So FORCE-USER-TO-LOGIN won't bomb.
	       (LETF ((#'FS:MAKE-FASLOAD-PATHNAME #'LIST))
		 (WHEN (OR (NULL RESTART-ALIST) (MEMQ RESTART-ALIST '(:INNER :PATHNAME)))
		   (MINI-LOAD-FILE-ALIST REST-OF-PATHNAMES-FILE-ALIST RESTART-FILE))
		 (WHEN (EQ STOP-AFTER :PATHNAME) (RETURN-FROM QLD STOP-AFTER))
		 (WHEN (OR (NULL RESTART-ALIST) (MEMQ RESTART-ALIST
						      '(:INNER :PATHNAME :NETWORK)))
		   ;; Now load the network specific code.
		   (MINI-LOAD-FILE-ALIST CHAOS-FILE-ALIST RESTART-FILE))
		 (WHEN (EQ STOP-AFTER :NETWORK) (RETURN-FROM QLD STOP-AFTER)))))
	   (SETQ QLD-INNER-SYSTEM-LOADED T)
	   ;; Print wants a table, now that we have tables.
	   (INITIALIZE-PRINT-OBJECT-PRESENTATION-TYPE-TABLE)
	   ;; Namespaces will not work until the network does, so the bootstrap
	   ;; files better talk about the sys host's physical host.
	   (NETI:QLD-INITIALIZE-NAMESPACES)
	   ;; Create some dummy hosts needed by stuff in the pathname system.
	   (NETI:SETUP-SAMPLE-HOSTS)
	   ;; Get logged in.
	   (QLD-RUN-INITIALIZATIONS GC)
	   ;;Update properties for real pathnames
	   (FS:CANONICALIZE-COLD-LOAD-PATHNAMES)
	   ;;Load System System stuff
	   (DOLIST (F SYSTEM-SYSTEM-FILE-ALIST)
	     (LOOP NAMED RELOAD-S
		   DO
	       (CATCH 'MINI-RELOAD-FILE
		 (FORMAT T "~&Loading ~A into package ~A..." (FIRST F) (SECOND F))
		 (LOAD-BINARY-FILE (FIRST F) (SECOND F))
		 (RETURN-FROM RELOAD-S NIL))))
	   ;;Note that things more or less work.
	   (SETQ QLD-MINI-DONE T))
	  (T (QLD-RUN-INITIALIZATIONS GC)))	;So that we can do file I/O
    (WHEN (EQ STOP-AFTER :MINI) (RETURN-FROM QLD STOP-AFTER))
    (FORMAT T "~&Loading rest of world...")
    (SETQ INHIBIT-SCHEDULING-FLAG NIL)		;So the network can work.
    (LEXPR-FUNCALL #'SCT:LOAD-SYSTEM 'SYSTEM LOAD-KEYWORDS)
    (SETQ COLD-LOAD-VERSION-NUMBER
	  (LET ((PATHNAME (LOADED-BAND-NAME)))
	    (AND (CL:PATHNAMEP PATHNAME)
		 (FIXP (SEND PATHNAME :VERSION))
		 (SEND PATHNAME :VERSION))))
    ;; RUN any forms which were queued up for later execution
    (INITIALIZATIONS '*AFTER-LOADING-SYSTEM-SYSTEM-INITIALIZATION-LIST* T)
    ;; Save everything that was printed up until now
    (SETQ *QLD-MESSAGES* (CL:GET-OUTPUT-STREAM-STRING STRING-STREAM))
    (WITH-OPEN-FILE (CL:*STANDARD-OUTPUT* (FORMAT NIL
						  "DIS-SYS-HOST:>wobbly>~D>~a-qld-build.log"
						  (SCT:GET-SYSTEM-VERSION)
						  (PROGN #+3600 "3600"
							 #+(and IMach (not VLM)) "IMACH"
							 #+(and IMach VLM) "VLM"))
					  :DIRECTION :OUTPUT)
      (CL:WRITE-STRING *QLD-MESSAGES*)
      (FORMAT T "~2&Notifications:")
      (PRINT-COLD-NOTIFICATIONS)))
  ;; Now that windows are loaded, we can use them
  (SETF #'LISP-TOP-LEVEL 'LISP-TOP-LEVEL-WARM)

  (FORMAT T "~&Switching to initial Lisp Listener...")
  (THROW 'LISP-TOP-LEVEL-COLD NIL))		;so the CP can be used,
						; caller is not a real command-loop

(DEFUN QLD-RUN-INITIALIZATIONS (&OPTIONAL (GC '(:EPHEMERAL T :DYNAMIC NIL)))
  (LOGIN-TO-SYS-HOST)
  ;; These are initializations that have to be done before other initializations
  (INITIALIZATIONS 'SYSTEM-INITIALIZATION-LIST T)
  ;; +++---+++ Temp kludge
  ;; This variable must be initialized before the GC can flip on a VLM but can't be setup
  ;; by the cold load generator as it doesn't know about ETHER-BUFFER-AREA.
  #+VLM (SETQ NETI:%ETHER-BUFFER-AREA-REGION (AREA-REGION-LIST NETI:ETHER-BUFFER-AREA))
  #+VLM (SETQ SI:DISK-ARRAY-AREA-REGION (AREA-REGION-LIST SI:DISK-ARRAY-AREA))
  ;; The GC is ready to go
  (IF GC
      (LEXPR-FUNCALL #'GC-ON :QUERY-P NIL GC)
      (GC-OFF))
  ;; Standard cold boot initializations
  (INITIALIZATIONS 'COLD-INITIALIZATION-LIST T)
  ;; Rev up the network
  (NETI:INITIALIZE-NAMESPACES-AND-NETWORK)
  ;; Standard warm boot initializations
  (INITIALIZATIONS 'WARM-INITIALIZATION-LIST T))

	   

;;; This is used for things like host tables which can get loaded again when the world
;;; is already built.
(DEFUN MAYBE-MINI-LOAD-FILE-ALIST (ALIST)
  (IF (NOT QLD-MINI-DONE)
      (MINI-LOAD-FILE-ALIST ALIST)
      (DOLIST (F ALIST)
	(LOAD (CAR F) (CADR F)))))

(DEFUN MAYBE-MINI-LOAD-FILE (FILE PKG BINARY-P)
  (IF QLD-MINI-DONE
      (LOAD FILE PKG)
    (MINI-LOAD-FILE FILE PKG BINARY-P)))

(DEFUN MINI-LOAD-FILE (FILE PKG BINARY-P &OPTIONAL BAS)
  (loop named mini-loading-file
	do
    (catch 'mini-reload-file
      (PRINC "Opening ") (PRINC FILE) (PRINC " ...")
      (LET ((STREAM (MINI-OPEN-FILE FILE BINARY-P)))
	(PRINC " loading ...")
	(LET-IF BAS ((IBASE BAS)
		     (BASE BAS))
	  (IF BINARY-P
	      (LOAD-BINARY-FILE-INTERNAL STREAM PKG T)
	      (READFILE-INTERNAL STREAM PKG T)))
	(PRINC " closing ...")
	(FUNCALL STREAM ':CLOSE)
	(TERPRI))
      (return-from mini-loading-file nil))))

(defun mini-reload-file () (throw 'mini-reload-file nil))

(DEFUN MINI-LOAD-PATCHES (&KEY
			  (MINI-ADDRESS MINI-DESTINATION-ADDRESS)
			  (MINI-ROUTER-ADDRESS NIL MINI-ROUTER-GIVEN))
  (TERPRI)
  (MINI-INIT)
  (LET ((MINI-DESTINATION-ADDRESS MINI-ADDRESS)
	(MINI-ROUTING-ADDRESS (COND (MINI-ROUTER-GIVEN
				     MINI-ROUTER-ADDRESS)
				    (( (LDB (BYTE 8 8) MINI-ADDRESS)
					(LDB (BYTE 8 8) CHAOS:MY-ADDRESS))
				     MINI-ROUTING-ADDRESS)
				    (T MINI-ADDRESS))))
    (MINI-LOAD-FILE #+3600  "SYS: L-SYS; COLD-PATCHES.BIN.NEWEST"
		    #+(and IMach (not VLM)) "SYS: I-SYS; COLD-PATCHES.IBIN.NEWEST"
		    #+(and IMach VLM) "SYS: I-SYS; COLD-PATCHES.VBIN.NEWEST"
		    "SI" T)))

;;; Load a file alist as setup by the cold load generator
(DEFUN MINI-LOAD-FILE-ALIST (ALIST &OPTIONAL RESTART)
  (WHEN RESTART (SETQ ALIST
		      (LOOP FOR ALI ON ALIST BY #'CDR
			    AS (FILENAME PACK BINARY-P BAS) = (CAR ALI)
			    DO (IGNORE PACK BINARY-P BAS)
			    WHEN (STRING-SEARCH RESTART FILENAME)
			      DO (RETURN ALI)
			    FINALLY (RETURN ALIST))))
  (LOOP NAMED MINI-LOADING-FILE-ALIST WITH ALIST = ALIST
	AS RESTART =
	   (CATCH 'MINI-RELOAD-ALIST
	     (LOOP FOR (FILENAME PACK BINARY-P BAS) IN ALIST
		   DO (MINI-LOAD-FILE FILENAME PACK BINARY-P BAS))
	     (RETURN-FROM MINI-LOADING-FILE-ALIST NIL))
	DO
    (WHEN RESTART (SETQ ALIST
			(LOOP FOR ALI ON ALIST BY #'CDR
			      AS (FILENAME PACK BINARY-P BAS) = (CAR ALI)
			      DO (IGNORE PACK BINARY-P BAS)
			      WHEN (STRING-SEARCH RESTART FILENAME)
				DO (RETURN ALI)
			      FINALLY (RETURN ALIST))))))

(defun mini-restart-alist (&optional from-file-string)
  (throw 'mini-reload-alist from-file-string))


(DEFUN GENERIC-FUNCTION-DEBUGGING-INFO-COLD (GENERIC-FUNCTION)
  (GENERIC-FUNCTION-DEBUGGING-INFO GENERIC-FUNCTION))

(DEFUN COMPILED-FUNCTION-INTERNAL-FUNCTION-OFFSETS-COLD (COMPILED-FUNCTION)
  (LET ((DEBUG-INFO (CDR (CCA-EXTRA-INFO (COMPILED-FUNCTION-CCA COMPILED-FUNCTION)))))
    (DOLIST (ELEM DEBUG-INFO)
      (WHEN (AND (CL:CONSP ELEM)
		 (EQ (CAR ELEM) (PROGN #+3600 :INTERNAL-FUNCTION-OFFSETS
				       #+IMACH :INTERNAL-FUNCTIONS)))
	(RETURN (CDR ELEM))))))


(DEFUN COLD-PROCESS-PRIORITY-LESSP (PROC1 PROC2)
  (PROCESS:PROCESS-PRIORITY-LESSP PROC1 PROC2))

#+IMACH
(DEFUN COLD-OPCODE-FOR-INSTRUCTION (OPCODE)
  (MACROLET ((ESELECT-OPCODE (OPCODE &REST OPCODES)
	       `(CL:ECASE ,OPCODE
		  ,@(MAPCAR #'(LAMBDA (OPCODE)
			       `(,OPCODE ,(I-LISP-COMPILER:OPCODE-FOR-INSTRUCTION OPCODE)))
			   OPCODES))))
    (ESELECT-OPCODE OPCODE
      %READ-INTERNAL-REGISTER
      RETURN-SINGLE
      PUSH
      %WRITE-INTERNAL-REGISTER
      %COPROCESSOR-READ
      %COPROCESSOR-WRITE
      %MEMORY-READ
      %MEMORY-READ-ADDRESS)))

(DEFUN COLD-FIND-CLASS (CLASS-NAME &OPTIONAL (ERRORP T) ENVIRONMENT)
  CLASS-NAME ENVIRONMENT
  (WHEN ERRORP
    (ERROR "CLOS not loaded"))
  NIL)

(DEFUN COLD-FIND-PACKAGE (NAME)
  (PKG-FIND-PACKAGE NAME :FIND :COMMON-LISP))
