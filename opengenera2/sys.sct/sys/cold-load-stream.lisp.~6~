;;; -*- Package:SYSTEM-INTERNALS; Mode:LISP; Base:8 -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>
;;; Kludge stream for use before machine has a console.
;;; This file is in the cold load.

;;; This works before there are flavors.
;;; Characters sent over the line are 32 bits, the top 8 bits are the opcode
;;; and the low 24 bits the argument(s).
(DEFCONSTANT *COLD-LOAD-OP-DRAW-CHAR* 0)
(DEFCONSTANT *COLD-LOAD-OP-SET-CURSORPOS* 1)
(DEFCONSTANT *COLD-LOAD-OP-CLEAR-REST-OF-LINE* 2)
(DEFCONSTANT *COLD-LOAD-OP-CLEAR-REST-OF-WINDOW* 3)
(DEFCONSTANT *COLD-LOAD-OP-DISPLAY-LOZENGED-STRING* 4)
(DEFCONSTANT *COLD-LOAD-OP-LOZENGED-CHAR* 5)
(DEFCONSTANT *COLD-LOAD-OP-BEEP* 12)
(DEFCONSTANT *COLD-LOAD-OP-SELECT* 13) 
(DEFCONSTANT *COLD-LOAD-OP-DESELECT* 14)

(DEFCONSTANT *COLD-LOAD-OP-INPUT-CHAR* 200)
(DEFCONSTANT *COLD-LOAD-OP-SET-SIZE* 201)

(DEFSTRUCT (COLD-LOAD-STREAM-RUBOUT-HANDLER-BUFFER
	     (:TYPE :ARRAY-LEADER)
	     (:MAKE-ARRAY (:LENGTH 512. :TYPE 'ART-STRING))
	     (:DEFAULT-POINTER *COLD-LOAD-STREAM-RUBOUT-HANDLER-BUFFER*)
	     (:CONC-NAME RHB-))
  (FILL-POINTER 0)
  (SCAN-POINTER 0)
  (NOISE-STRINGS NIL))

(DEFVAR TV:MORE-PROCESSING-TRULY-GLOBAL-ENABLE T
  "This variable must only ever be SETQ'd, and never bound.")

(DEFVAR TV:MORE-PROCESSING-GLOBAL-ENABLE NIL)	;Set to T when disk saving

;;; TV:MORE-PROCESSING-GLOBAL-ENABLE was intended to be the global that controls
;;; whether all windows, in the absence of local *More* disablement, will have
;;; more-processing enabled.  The redundant global
;;; TV:MORE-PROCESSING-TRULY-GLOBAL-ENABLE was added to the system in an attempt to
;;; overcome the bad practice in some existing software of binding
;;; TV:MORE-PROCESSING-GLOBAL-ENABLE to its existing value, which prevents the user
;;; from turning off more-processing with FUNCTION 0 M for the duration of lengthy
;;; operations.  Window more-processing now causes a *More* break only if both
;;; variables are non-NIL, and FUNCTION M only bothers to set or unset
;;; TV:MORE-PROCESSING-TRULY-GLOBAL-ENABLE.  Reset both to T when saving a new
;;; world, to preserve the default behavior that more-processing is turned on.
;;;
(ADD-INITIALIZATION "Enable more-processing"
		    '(SETQ TV:MORE-PROCESSING-GLOBAL-ENABLE T
			   TV:MORE-PROCESSING-TRULY-GLOBAL-ENABLE T)
		    '(:SYSTEM-SHUTDOWN))

(DEFVAR *COLD-LOAD-STREAM-WIDTH* 1000)
(DEFVAR *COLD-LOAD-STREAM-HEIGHT* 300)
(DEFVAR *COLD-LOAD-STREAM-CURSOR-X* 0)
(DEFVAR *COLD-LOAD-STREAM-CURSOR-Y* 0)
(DEFVAR *COLD-LOAD-STREAM-CHAR-WIDTH* 10)
(DEFVAR *COLD-LOAD-STREAM-LINE-HEIGHT* 16)
(DEFVAR *COLD-LOAD-STREAM-UNRCHF* NIL)
(DEFVAR *COLD-LOAD-STREAM-RUBOUT-HANDLER-BUFFER*
	(MAKE-COLD-LOAD-STREAM-RUBOUT-HANDLER-BUFFER))
(DEFVAR *COLD-LOAD-STREAM-ACTIVATOR* NIL)
(DEFVAR *COLD-LOAD-STREAM-SELECTED* NIL)

(DEFCONST COLD-LOAD-STREAM 'COLD-LOAD-STREAM-IO)

(DEFPROP COLD-LOAD-STREAM-IO T IO-STREAM-P)

;;;

(DEFUN COLD-LOAD-DISPLAY-PROMPT (PROMPT)
  (DISPLAY-PROMPT-OPTION 'COLD-LOAD-STREAM-IO PROMPT))

;; Perform some operation on all noise strings between START and END.
;; The INDEX and STRING variables get assigned within the loop.
;; The START variable will have a new value after the loop has finished.
(DEFMACRO COLD-LOAD-LOOP-OVER-NOISE-STRINGS ((INDEX STRING START &OPTIONAL END) &BODY BODY)
  `(LOOP FOR (,INDEX . ,STRING) IN (RHB-NOISE-STRINGS)
	 UNTIL (AND ,END (> ,INDEX ,END))
	 DO (WHEN (> ,INDEX ,START)
	      ,@BODY
	      (SETQ ,START ,INDEX))))

(DEFUN COLD-LOAD-REFRESH-BUFFER (PROMPT)
  (COLD-LOAD-DISPLAY-PROMPT PROMPT)
  (LET ((START 0))
    (COLD-LOAD-LOOP-OVER-NOISE-STRINGS (INDEX STRING START NIL)
      (COLD-LOAD-STREAM-IO :STRING-OUT *COLD-LOAD-STREAM-RUBOUT-HANDLER-BUFFER* START INDEX)
      (COLD-LOAD-STREAM-IO :STRING-OUT STRING))
    (COLD-LOAD-STREAM-IO :STRING-OUT *COLD-LOAD-STREAM-RUBOUT-HANDLER-BUFFER* START)))

(DEFSUBST COLD-LOAD-STREAM-P (STREAM)
  (EQ (FOLLOW-SYN-STREAM STREAM) 'COLD-LOAD-STREAM-IO))

(DEFUN COLD-LOAD-STREAM-IO-DEFAULT-HANDLER (OPERATION &OPTIONAL ARG1 &REST ARGS)
  (STREAM-DEFAULT-HANDLER 'COLD-LOAD-STREAM-IO OPERATION ARG1 ARGS))

(DEFUN COLD-LOAD-STREAM-RUBOUT-HANDLER-CATCH (READ-FUNCTION READ-ARGS)
  ;; This should really be done on the way out
  (SETF (RHB-FILL-POINTER) 0)
  (SETF (RHB-NOISE-STRINGS) NIL)
  (COLD-LOAD-DISPLAY-PROMPT (INPUT-EDITOR-OPTION :PROMPT))
  (UNWIND-PROTECT
    (DO ((RUBOUT-HANDLER T)			;Establish rubout handler
	 (INHIBIT-SCHEDULING-FLAG T))		;Make sure all chars come here
	(NIL)
      (CATCH 'RUBOUT-HANDLER			;Throw here when rubbing out
	(SETF (RHB-SCAN-POINTER) 0)
	(CONDITION-CASE (ERROR)
	    (RETURN (APPLY READ-FUNCTION READ-ARGS))
	  (PARSE-ERROR
	    ;; Clear the activator cell in case this error was triggered by an activator
	    ;; but was untyi'ed before PARSE-ERROR was called.
	    (SETF *COLD-LOAD-STREAM-ACTIVATOR* NIL)
	    (COLD-LOAD-STREAM-IO :FRESH-LINE)
	    (SEND ERROR :REPORT 'COLD-LOAD-STREAM-IO)
	    (WHEN (SEND ERROR :CORRECT-INPUT)
	      (COLD-LOAD-STREAM-IO :FRESH-LINE)
	      (COLD-LOAD-STREAM-IO :LINE-OUT "Type  to correct your input."))
	    (COLD-LOAD-REFRESH-BUFFER (INPUT-EDITOR-OPTION :PROMPT))
	    ;; If some in-band character triggered the error, then force the user to edit it.
	    (WHEN (SEND ERROR :CORRECT-INPUT)
	      (DO () (NIL) (COLD-LOAD-STREAM-IO :TYI))))))
      ;; Maybe return when user rubs all the way back.
      (WHEN (ZEROP (RHB-FILL-POINTER))
	(LET ((FULL-RUBOUT-OPTION (INPUT-EDITOR-FLAG :FULL-RUBOUT)))
	  (AND FULL-RUBOUT-OPTION (RETURN (VALUES NIL FULL-RUBOUT-OPTION))))))
    ;; Clear garbage leftover.
    (SETF *COLD-LOAD-STREAM-ACTIVATOR* NIL)))

(DEFUN COLD-LOAD-STREAM-RUBOUT-HANDLER-TYI ()
  (DO ((CH)
       (RUBBED-OUT-SOME)
       (LEN)
       (RUBOUT-HANDLER NIL)
       (BLIP-CHARACTER (INPUT-EDITOR-OPTION :BLIP-CHARACTER))
       (ACTIVATION (INPUT-EDITOR-OPTION :ACTIVATION))
       (FULL-RUBOUT (INPUT-EDITOR-FLAG :FULL-RUBOUT))
       HELP-OPTION)
      (NIL)
    (SETQ CH (COLD-LOAD-STREAM-IO :TYI))
    (COND
      ;; Blip character is returned immediately as a blip.
      ;; Don't use ` when constructing the blip.  Every cons must be rplac'able.
      ((AND BLIP-CHARACTER (LEXPR-FUNCALL (CAR BLIP-CHARACTER) CH (CDR BLIP-CHARACTER)))
       (RETURN (LIST :BLIP-CHARACTER CH NIL)))
      ;; Activation character is also returned as a blip, but first rescan if necessary.
      ;; Don't use ` when constructing the blip.  Every cons must be rplac'able.
      ((AND ACTIVATION (LEXPR-FUNCALL (CAR ACTIVATION) CH (CDR ACTIVATION)))
       (COND ((NOT RUBBED-OUT-SOME)
	      (RETURN (LIST :ACTIVATION CH NIL)))
	     (T (SETQ *COLD-LOAD-STREAM-ACTIVATOR* (LIST :ACTIVATION CH NIL))
		(THROW 'RUBOUT-HANDLER NIL))))
      ;; Retype buffered input
      ((CHAR= CH #\REFRESH)
       (COLD-LOAD-STREAM-IO :CLEAR-WINDOW)
       (COLD-LOAD-REFRESH-BUFFER (OR (INPUT-EDITOR-OPTION :REPROMPT)
				     (INPUT-EDITOR-OPTION :PROMPT))))
      ((CHAR= CH #\CONTROL-REFRESH)
       (COLD-LOAD-STREAM-IO :FRESH-LINE)
       (COLD-LOAD-REFRESH-BUFFER (OR (INPUT-EDITOR-OPTION :REPROMPT)
				     (INPUT-EDITOR-OPTION :PROMPT))))
      ;; Clear-Input flushes all buffered input.
      ((CHAR= CH #\CLEAR-INPUT)
       (COLD-LOAD-ERASE-CHARS (RHB-FILL-POINTER))
       (SETF (RHB-FILL-POINTER) 0)
       (SETF (RHB-NOISE-STRINGS) NIL)
       (SETQ RUBBED-OUT-SOME T))
      ((CHAR= CH #\RUBOUT)
       (COND ((ZEROP (SETQ LEN (RHB-FILL-POINTER)))
	      (COLD-LOAD-STREAM-IO :BEEP))
	     (T (COLD-LOAD-ERASE-CHARS 1)
		(SETF (RHB-NOISE-STRINGS)
		      (DELQ (ASSQ LEN (RHB-NOISE-STRINGS))
			    (RHB-NOISE-STRINGS)))
		(DECF LEN)
		(SETF (RHB-FILL-POINTER) LEN)
		(SETQ RUBBED-OUT-SOME T)
		(WHEN (AND (ZEROP LEN) FULL-RUBOUT)
		  (THROW 'RUBOUT-HANDLER NIL)))))
      ((CHAR= CH #\HELP)
       (COLD-LOAD-STREAM-IO :FRESH-LINE)
       (COND ((SETQ HELP-OPTION (OR (INPUT-EDITOR-OPTION :BRIEF-HELP)
				    (INPUT-EDITOR-OPTION :COMPLETE-HELP)))
	      (DISPLAY-HELP-OPTION #'COLD-LOAD-STREAM-IO HELP-OPTION))
	     ((SETQ HELP-OPTION (INPUT-EDITOR-OPTION :MERGED-HELP))
	      (LEXPR-FUNCALL (CAR HELP-OPTION) #'COLD-LOAD-STREAM-IO #'IGNORE
			     (CDR HELP-OPTION)))
	     ((SETQ HELP-OPTION (INPUT-EDITOR-OPTION :PARTIAL-HELP))
	      (DISPLAY-HELP-OPTION #'COLD-LOAD-STREAM-IO HELP-OPTION))
	     (T (COLD-LOAD-STREAM-IO :STRING-OUT "This is the cold load stream.")))
       (COLD-LOAD-STREAM-IO :FRESH-LINE)
       (COLD-LOAD-REFRESH-BUFFER (OR (INPUT-EDITOR-OPTION :REPROMPT)
				     (INPUT-EDITOR-OPTION :PROMPT))))
      ((NOT (ZEROP (CHAR-BITS CH)))
       (COLD-LOAD-STREAM-IO :BEEP))
      (T
       (COLD-LOAD-STREAM-IO :TYO CH)
       (ARRAY-PUSH-EXTEND *COLD-LOAD-STREAM-RUBOUT-HANDLER-BUFFER* CH)
       (COND (RUBBED-OUT-SOME
	      (THROW 'RUBOUT-HANDLER NIL))
	     (T
	      (SETF (RHB-SCAN-POINTER) (RHB-FILL-POINTER))
	      (RETURN CH)))))))

;;; These variables are semi-obsolete.  After full initialization, they
;;; are forwarded to the corresponding instance variables of the main
;;; console.
(DEFVAR KBD-LEFT-SHIFTS 0)
(DEFVAR KBD-RIGHT-SHIFTS 0)
(DEFVAR KBD-KEY-STATES (MAKE-ARRAY 256. :TYPE 'ART-BOOLEAN))
(DEFVAR KBD-FAST-FILL-KEY-STATES (MAKE-ARRAY 8 :TYPE 'ART-FIXNUM :DISPLACED-TO KBD-KEY-STATES))
(DEFVAR SHIFT-LOCK-XORS NIL)

;;; Redefined by real console system.
(DEFUN INITIALIZE-CONSOLE-COLD ()
  (SETQ KBD-LEFT-SHIFTS 0
	KBD-RIGHT-SHIFTS 0)
  (FILL-ARRAY KBD-FAST-FILL-KEY-STATES NIL 0))

;;; Can return NIL if character wasn't really a character.
;;; This is a stripped down version of (keyboard-convert-to-software-char keyboard);
;;; in particular, it doesn't bother with repeating or wakeups.
(DEFUN KBD-CONVERT-TO-SOFTWARE-CHAR-COLD (HARD-CHAR)
  (LET ((TYPE (LDB %%KBD-HARDWARE-CHAR-OPCODE HARD-CHAR)))
    (SELECTOR TYPE =
      (%TYPE-ALL-KEYS-UP
	(FILL-ARRAY KBD-FAST-FILL-KEY-STATES NIL 0)
	(LET ((MASK (LDB %%KBD-HARDWARE-CHAR-KEY-SHIFTS HARD-CHAR)))
	  (SETQ KBD-LEFT-SHIFTS (LOGAND KBD-LEFT-SHIFTS MASK)
		KBD-RIGHT-SHIFTS (LOGAND KBD-RIGHT-SHIFTS MASK)
		;; This is for keys that are down that we thought were up, e.g. caps lock.
		KBD-LEFT-SHIFTS (LOGIOR
				  (LOGAND
				    (BOOLE CL:BOOLE-NOR KBD-LEFT-SHIFTS KBD-RIGHT-SHIFTS)
				    MASK)
				  KBD-LEFT-SHIFTS)))
	NIL)
      ((%TYPE-KEY-UP %TYPE-KEY-DOWN)
       (LET* ((KEY-CODE (LDB %%KBD-HARDWARE-CHAR-KEY-NUMBER HARD-CHAR))
	      (SHIFTS (LOGIOR KBD-LEFT-SHIFTS KBD-RIGHT-SHIFTS))
	      (MAPPING (MAP-KEY-TO-SOFTWARE-CHAR
			 (DPBS (LDB %%KBD-SHIFTS-SHIFT SHIFTS) %%KBD-MAPPING-TABLE-INDEX-SHIFT
			       (LDB %%KBD-SHIFTS-SYMBOL SHIFTS)
			       %%KBD-MAPPING-TABLE-INDEX-SYMBOL 0)
			 KEY-CODE)))
	 (COND ((NOT (CL:SETF (AREF KBD-KEY-STATES KEY-CODE) (= TYPE %TYPE-KEY-DOWN)))
		(WHEN (AND (FIXP MAPPING)
			   (LDB-TEST %%KBD-MAPPING-SPECIAL MAPPING))
		  (SELECTOR (LDB %%KBD-MAPPING-SPECIAL-CLASS MAPPING) =
		    (%KBD-MAPPING-SPECIAL-SHIFT
		      (LET ((BIT (BYTE 1 (LDB %%KBD-MAPPING-BIT-NUMBER MAPPING))))
			(IF (LDB-TEST %%KBD-MAPPING-RIGHT-P MAPPING)
			    (SETF (LDB BIT KBD-RIGHT-SHIFTS) 0)
			    (SETF (LDB BIT KBD-LEFT-SHIFTS) 0))))))
		NIL)
	       ;; We don't apply caps lock of bits to non-integer mappings.
	       ((NOT (FIXP MAPPING)) MAPPING)
	       ((NOT (LDB-TEST %%KBD-MAPPING-SPECIAL MAPPING))
		(LET ((SOFT-CHAR (CODE-CHAR MAPPING))
		      (BITS (LDB %%KBD-SHIFTS-BITS SHIFTS)))
		  (COND ((NOT (ZEROP BITS))
			 ;; Control character, swap cases, ignore caps lock
			 (MAKE-CHAR (CHAR-FLIPCASE SOFT-CHAR) BITS))
			((AND (BOTH-CASE-P SOFT-CHAR)
			      ;; Not a control character, caps lock applies
			      (LDB-TEST %%KBD-SHIFTS-CAPS-LOCK SHIFTS))
			   (IF SHIFT-LOCK-XORS
			       (CHAR-FLIPCASE SOFT-CHAR)
			       (CHAR-UPCASE SOFT-CHAR)))
			(T SOFT-CHAR))))
	       (T
		(SELECTOR (LDB %%KBD-MAPPING-SPECIAL-CLASS MAPPING) =
		  (%KBD-MAPPING-SPECIAL-SHIFT
		    (LET ((BIT (BYTE 1 (LDB %%KBD-MAPPING-BIT-NUMBER MAPPING))))
		      (IF (LDB-TEST %%KBD-MAPPING-RIGHT-P MAPPING)
			  (SETF (LDB BIT KBD-RIGHT-SHIFTS) 1)
			  (SETF (LDB BIT KBD-LEFT-SHIFTS) 1))))
		  (%KBD-MAPPING-SPECIAL-UNASSIGNED
		    (BEEP NIL 'COLD-LOAD-STREAM-IO)))
		NIL)))))))


;;; This is initialized at compile time because doing so requires the keyboard layout
;;; subsystem.
(DEFVAR KBD-NEW-TABLE '#.CLI::(MAKE-KEYBOARD-TABLE *SYMBOLICS-KEYBOARD-MAPPING*))

(DEFUN MAP-KEY-TO-SOFTWARE-CHAR-COLD (SHIFT-INDEX CHAR-INDEX
				      &OPTIONAL (TABLE KBD-NEW-TABLE))
  (AREF TABLE SHIFT-INDEX CHAR-INDEX))

