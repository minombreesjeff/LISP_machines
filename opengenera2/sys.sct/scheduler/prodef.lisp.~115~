;;; -*- Mode: LISP;  Package: SYSTEM-INTERNALS;  Base: 8 -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

;;; Scheduling

(defmacro reset-process-time-meter (slot-name)
  `(setq ,slot-name 0))

(DEFMACRO FIXNUM-PROCESS-TIME-METER (SLOT-NAME)
  SLOT-NAME)

(DEFSUBST FIXNUM-MICROSECOND-TIME-FOR-SCHEDULER ()
  (LDB (BYTE 31. 0) (%MICROSECOND-CLOCK)))

(DEFMACRO GET-VALUE-FROM-DOUBLE-INTEGER (LOW HIGH)
  `(LET ((HIGH ,HIGH))
    (IF (ZEROP HIGH)
	(LET ((LOW ,LOW))
	  (IF (MINUSP LOW)
	      (SI:%MAKE-BIGNUM-FROM-FIXNUM-COMPONENTS 0 1 LOW)
	      LOW))
	(SI:%MAKE-BIGNUM-FROM-FIXNUM-COMPONENTS 0 2 ,LOW HIGH))))

(DEFSUBST POSTPONE-SEQUENCE-BREAK ()
  (SETQ LAST-SEQUENCE-BREAK-TIME (%MICROSECOND-CLOCK)))

(DEFMACRO WITH-LOCK-HELD ((LOCK &KEY MYLOCK-OK SOFT
				(LOCK-VALUE 'CURRENT-PROCESS)
				(WHOSTATE "Lock")
				(CLEANUP NIL)
				(IF T))
			  &BODY BODY)
  (LET ((LOCKED-P-VAR (IF (AND MYLOCK-OK (NEQ MYLOCK-OK 'T))
			  MYLOCK-OK
			  '.LOCKED-P.))
	(FAST-CASE (AND (EQ IF 'T) (NOT MYLOCK-OK))))
    `(LET ((,LOCKED-P-VAR ,(IF FAST-CASE #/? NIL))
	   (.LOCK-VALUE. ,LOCK-VALUE)
	   (.CELL. (LOCF ,LOCK)))
       (UNWIND-PROTECT
	   (WHEN (OR (NOT ,IF)
		     ,(WHEN MYLOCK-OK '(EQ (LOCATION-CONTENTS .CELL.) .LOCK-VALUE.))
		     (PROGN
		       ,(WHEN (NOT FAST-CASE)
			  `(SETF ,LOCKED-P-VAR #/?))
		       ,(LET ((QUICK-LOCK
				`(SETF ,LOCKED-P-VAR
				       (STORE-CONDITIONAL .CELL. NIL .LOCK-VALUE.))))
			  (IF SOFT
			      QUICK-LOCK
			      `(PROGN
				 (COMPILER:%ERROR-UNLESS ,QUICK-LOCK
				   (PROCESS-LOCK .CELL. .LOCK-VALUE. ,WHOSTATE
						 (LOCF ,LOCKED-P-VAR)))
				 T)))))
	     ,@BODY)
	 (WHEN ,LOCKED-P-VAR
	   (COND ((EQ ,LOCKED-P-VAR T)
		  ,CLEANUP
		  (COMPILER:%ERROR-UNLESS (STORE-CONDITIONAL .CELL. .LOCK-VALUE. NIL)
		    (PROCESS-UNLOCK .CELL. .LOCK-VALUE.)))
		 ((EQ (LOCATION-CONTENTS .CELL.) .LOCK-VALUE.)
		  ,CLEANUP
		  (SETF (LOCATION-CONTENTS .CELL.) NIL))))))))

(DEFMACRO HAVE-QUEUE-LOCK (QUEUE VALUE)
  `(EQ ,VALUE (AREF ,QUEUE (PROCESS-QUEUE-CURRENT-POINTER ,QUEUE))))

;;; Macro to bind the priority up to interactive level.  This is just for the interaction,
;;; not for execution of forms or commands.  Those have to compete like they always did.

(DEFMACRO WITH-PROCESS-INTERACTIVE-PRIORITY (OPTIONS &BODY BODY)
  (DECLARE (ARGLIST . ((&KEY (QUANTUM-BOOST *PROCESS-COMMAND-INITIAL-QUANTUM*)) &BODY BODY)))
  `(LABELS ((WITH-PROCESS-INTERACTIVE-PRIORITY-BODY () ,@BODY))
     (IF (NOT CURRENT-PROCESS)
	 (WITH-PROCESS-INTERACTIVE-PRIORITY-BODY)
       (WITH-PROCESS-INTERACTIVE-PRIORITY-INTERNAL
	 CURRENT-PROCESS
	 #'WITH-PROCESS-INTERACTIVE-PRIORITY-BODY
	 ,@OPTIONS))))

;;; Macro to bind the priority back down to its non-interactive level.  Wrap this around
;;; command execution or form evaluation.

(DEFMACRO WITH-PROCESS-NON-INTERACTIVE-PRIORITY (OPTIONS &BODY BODY)
  (DECLARE (ARGLIST . ((&KEY (QUANTUM-BOOST *PROCESS-COMMAND-INITIAL-QUANTUM*)) &BODY BODY)))
  `(LABELS ((WITH-PROCESS-NON-INTERACTIVE-PRIORITY-BODY () ,@BODY))
     (IF (NOT CURRENT-PROCESS)
	 (WITH-PROCESS-NON-INTERACTIVE-PRIORITY-BODY)
       (WITH-PROCESS-NON-INTERACTIVE-PRIORITY-INTERNAL
	 CURRENT-PROCESS
	 #'WITH-PROCESS-NON-INTERACTIVE-PRIORITY-BODY
	 ,@OPTIONS))))

;; increase this slightly, as an experiment.
(DEFVAR *PROCESS-COMMAND-INITIAL-QUANTUM* (* 2. 60.)
  "Number of 60'ths of a second to start running a command before giving up the processor.")

;;; Process priority for interactions with the user. (in old-scheduler priority)
(DEFVAR *PROCESS-INTERACTIVE-PRIORITY* 1)

;;; This needs to be here so people who compare it with the current stack group won't die.
(DEFVAR SCHEDULER-STACK-GROUP NIL)
(COMPILER:MAKE-OBSOLETE SCHEDULER-STACK-GROUP "The new scheduler does not have a stack group." DEFVAR)

(DEFVAR ACTIVE-PROCESSES NIL)
(COMPILER:MAKE-OBSOLETE ACTIVE-PROCESSES "The new scheduler does not maintain this data structure." DEFVAR)

;;; Link these up for compatibility.
(SI:LINK-SYMBOL-VALUE-CELLS 'ALL-PROCESSES 'PROCESS:*ALL-PROCESSES*)
(DEFVAR ALL-PROCESSES)

(SI:LINK-SYMBOL-VALUE-CELLS 'CURRENT-PROCESS 'SCL:*CURRENT-PROCESS*)
(DEFVAR-SAFEGUARDED CURRENT-PROCESS)
