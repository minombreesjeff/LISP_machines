;;; -*- Mode: LISP; Syntax: Common-lisp; Package: PROCESS; Base: 10 -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

(DEFVAR *PROCESS-STATE-WAKEUP-TABLE*
	(PROTECT-OBJECT-WITH-MONITOR
	  (MAKE-HASH-TABLE :SIZE 10 :LOCKING NIL)))
(DEFVAR *PROCESS-STATE-WAKEUP-TABLE-ACTIVE* NIL)

;; let's avoid consing here.  Common case is two or less waiters, so keep slots for them.
(DEFSTRUCT (PROCESS-STATE-WAITER (:CONC-NAME PSW-))
  (DESCRIPTOR NIL)
  (WAITER1 NIL)
  (WAITER2 NIL)
  (OTHER-WAITERS NIL))

;; generally not more than 4 or 5 outstanding (usually just resetter's), so make it a
;; resource.
(DEFRESOURCE PROCESS-STATE-WAITERS () :CONSTRUCTOR (MAKE-PROCESS-STATE-WAITER))

;;In truth, this shouldn't be a table, it should be a scheduler queue.  When we have more
;;time, we'll recode it.

;;In truth, this shouldn't be a table, it should be a scheduler queue.  When we have more
;;time, we'll recode it.

(DEFUN WAKEUP-ON-CHANGE-OF-PROCESS-STATE (PROCESS-TO-WATCH PROCESS-TO-WAKE)
  (WITH-MONITOR-HELD (TABLE *PROCESS-STATE-WAKEUP-TABLE*)
    (SETQ *PROCESS-STATE-WAKEUP-TABLE-ACTIVE* T)
    (MODIFY-HASH TABLE
		 PROCESS-TO-WATCH
		 #'(LAMBDA (IGNORE WAITERS KEY-EXISTS-P)
		     (IF KEY-EXISTS-P
			 (PROGN
			   (COND
			     ((OR (NULL (PSW-WAITER1 WAITERS))
				  (EQ (PSW-WAITER1 WAITERS) PROCESS-TO-WAKE))
			      (SETF (PSW-WAITER1 WAITERS) PROCESS-TO-WAKE))
			     ((OR (NULL (PSW-WAITER2 WAITERS))
				  (EQ (PSW-WAITER1 WAITERS) PROCESS-TO-WAKE))
			      (SETF (PSW-WAITER2 WAITERS) PROCESS-TO-WAKE))
			     ((OR (NULL (PSW-OTHER-WAITERS WAITERS))
				  (EQ (PSW-WAITER1 WAITERS) PROCESS-TO-WAKE))
			      (SETF (PSW-OTHER-WAITERS WAITERS) PROCESS-TO-WAKE))
			     ((NOT (LISTP (PSW-OTHER-WAITERS WAITERS)))
			      ;; can't be equal, otherwise would have hit last clause
			      (SETF (PSW-OTHER-WAITERS WAITERS)
				    (LIST (PSW-OTHER-WAITERS WAITERS) PROCESS-TO-WAKE)))
			     (T (SETF (PSW-OTHER-WAITERS WAITERS)
				      (PUSHNEW PROCESS-TO-WAKE (PSW-OTHER-WAITERS WAITERS)))))
			   
			   WAITERS)
			 (MULTIPLE-VALUE-BIND (NEW-WAITERS DESCRIPTOR)
			     (SI:ALLOCATE-RESOURCE 'PROCESS-STATE-WAITERS)
			   (SETF (PSW-DESCRIPTOR NEW-WAITERS) DESCRIPTOR)
			   (SETF (PSW-WAITER1 NEW-WAITERS) PROCESS-TO-WAKE)
			   (SETF (PSW-WAITER2 NEW-WAITERS) NIL)
			   (SETF (PSW-OTHER-WAITERS NEW-WAITERS) NIL)
			   NEW-WAITERS))))))

(DEFUN NOTE-PROCESS-STATE-CHANGE (PROCESS OLD-STATE)
  ;; wakeup on state change between 'arrested, 'dead, <any other>
  (WHEN *PROCESS-STATE-WAKEUP-TABLE-ACTIVE*
    (LET ((NEW-STATE (PROCESS-STATE PROCESS)))
      (WHEN (AND (OR (MEMBER NEW-STATE '(ARRESTED DEAD))
		     (MEMBER OLD-STATE '(ARRESTED DEAD)))
		 (NEQ NEW-STATE OLD-STATE))
	(WITH-MONITOR-HELD (TABLE *PROCESS-STATE-WAKEUP-TABLE*)
	  (LET ((WAITERS (GETHASH PROCESS TABLE)))
	    (WHEN WAITERS
	      (WHEN (PSW-WAITER1 WAITERS)
		(PROCESS-WAKEUP (PSW-WAITER1 WAITERS)))
	      (WHEN (PSW-WAITER2 WAITERS)
		(PROCESS-WAKEUP (PSW-WAITER2 WAITERS)))
	      (LET ((OTHERS (PSW-OTHER-WAITERS WAITERS)))
		(WHEN OTHERS
		  (IF (LISTP OTHERS)
		      (LOOP FOR P IN OTHERS DO (PROCESS-WAKEUP P))
		      (PROCESS-WAKEUP OTHERS))))
	      (REMHASH PROCESS TABLE)
	      (WHEN (ZEROP (HASH-TABLE-COUNT TABLE))
		(SETQ *PROCESS-STATE-WAKEUP-TABLE-ACTIVE* NIL))
	      (SI:DEALLOCATE-RESOURCE 'PROCESS-STATE-WAITERS
				      WAITERS
				      (PSW-DESCRIPTOR WAITERS)))))))))
