;;; -*- Mode: LISP;  Package: PROCESS;  Base: 10; Syntax: Common-Lisp; Lowercase: Yes -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

;; these need to be wired, for >metering<, not for the scheduler.
(sys:defvar-wired scl:*current-process*)	;The process which is currently executing.
(sys:defvar-wired %real-current-process)        ;The above can be made to lie, this can't.
(sys:defvar-wired *in-process-dispatcher* nil)  ; user visible flag

(defparameter si:default-quantum 6)

;;; Processes
(defflavor process
 (name				;Print name
  (stack-group nil)		;Stack group currently executing on behalf of this process
  (wait-function #'true)	;Predicate to determine if process is runnable
  (wait-argument-list nil)	;Arguments passed to above (use an arg to avoid a closure)
				; This will often be a rest argument in somebody's stack,
				; but it will always be used in a safe manner.
  (whostate "Just Created")	;The "WHOSTATE" string for the who line, etc.
  (initial-stack-group nil)	;The stack group which PROCESS-RESET (q.v.) will reset to.
  (initial-form nil)		;Form to preset the initial stack group to when proc is reset.
				; Really cons of function and evaluated args.
  (run-reasons nil)		;List of run reasons for this process.
  (arrest-reasons nil)		;List of arrest reasons for this process.
  (quantum si:default-quantum)	;Number of ticks process should run at most before
				; running another process.  This exists purely for 
				; compatibility with 7.2, and will be flushed.
  (base-quantum si:default-quantum);Quantum when not boosted temporarily.  This exists 
                                ; purely for compatibility with 7.2, and will be flushed.
  (quantum-remaining 0)		;Amount of time remaining for this process to run.  This 
                                ; exists purely for compatibility with 7.2, and will 
                                ; be flushed.
  (priority 0)			;Instantaneous priority of this process.  This field is 
                                ; meaningless to anyone outside of the scheduler.
  (base-priority nil)		;What the instantaneous priority *would* be if this process
                                ; were not promoted.
  (warm-boot-action		;Thing to do to this process if it is active when the
   'process-warm-boot-delayed-restart)	; machine is warm-booted.
				;  NIL means the default action
				; (flush it).  If non-NIL, gets funcalled with the process
				; as its argument.
	;The default is to reset it after initializations have been completed
	;[I'm not sure why it's this rather than to leave it alone.]
  (simple-p nil)		;T if the process is simple 
  (last-time-run nil)		;(TIME) process last woke up, NIL if never

  (total-run-time 0)		;Total run time in milliseconds
  (disk-wait-time 0)		;Disk wait time in milliseconds

  (page-fault-count 0)		;Number of disk page waits
  (percent-utilization 0)	;Exponential average of total run time.  UNUSED
  (deference nil)		;Courtesy to other processes when seizing resources
				;see SI:CHECK-FOR-GC-WAITING-TO-FLIP
  (metering-flags 0)		; bits specific to process metering.
				; bit 0 is whether there is any metering going on
  				; bit 1 is whether to trigger a 'process-switch event
  				; upon switching in or out of this process.
  (metering-info (make-process-metering-info-function)); points to a process-metering-info,
						; used by metering tools.
  (process-usecond-time-1 0)
  (process-usecond-time-2 0)
  
  (microsecond-time-scheduled nil);Time when quantum began (if running) or ended

  (state 'dead)			;State of process.  One of *VALID-PROCESS-STATES*
  (next-process nil)		;Next pointer for scheduler queue
  (previous-process nil)	;Previous pointer for scheduler queue
  (scheduler-queue nil)		;Distinguished queue that this process is on.
  (initial-stack-group-descriptor nil)
  				;The INITIAL-STACK-GROUP comes from a resource.  Save the
  				;descriptor to return it efficiently when the process exits.
				;This is really a resource index-hint now.
  (wakeup-waiting-switch nil)
  process-priority		;For scheduler policy.  This is an array of process-priorities.
				; the top element is used to compute the instantaneous 
                                ; priority.  The top element is the "current priority" of the
                                ; process.
  activity			;A hook for future scheduling policies.
  scheduler-info		;not used any more
  (runnable-start-time 0)
  (time-runnable 0)
  (debug-flag 0)       		;see definition of bits in PROCESS-DEFINITION.LISP
  (current-lock ())		; Used by the locking substrate

  ;; promotion slots.
  ;; observed high-water marks for these are 9 and 3
  (promotion-set (make-array 10 :fill-pointer 0 :leader-length 2 :leader-list '(0 0)))
  (promoting-set (make-array 3 :fill-pointer 0 :leader-length 2 :leader-list '(0 0)))

  ;; optimizations for wait-function poller
  (polling-interval nil) 
  (wait-record nil)

  ;; recent history of activity, maintained by update-scheduler-stats
  (recent-run-time 0)	  	;snapshot of process-run-time-low
  (recent-microsecond-clock 0)	;microsecond clock reading when snapshot taken

  ;; less recent history of activity, maintained by update-scheduler-stats-2
  (snapshot-run-time 0)	  		;snapshot of process-run-time-low
  (snapshot-runnable-time 0)		;snapshot of process-runnable-time
  (snapshot-paging-time 0)		;snapshot of process-disk-wait-time-milliseconds
  (snapshot-microsecond-clock-low 0)	;microsecond clock reading when snapshot taken
  (snapshot-microsecond-clock-high 0)	;..
  (earlier-snapshot-run-time 0)	  	;snapshot of process-run-time-low
  (earlier-snapshot-runnable-time 0)	;snapshot of process-runnable-time
  (earlier-snapshot-paging-time 0)	;snapshot of process-disk-wait-time-milliseconds
  (earlier-snapshot-microsecond-clock-low 0)	;microsecond clock reading when snapshot taken
  (earlier-snapshot-microsecond-clock-high 0)	;..

  ;;Allow experimentation without making new cold load
 si:spare-slot-1
 si:spare-slot-2
  si:spare-slot-3
  si:spare-slot-4
  si:spare-slot-5
  si:spare-slot-6
  )

  ()

  (:ordered-instance-variables
   ;; These are here in this order because they were that way in 7.1 and we need to keep them
   ;; compatible.  Also declaring these to be ordered allows us to inline the accessors
   ;; in critical places.  A few other reasons to keep these ordered are noted.
   name
   stack-group					;ordered for future page fault scheduling
   wait-function
   wait-argument-list
   whostate
   initial-stack-group
   initial-form
   run-reasons
   arrest-reasons
   quantum
   base-quantum
   quantum-remaining
   priority
   base-priority
   warm-boot-action
   simple-p
   last-time-run				;ordered for future page fault scheduling
   total-run-time
   disk-wait-time				;ordered for future page fault scheduling
   page-fault-count				;ordered for future page fault scheduling
   percent-utilization
   deference
   metering-flags				;maybe...
   metering-info				;maybe...
   process-usecond-time-1			;ordered for future page fault scheduling
   process-usecond-time-2			;ordered for future page fault scheduling

   ;; These don't need to be ordered (except as notes), but we need to put 14 slots between
   ;; PROCESS-USECOND-TIME-2 and MICROSECOND-TIME-SCHEDULED.
   process-priority
   activity
   si:spare-slot-1
   si:spare-slot-4
   state				;this really does want to be ordered
   next-process				;this really does want to be ordered
   previous-process   			;this really does want to be ordered
   scheduler-queue			;this really does want to be ordered
   si:spare-slot-5
   wakeup-waiting-switch		;this really does want to be ordered
   initial-stack-group-descriptor
   debug-flag
   current-lock
   si:spare-slot-6

   ;; These are here for compatibility with the old scheduler.
   microsecond-time-scheduled
   si:spare-slot-2
   si:spare-slot-3

   ;; These are here so get-instantaneous-priority can inline their accessors
   scheduler-info		;not used any more
   runnable-start-time

   recent-run-time
   recent-microsecond-clock
   snapshot-run-time
   snapshot-runnable-time
   snapshot-paging-time
   snapshot-microsecond-clock-low
   snapshot-microsecond-clock-high
   earlier-snapshot-run-time
   earlier-snapshot-runnable-time
   earlier-snapshot-paging-time
   earlier-snapshot-microsecond-clock-low
   earlier-snapshot-microsecond-clock-high
   )

  (:readable-instance-variables
   name stack-group
   (process-verify-function wait-function)
   (process-verify-function-args wait-argument-list)
   whostate initial-stack-group run-reasons arrest-reasons
   priority base-priority warm-boot-action simple-p last-time-run
   metering-info
   (process-run-time-low process-usecond-time-1)
   (process-run-time-high process-usecond-time-2)
   scheduler-queue initial-stack-group-descriptor
   (si:process-wait-function wait-function)
   (si:process-wait-argument-list wait-argument-list)
   (si:process-run-reasons run-reasons)
   (si:process-arrest-reasons arrest-reasons)
   (si:process-quantum quantum)
   (si:process-base-quantum base-quantum)
   (si:process-quantum-remaining quantum-remaining)
   (si:process-last-time-run last-time-run)
   (si:process-disk-wait-time disk-wait-time)
   (si:process-page-fault-count page-fault-count)
   (si:process-percent-utilization percent-utilization)
   (si:process-deference deference)
   (si:process-metering-flags metering-flags)
   (si:process-metering-info metering-info)
   (si:process-process-usecond-time-1 process-usecond-time-1)
   (si:process-process-usecond-time-2 process-usecond-time-2)
   (si:process-microsecond-time-scheduled microsecond-time-scheduled)
   promotion-set promoting-set polling-interval wait-record
   recent-run-time
   recent-microsecond-clock
   snapshot-run-time
   snapshot-runnable-time
   snapshot-paging-time
   snapshot-microsecond-clock-low
   snapshot-microsecond-clock-high
   earlier-snapshot-run-time
   earlier-snapshot-runnable-time
   earlier-snapshot-paging-time
   earlier-snapshot-microsecond-clock-low
   earlier-snapshot-microsecond-clock-high
   (si:process-spare-slot-1 si:spare-slot-1)
   (si:process-spare-slot-2 si:spare-slot-2)
   (si:process-spare-slot-3 si:spare-slot-3)
   (si:process-spare-slot-4 si:spare-slot-4)
   )

  (:writable-instance-variables
   name stack-group
   (process-verify-function wait-function)
   (process-verify-function-args wait-argument-list)
   whostate run-reasons arrest-reasons warm-boot-action last-time-run
   (process-run-time-low process-usecond-time-1)
   (process-run-time-high process-usecond-time-2)
   state next-process previous-process wakeup-waiting-switch debug-flag runnable-start-time
   time-runnable current-lock
   si:spare-slot-1 si:spare-slot-2 si:spare-slot-3 si:spare-slot-4
   (si:process-wait-function wait-function)
   (si:process-wait-argument-list wait-argument-list)
   (si:process-run-reasons run-reasons)
   (si:process-arrest-reasons arrest-reasons)
   (si:process-quantum-remaining quantum-remaining)
   (si:process-last-time-run last-time-run)
   (si:process-disk-wait-time disk-wait-time)
   (si:process-page-fault-count page-fault-count)
   (si:process-percent-utilization percent-utilization)
   (si:process-deference deference)
   (si:process-process-usecond-time-1 process-usecond-time-1)
   (si:process-process-usecond-time-2 process-usecond-time-2)
   (si:process-microsecond-time-scheduled microsecond-time-scheduled)
   wait-record
   recent-run-time
   recent-microsecond-clock
   snapshot-run-time
   snapshot-runnable-time
   snapshot-paging-time
   snapshot-microsecond-clock-low
   snapshot-microsecond-clock-high
   earlier-snapshot-run-time
   earlier-snapshot-runnable-time
   earlier-snapshot-paging-time
   earlier-snapshot-microsecond-clock-low
   earlier-snapshot-microsecond-clock-high
   (si:process-spare-slot-1 si:spare-slot-1)
   (si:process-spare-slot-2 si:spare-slot-2)
   (si:process-spare-slot-3 si:spare-slot-3)
   (si:process-spare-slot-4 si:spare-slot-4)
   )

   (:locatable-instance-variables
    current-lock
    )

   (:gettable-instance-variables
    name stack-group wait-function wait-argument-list whostate initial-stack-group
    run-reasons arrest-reasons quantum base-quantum quantum-remaining
    warm-boot-action simple-p last-time-run page-fault-count
    )

   (:settable-instance-variables
    warm-boot-action
    )

   (:initable-instance-variables
    name stack-group initial-form run-reasons arrest-reasons quantum warm-boot-action
    )

   (:init-keywords
    :flavor :simple-p
    ;; Keywords to make-process
    :initial-function :verify-function :interrupt-handler
    ;; Keywords for stack group
    :sg-area :regular-pdl-area :special-pdl-area :regular-pdl-size :special-pdl-size :safe
    )

   (:constructor make-process-internal
    (name initial-form run-reasons area
	  &key stack-group arrest-reasons quantum warm-boot-action
	  &allow-other-keys))
   )

;;; Special kind of process that does not a require a stack group
(defflavor simple-process
	((simple-p t)
	 (initial-form nil)
	 (wait-function #'false)
	 (stack-group nil)
	 (initial-stack-group nil)
	 (top-level-whostate "SIMPLE-PROCESS wait")
	 (polling-interval nil))
	(process)
  (:constructor make-simple-process-internal
   (name initial-form initial-stack-group run-reasons area
	 &key arrest-reasons quantum warm-boot-action top-level-whostate
	 &allow-other-keys))
  (:readable-instance-variables polling-interval)
  (:initable-instance-variables top-level-whostate polling-interval)
  (:writable-instance-variables top-level-whostate)
  (:init-keywords :predicate-form)
  (:conc-name process-)
  )

;;; Processes that do coroutining
(defflavor coroutining-process ((si:coroutine-stack-groups nil)) (process)
  (:readable-instance-variables
   (si:coroutine-process-coroutine-stack-groups si:coroutine-stack-groups))
  (:gettable-instance-variables si:coroutine-stack-groups))

;;; This isn't enough to bypass the bug in DEFFLAVOR.

#||
(proclaim '(notinline
	     process-name
	     process-stack-group
	     process-verify-function
	     process-verify-function-args
	     process-whostate
	     process-initial-stack-group
	     process-initial-form
	     process-run-reasons
	     process-arrest-reasons
	     process-priority
	     process-base-priority
	     process-warm-boot-action
	     process-simple-p
	     process-last-time-run
	     process-metering-info
	     process-run-time-low
	     process-run-time-high
	     process-spare-slot-1
	     process-spare-slot-2
	     process-spare-slot-3
	     process-spare-slot-4
	     process-scheduler-queue
	     process-initial-stack-group-descriptor
	     si:process-name
	     si:process-stack-group
	     si:process-wait-function
	     si:process-wait-argument-list 
	     si:process-initial-stack-group
	     si:process-initial-form
	     si:process-run-reasons 
	     si:process-arrest-reasons 
	     si:process-quantum
	     si:process-base-quantum
	     si:process-quantum-remaining
	     si:process-priority
	     si:process-base-priority
	     si:process-warm-boot-action
	     si:process-simple-p
	     si:process-last-time-run 
	     si:process-page-fault-count
	     si:process-total-run-time 
	     si:process-disk-wait-time
	     si:process-percent-utilization
	     si:process-deference
	     si:process-metering-flags
	     si:process-metering-info
	     si:process-process-usecond-time-1
	     si:process-process-usecond-time-2
	     si:process-microsecond-time-scheduled
	     si:process-spare-slot-1
	     si:process-spare-slot-2
	     si:process-spare-slot-3
	     si:process-spare-slot-4

	     (setf process-name)
	     (setf process-stack-group)
	     (setf process-verify-function)
	     (setf process-verify-function-args)
	     (setf process-whostate)
	     (setf process-run-reasons)
	     (setf process-arrest-reasons)
	     (setf process-warm-boot-action)
	     (setf process-last-time-run)
	     (setf process-run-time-low)
	     (setf process-run-time-high)
	     (setf process-state)
	     (setf process-next-process)
	     (setf process-previous-process)
	     (setf process-wakeup-waiting-switch)
	     (setf process-debug-flag)
	     (setf process-runnable-start-time)
	     (setf process-time-runnable)
	     (setf process-current-lock)
	     (setf process-spare-slot-1)
	     (setf process-spare-slot-2)
	     (setf process-spare-slot-3)
	     (setf process-spare-slot-4)
	     (setf si:process-name)
	     (setf si:process-stack-group)
	     (setf si:process-wait-function)
	     (setf si:process-wait-argument-list)
	     (setf si:process-whostate)
	     (setf si:process-run-reasons)
	     (setf si:process-arrest-reasons)
	     (setf si:process-quantum-remaining)
	     (setf si:process-warm-boot-action)
	     (setf si:process-last-time-run)
	     (setf si:process-total-run-time)
	     (setf si:process-disk-wait-time)
	     (setf si:process-page-fault-count)
	     (setf si:process-percent-utilization)
	     (setf si:process-deference)
	     (setf si:process-process-usecond-time-1)
	     (setf si:process-process-usecond-time-2)
	     (setf si:process-microsecond-time-scheduled)
	     (setf si:process-spare-slot-1)
	     (setf si:process-spare-slot-2)
	     (setf si:process-spare-slot-3)
	     (setf si:process-spare-slot-4)
	     ))
||#
