;;; -*- Mode: LISP; Syntax: Common-lisp; Package: PROCESS; Base: 10 -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

(SI:DEFVAR-SAFEGUARDED
  *VALID-PROCESS-STATES*
  '(RUNNABLE					; the process is on a scheduler queue, and
						; when all the higher priority processes go
						; blocked, this process will run.

     BLOCKED					; An active process, that isn't on an active
						; scheduler queue.  Needs a process-wakeup to
						; run.

     WAITING					; :BLOCKED, but another process is polling the
						; (wait) verify function of this process, and
						; will automatically send a wakeup when the
						; function becomes T.

     PROMOTION-BLOCKED				; :BLOCKED, but is willing to participate in
						; the process' promotion protocol.  This will
						; have its priority promoted (recursively) by
						; another process waiting for it.

     RESOURCE-BLOCKED				; :BLOCKED.  Just a placeholder for now.

     PAGE-WAIT					; :BLOCKED for a page-fault.  Just a
						; placeholder for now.

     ARRESTED					; This process has been arrested, so is
						; unrunnable.

     DEAD					; This process has been killed.  Eventually
						; it will be GC'd, or RESET.  It is illegal
						; to WAKEUP this process.

     UNARRESTED					; This process was arrested, but is no longer.
						; It's actual state is indeterminate.  (That
						; information was lost when it was arrested).
						; It will be sent a wakeup, and the same code
						; that processes spurious wakeups should
						; automatically fixup the state.

     CREATED))					; Newly created process with no state
						; initialization yet.

;; Process debug flags:

;; Bit(s)     Name                        Meaning of field
;; ------     ----                        ----------------
;; 0          DEALLOCATE-STACK-GROUP
;; 1          RESET-IN-PROGRESS
;; 2          DEBUG-WAKEUPS
;; 3          POLICY-HOOK-ON-PROC-SWITCH 
;; 4          KILL-PROCESS-ON-RESET
;; 5          SYSTEM-PROCESS
;; 6          USAFE-TO-WAIT
;; 7          RELEASE-RESOURCES
;; 8          NOT-RESTARTABLE
;; 9          NO-RUN-LIGHT
;; 10         NO-BACKGROUND-INTERACTOR
;; 11         NO-KBD-ARREST


;; If this is set, don't deallocate the stack group when the process dies.
(DEFCONSTANT PROCESS-DEBUG-DEALLOCATE-STACK-GROUP (BYTE 1 0))
(DEFCONSTANT PROCESS-DEBUG-SAVE-STACK-GROUP (DPB 1 PROCESS-DEBUG-DEALLOCATE-STACK-GROUP 0))

;; This is set while a process is being reset.
(DEFCONSTANT PROCESS-DEBUG-RESET-IN-PROGRESS (BYTE 1 1))

;; If this is set in a process, waking it up while it is dead will signal an error.
(DEFCONSTANT PROCESS-DEBUG-DEBUG-WAKEUPS (BYTE 1 2))

;; This is set by the scheduler when it wants to be called when the process is switched in or out.
(DEFCONSTANT %%PROCESS-DEBUG-FUNCALL-POLICY-HOOK-ON-PROCESS-SWITCH (BYTE 1 3))

;; This is set by PROCESS:KILL to indicate that the process should be removed from *ALL-PROCESSES*.
(DEFCONSTANT PROCESS-DEBUG-KILL-PROCESS-ON-RESET (BYTE 1 4))

;; This is set in processes in which we suppose the user not to be interested.
(DEFCONSTANT PROCESS-DEBUG-SYSTEM-PROCESS (BYTE 1 5))

;; This is set in processes which may not call PROCESS:BLOCK-AND-POLL-WAIT-FUNCTION.
(DEFCONSTANT PROCESS-DEBUG-UNSAFE-TO-WAIT (BYTE 1 6))

;; This is set when resetting to tell the top-level to just kill the process.
(DEFCONSTANT %%PROCESS-DEBUG-RELEASE-RESOURCES (BYTE 1 7))

;; If this is set, the process will be killed if it is reset.
(DEFCONSTANT %%PROCESS-DEBUG-NOT-RESTARTABLE (BYTE 1 8))

;; If this is set, the process does not turn on the run-light when it is running.
(DEFCONSTANT %%PROCESS-DEBUG-NO-RUN-LIGHT (BYTE 1 9.))

;; If this is set, the process will use the cold-load-stream as the default
;; for *terminal-io* rather than allocating a background-interactor.
(DEFCONSTANT %%PROCESS-DEBUG-NO-BACKGROUND-INTERACTOR (BYTE 1 10.))

;; If this is set, the process will not be arrested by KBD-ESC-ARREST-ALL and friends.
(DEFCONSTANT %%PROCESS-DEBUG-NO-KBD-ARREST (BYTE 1 11.))

(DEFVAR *PROCESS-FLAG-MAPPINGS*
	`((:DEALLOCATE-STACK-GROUP ,PROCESS-DEBUG-DEALLOCATE-STACK-GROUP)
	  ;; :RESET-IN-PROGRESS is not user settable
	  (:DEBUG-WAKEUPS ,PROCESS-DEBUG-RESET-IN-PROGRESS)
	  ;; :POLICY-HOOK-ON-PROC-SWITCH is not user settable
	  (:KILL-PROCESS-ON-RESET ,PROCESS-DEBUG-KILL-PROCESS-ON-RESET)
	  (:SYSTEM-PROCESS ,PROCESS-DEBUG-SYSTEM-PROCESS)
	  (:UNSAFE-TO-WAIT ,PROCESS-DEBUG-UNSAFE-TO-WAIT)
	  (:RELEASE-RESOURCES ,%%PROCESS-DEBUG-RELEASE-RESOURCES)
	  (:NOT-RESTARTABLE ,%%PROCESS-DEBUG-NOT-RESTARTABLE)
	  (:NO-RUN-LIGHT ,%%PROCESS-DEBUG-NO-RUN-LIGHT)
	  (:NO-BACKGROUND-INTERACTOR ,%%PROCESS-DEBUG-NO-BACKGROUND-INTERACTOR)
	  (:NO-KBD-ARREST ,%%PROCESS-DEBUG-NO-KBD-ARREST)))

(DEFUN ENABLE-PROCESS-FLAG (PROCESS FLAG)
  (DECLARE (INLINE PROCESS-DEBUG-FLAG))
  (LET ((BYTE-SPECIFIER (SECOND (ASSOC FLAG *PROCESS-FLAG-MAPPINGS*))))
    (IF BYTE-SPECIFIER
	(SETF (LDB BYTE-SPECIFIER (PROCESS-DEBUG-FLAG PROCESS)) 1)
	(ERROR "~S is not a known, user settable process flag" FLAG))))

(DEFUN DISABLE-PROCESS-FLAG (PROCESS FLAG)
  (DECLARE (INLINE PROCESS-DEBUG-FLAG))
  (LET ((BYTE-SPECIFIER (SECOND (ASSOC FLAG *PROCESS-FLAG-MAPPINGS*))))
    (IF BYTE-SPECIFIER
	(SETF (LDB BYTE-SPECIFIER (PROCESS-DEBUG-FLAG PROCESS)) 0)
	(ERROR "~S is not a known, user settable process flag" FLAG))))

(DEFUN SET-PROCESS-FLAG (PROCESS FLAG VALUE)
  (DECLARE (INLINE PROCESS-DEBUG-FLAG))
  (LET ((BYTE-SPECIFIER (SECOND (ASSOC FLAG *PROCESS-FLAG-MAPPINGS*))))
    (IF BYTE-SPECIFIER
	(SETF (LDB BYTE-SPECIFIER (PROCESS-DEBUG-FLAG PROCESS)) (IF VALUE 1 0))
	(ERROR "~S is not a known, user settable process flag" FLAG))))	


(DEFSUBST MAKE-PROCESS-RUNNABLE (PROCESS)
  (DECLARE (INLINE PROCESS-STATE))
  (SETF (PROCESS-STATE PROCESS) 'RUNNABLE))

(DEFSUBST PROCESS-RUNNABLE-P (PROCESS)
  (DECLARE (INLINE PROCESS-STATE PROCESS-SCHEDULER-QUEUE))
  (AND (EQ (PROCESS-STATE PROCESS) 'RUNNABLE)
       (PROCESS-SCHEDULER-QUEUE PROCESS)))

(DEFSUBST PROCESS-WAKEABLE-P (PROCESS)
  (DECLARE (INLINE PROCESS-STATE PROCESS-ARREST-REASONS PROCESS-RUN-REASONS))
  (LET ((STATE (PROCESS-STATE PROCESS)))
    (AND (NEQ STATE 'DEAD)
	 (NEQ STATE 'ARRESTED)
	 (NULL (PROCESS-ARREST-REASONS PROCESS))
	 (PROCESS-RUN-REASONS PROCESS))))

(DEFSUBST MAKE-PROCESS-NOT-RUNNABLE (PROCESS)
  (DELETE-FROM-RUNNABLE-QUEUE PROCESS))

(DEFSUBST-IN-FLAVOR (MAKE-PROCESS-RUNNABLE-SELF PROCESS) ()
  (SETF STATE 'RUNNABLE))

(DEFSUBST-IN-FLAVOR (PROCESS-RUNNABLE-P-SELF PROCESS) ()
  (AND (EQ STATE 'RUNNABLE) SCHEDULER-QUEUE))

(DEFSUBST-IN-FLAVOR (PROCESS-WAKEABLE-P-SELF PROCESS) ()
  (AND (NEQ STATE 'DEAD)
       (NEQ STATE 'ARRESTED)
       (NULL ARREST-REASONS)
       RUN-REASONS))
