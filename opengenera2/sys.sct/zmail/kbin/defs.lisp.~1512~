;;; -*- Mode: LISP; Package: KBIN; Syntax: Common-lisp; Lowercase: T -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>
;;;>

(defvar *kbin-second-level-command-table*
	(zl:make-array #o400 ':initial-value 'kbin-illegal-opcode))

(defvar *kbin-second-level-command-for-effect*
	(make-array #o400 :element-type '(member t nil)))

(defprop define-kbin-opcode defconstant zwei:definition-function-spec-type)
(defmacro define-kbin-opcode (name value &optional for-effect)
  `(progn 'compile
     (defconstant ,name ,(dpb kbin-command (byte 8 8) value))
     (add-kbin-second-level-opcode ',name ,value ,for-effect)))

(defun add-kbin-second-level-opcode (name index for-effect)
  (setf (aref *kbin-second-level-command-table* index) name)
  (setf (aref *kbin-second-level-command-for-effect* index) for-effect))

(define-kbin-opcode kbin-format-version 1 t)
(define-kbin-opcode kbin-table-fetch 2)
(define-kbin-opcode kbin-long-string 3)
(define-kbin-opcode kbin-large-integer 4)
(define-kbin-opcode kbin-large-negative-integer 5)
(define-kbin-opcode kbin-list 6)
(define-kbin-opcode kbin-list* 7)
(define-kbin-opcode kbin-keyword 8)
(define-kbin-opcode kbin-internal-keyword 9)
(define-kbin-opcode kbin-end-of-file 10 t)
(define-kbin-opcode kbin-end-of-msg 11 t)
(define-kbin-opcode kbin-line 12)
(define-kbin-opcode kbin-interval 13)
(define-kbin-opcode kbin-file-property-list 14 t)
(define-kbin-opcode kbin-msg 15 t)		;For now, I guess
(define-kbin-opcode kbin-msg-status 16 t)
(define-kbin-opcode kbin-msg-summary-line 17 t)
(define-kbin-opcode kbin-set-line-bp-list 18 t)	D,#TD1PsT[Begin using 006 escapes](1 0 (NIL 0) (NIL :BOLD NIL) "CPTFONTCB");Obsolete, Rel 6 KBIN compatibility
0(define-kbin-opcode kbin-pathname 19)
(define-kbin-opcode kbin-user 20)
(define-kbin-opcode kbin-host 21)
(define-kbin-opcode kbin-msg-interval 22)
(define-kbin-opcode kbin-font 23)
(define-kbin-opcode kbin-error 24)
(define-kbin-opcode kbin-fat-line 25)		1;Obsolete, Rel 6 KBIN compatibility
0(define-kbin-opcode kbin-set-line-contents-plist 26 t)
(define-kbin-opcode kbin-table-fetch-medium 27)
(define-kbin-opcode kbin-msg-self 28)
(define-kbin-opcode kbin-instance 29)
(define-kbin-opcode kbin-scroll-item-displayer 30)
(define-kbin-opcode kbin-load-table-estimate 31 t)
(define-kbin-opcode kbin-symbol 32)
(define-kbin-opcode kbin-qualified-host 33)
(define-kbin-opcode kbin-permanent-table-fetch 34)
(define-kbin-opcode kbin-permanent-table-fetch-medium 35)
(define-kbin-opcode kbin-bp 36)
(define-kbin-opcode kbin-bp-normal 37)
(define-kbin-opcode kbin-bp-moves 38)
(define-kbin-opcode kbin-cons 39)
(define-kbin-opcode kbin-list-reference 40)
(define-kbin-opcode kbin-value 41)
(define-kbin-opcode kbin-message-id-reference 42)
(define-kbin-opcode kbin-global-symbol 43)
(define-kbin-opcode kbin-nil 44)
(define-kbin-opcode kbin-t 45)
(define-kbin-opcode kbin-char-string 46)	1;Obsolete, Rel 6 KBIN compatibility, unused
0(define-kbin-opcode kbin-char-q-string 47)	1;Obsolete, Rel 6 KBIN compatibility, unused
0(define-kbin-opcode kbin-msg-area 48)
(define-kbin-opcode kbin-msg-line-area 49)
(define-kbin-opcode kbin-summary-area 50)
(define-kbin-opcode kbin-header-area 51)
(define-kbin-opcode kbin-working-storage-area 52)
(define-kbin-opcode kbin-namespace 53)
(define-kbin-opcode kbin-object-host 54)
(define-kbin-opcode kbin-namespace-with-domain 55)
(define-kbin-opcode kbin-hairy-string 56)
(define-kbin-opcode kbin-hairy-line 57)
(define-kbin-opcode kbin-hairy-msg-summary-line 58 t)
(define-kbin-opcode kbin-hairy-version 59 t)
(define-kbin-opcode kbin-character-style 60)
(define-kbin-opcode kbin-msg-flags 61 t)
(define-kbin-opcode kbin-character 62)
(define-kbin-opcode kbin-additional-parsed-header-fields 63 t)
(define-kbin-opcode kbin-ratio 64)
(define-kbin-opcode kbin-diagram 65)
(define-kbin-opcode kbin-graphics-diagram-binary-encoding 66)
(define-kbin-opcode kbin-set-line-plist 67 t)
(define-kbin-opcode kbin-single-float 68)
(define-kbin-opcode kbin-double-float 69)
(define-kbin-opcode kbin-complex 70)
(define-kbin-opcode kbin-dumped-msg-count 71 t)

(defvar *no-value-marker* '(**no-value**))

(defparameter *kbin-format-version* 16)
(defconstant *kbin-format-oldest-version* 4)

(2 0 (NIL 0) (NIL :ITALIC NIL) "CPTFONTI");;; First and last 0Zmail2 version which wrote a specific 0KBIN2 file format.
0(defparameter *kbin-to-zmail-version-translations*
  '((4 (107 1) (107 25))
    (5 (138 0) (146 2))
    (6 (146 3) (146 11))
    (7 (146 12) (147 15))
    (8 (147 16) (152 12))
    (9 (152 13) (152 14))
    (10 (152 15) (152 63))
    (11 (152 64) (155 29))
    (12 (155 30) (161 4))
    (13 (161 5) (161 14))
    (14 (161 15) (162 0))
(3 0 (NIL 0) (NIL :BOLD-ITALIC NIL) "CPTFONTBI")   ;; Note -- Put proper versions just before making the patch!
0    (15 (162 1) (165 8))
    (16 (165 9) ())))				2;No final version.

;;; Constant used by 1zwei:kbin-msg-file-format-p2 to verify0 KBIN2 file format.
0(defparameter *kbin-format-version-opcode* kbin-format-version)

2;;; List of header fields which are stored as parsed structure in the current 0KBIN
2;;; file format which were not parsed by 0Zmail2 when 0KBIN2 was originally released.
;;; When reading older format files, any messages containing these header fields must
;;; be reparsed while loading to insure that the rest of 0Zmail2 will find the
;;; appropriate data structures in the message's status.
0(defparameter *additional-parsed-header-fields* '(:redirected-date :redirected-by))

;;; Special instance variables
(defvar *kbin-load-table*)
(defvar *kbin-table-index*)
(defvar *kbin-permanent-load-table*)
(defvar *kbin-permanent-table-index*)
(defvar *next-object-table*)
(defvar *next-object-table-object*)
(defvar *format-version-read*)
(defvar *string-loader*)			;Loader for hairy strings
(defvar *string-dumper*)			;Dumper for hairy strings.
(defvar *unparsed-header-fields*)		2;List of header fields which must be parsed.
0(defvar *dumped-msg-count*)			2;Number of message actually dumped in the file.

0(defflavor kbin-buffer
	((*format-version-read* *kbin-format-version*)
	 *kbin-load-table*
	 *kbin-permanent-load-table*
	 *kbin-dump-table*
	 (*kbin-table-index* 0)
	 *kbin-permanent-dump-table*
	 (*kbin-permanent-table-index* 0)
	 *kbin-equal-dump-table*
	 (*next-object-table* nil)		;Next object should be stored in table
	 (*next-object-table-object* nil)	;Next object to store
	 (*string-dumper* (make-instance 'bin:unsigned-byte-16-dumper))
	 (*string-loader* (make-instance 'bin:unsigned-byte-16-loader))
	 (*unparsed-header-fields* *additional-parsed-header-fields*)
	 (*dumped-msg-count* -1)
	 (added-msgs-count 0))
	(file-mail-buffer)
  (:special-instance-variables *kbin-load-table* *kbin-dump-table* *kbin-table-index*
			       *format-version-read* *kbin-permanent-load-table*
			       *kbin-permanent-dump-table* *kbin-permanent-table-index*
			       *kbin-equal-dump-table* *next-object-table*
			       *next-object-table-object* *string-dumper* *string-loader*
			       *unparsed-header-fields* *dumped-msg-count*)
  (:special-instance-variable-binding-methods zwei:verify-msg-file-format-and-load-header
					      zwei:read-next-msg zwei:save-mail-file-header
					      zwei:save-msg))

(defvar *compact-while-dumping* t)		;When T, move out of working storage, and
						;  "compactify", while dumping.
						;When NIL, don't side-effect on in-core
						;  structure while dumping.

;; Keyed by (class name namespace)
(defvar *anonymous-object-hash-table* (make-hash-table :test 'equal))

(defvar *zmail-area-table*			;alist of areas and opcodes.
	'((*zmail-header-area* kbin-header-area)
	  (*zmail-summary-area* kbin-summary-area)
	  (*zmail-msg-area* kbin-msg-area)
	  (*zmail-msg-line-area* kbin-msg-line-area)
	  (sys:working-storage-area kbin-working-storage-area)))

;;; The message being dumped or loaded.
(defvar *msg-self* nil)

2;;; Macro used in patch files to update loaded 0KBIN2 files to the current format.
0(defmacro upgrade-loaded-kbin-files ((&key include-other-formats) &body msg-update-code)
  `(upgrade-loaded-kbin-files-internal ,include-other-formats
				       #'(lambda (msg)
					   (declare (sys:downward-function))
					   ,@msg-update-code)))
