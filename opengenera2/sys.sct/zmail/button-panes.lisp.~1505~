;;; Those flashing buttons used by Zmail -*- Base: 8; Mode: LISP; Package: TV -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>
;;;>

;;; Some frame and pane help
(DEFUN (WHITE-INCLUDE-WHITESPACE CONSTRAINT-MACRO) (OLD-DESC IGNORE)
  `(INTERDIGITATED-WHITESPACE :WHITE :INCLUDE
    . ,(CDDR OLD-DESC)))

(DEFUN (PANES-IN-WHITESPACE CONSTRAINT-MACRO) (OLD-DESC IGNORE &AUX SIZE PANES)
  (SETF `(NAME PANES-IN-WHITESPACE ,SIZE ,PANES) OLD-DESC)
  `(WHITE-INCLUDE-WHITESPACE
    ,SIZE (:EVEN)
    ,PANES
    ,(LOOP FOR PANE IN PANES COLLECT `(,PANE :ASK :PANE-SIZE))))

(DEFUN (SINGLE-PANE-IN-WHITESPACE CONSTRAINT-MACRO) (OLD-DESC IGNORE &AUX PANE)
  (SETF `(NAME SINGLE-PANE-IN-WHITESPACE ,PANE) OLD-DESC)
  `(PANES-IN-WHITESPACE (:ASK-WINDOW ,PANE :PANE-SIZE) (,PANE)))

(DEFUN (FLOATING-BUTTONS CONSTRAINT-MACRO) (OLD-DESC STACKING &AUX PANES CONVERSE-STACKING
								   NAME-1 NAME-2)
  (SETF `(NAME FLOATING-PANES ,PANES) OLD-DESC)
  (SETQ CONVERSE-STACKING (IF (EQ STACKING ':VERTICAL) ':HORIZONTAL ':VERTICAL)
	NAME-1 (GENSYM) NAME-2 (GENSYM))
  `(,CONVERSE-STACKING (:ASK-WINDOW ,(CAR PANES) :PANE-SIZE-WITH-WHITESPACE)
    (,NAME-1)
    ((,NAME-1 ,STACKING (:EVEN)
      (,NAME-2)
      ((,NAME-2 PANES-IN-WHITESPACE (:ASK-WINDOW ,(CAR PANES) :PANE-SIZE)
	,PANES))))))

(DEFUN (FLOATING-MENUS CONSTRAINT-MACRO) (OLD-DESC IGNORE &AUX SIZE PANES NAMES)
  (SETF `(NAME FLOATING-MENUS ,SIZE ,PANES) OLD-DESC)
  (SETQ NAMES (LOOP FOR NIL IN PANES COLLECT (GENSYM)))
  `(WHITE-INCLUDE-WHITESPACE ,SIZE (:EVEN)
    ,NAMES
    ,(LOOP FOR PANE IN PANES
	   FOR NAME IN NAMES
	   COLLECT `(,NAME WHITE-INCLUDE-WHITESPACE
		     (:ASK-WINDOW ,PANE :PANE-SIZE) (:EVEN)
		     (,PANE)
		     ((,PANE :ASK :PANE-SIZE))))))

(DEFFLAVOR WHITESPACE-PANE-MIXIN () ()
  (:REQUIRED-FLAVORS PANE-MIXIN))

(DEFMETHOD (:PANE-SIZE-WITH-WHITESPACE WHITESPACE-PANE-MIXIN)
	   (REM-WIDTH REM-HEIGHT MAX-WIDTH MAX-HEIGHT STACKING &AUX WITHOUT)
  (SETQ WITHOUT (SEND SELF ':PANE-SIZE REM-WIDTH REM-HEIGHT MAX-WIDTH MAX-HEIGHT STACKING))
  (SETQ WITHOUT (+ WITHOUT 5))
  (SELECTQ STACKING
    (:VERTICAL (MIN REM-HEIGHT WITHOUT))
    (:HORIZONTAL (MIN REM-WIDTH WITHOUT))))

(DEFFLAVOR XOR-ACCENT-MIXIN ((ACCENT NIL)) ()
  (:GETTABLE-INSTANCE-VARIABLES ACCENT)
  (:REQUIRED-FLAVORS ESSENTIAL-WINDOW))

(DEFMETHOD (:SET-ACCENT XOR-ACCENT-MIXIN) (ACCENT-P)
  (OR (EQ (NOT ACCENT-P) (NOT ACCENT))
      (SHEET-FORCE-ACCESS (SELF)
	(SEND SELF ':XOR-ACCENT)))
  (SETQ ACCENT ACCENT-P))

(DEFMETHOD (:REFRESH XOR-ACCENT-MIXIN :AFTER) (&OPTIONAL IGNORE)
  (OR RESTORED-BITS-P (NOT ACCENT)
      (SEND SELF ':XOR-ACCENT)))

(DEFMETHOD (:XOR-ACCENT XOR-ACCENT-MIXIN) ()
  (SEND SELF :DRAW-RECTANGLE (SHEET-INSIDE-WIDTH) (SHEET-INSIDE-HEIGHT) 0 0 :FLIP))

(DEFFLAVOR BASIC-BUTTON ((DOCUMENTATION NIL)) ()
  (:REQUIRED-FLAVORS ESSENTIAL-WINDOW)
  (:INITABLE-INSTANCE-VARIABLES DOCUMENTATION))

(DEFMETHOD (:REFRESH BASIC-BUTTON :AFTER) (&REST IGNORE)
  (OR RESTORED-BITS-P (SEND SELF ':DISPLAY-X-Y-CENTERED-STRING NAME)))

(DEFMETHOD (:SET-NAME BASIC-BUTTON) (NEW-NAME)
  (SETQ NAME NEW-NAME)
  (SHEET-FORCE-ACCESS (SELF)
    (SEND SELF ':REFRESH)))

(DEFMETHOD (:WHO-LINE-DOCUMENTATION-STRING BASIC-BUTTON) ()
  DOCUMENTATION)

(DEFMETHOD (:PANE-SIZE BASIC-BUTTON) (REM-WIDTH REM-HEIGHT IGNORE IGNORE STACKING &AUX L)
  (SELECTQ STACKING
    (:VERTICAL (MIN REM-HEIGHT HEIGHT))
    (:HORIZONTAL (MIN REM-WIDTH
		      (LET ((INSIDE-WIDTH (+ (* CHAR-WIDTH 2)	;Allow a little whitespace
					     (SEND SELF ':STRING-LENGTH NAME))))
			(AND (SETQ L (SEND SELF ':SEND-IF-HANDLES ':LABEL-SIZE))
			     (SETQ INSIDE-WIDTH (MAX INSIDE-WIDTH L)))
			(+ INSIDE-WIDTH LEFT-MARGIN-SIZE RIGHT-MARGIN-SIZE))))))

(DEFFLAVOR SMALL-BUTTON-PANE () (XOR-ACCENT-MIXIN BASIC-BUTTON
				 DONT-SELECT-WITH-MOUSE-MIXIN WHITESPACE-PANE-MIXIN
				 PANE-MIXIN WINDOW-WITHOUT-LABEL)
  (:DEFAULT-INIT-PLIST :CHARACTER-HEIGHT 1 :BLINKER-P NIL :MORE-P NIL))

(DEFMETHOD (:FORCE-KBD-INPUT SMALL-BUTTON-PANE :BEFORE) (&REST IGNORE)
  (SEND SELF ':SET-ACCENT T))

(DEFMETHOD (:MOUSE-SELECT SMALL-BUTTON-PANE) (&REST IGNORE)
  )

(DEFFLAVOR MEDIUM-BUTTON-PANE () (SMALL-BUTTON-PANE)
  (:DEFAULT-INIT-PLIST :DEFAULT-STYLE '(:FIX :ROMAN :LARGE)))

(DEFFLAVOR BUTTON-PANE () (SMALL-BUTTON-PANE)
  (:DEFAULT-INIT-PLIST :DEFAULT-STYLE '(:SANS-SERIF :BOLD :NORMAL) :BORDERS 2))

(DEFFLAVOR BIG-BUTTON-PANE () (SMALL-BUTTON-PANE)
  (:DEFAULT-INIT-PLIST :BORDERS 3 :DEFAULT-STYLE '(:FIX :ROMAN :LARGE)))

(DEFFLAVOR BIG-BUTTON-WITH-TOP-OUTSIDE-LABEL-PANE () (TOP-LABEL-MIXIN BUTTON-PANE))

(DEFFLAVOR ITEM-LIST-PANE-KLUDGE () ()
  (:REQUIRED-FLAVORS BASIC-FRAME))

(DEFMETHOD (:SET-PANES-ITEM-LIST ITEM-LIST-PANE-KLUDGE) (PANE NEW-ITEM-LIST)
  (SETQ PANE (SEND SELF ':GET-PANE PANE))
  (COND ((NOT (EQUAL NEW-ITEM-LIST (SEND PANE ':ITEM-LIST)))
	 (WITHOUT-SCREEN-MANAGEMENT
	   (SEND PANE ':DEEXPOSE))	;This is necessary because it may not fit
	 (SEND PANE ':SET-ITEM-LIST NEW-ITEM-LIST)
	 T)))

(DEFFLAVOR FRAME-WITH-XOR-BUTTONS () ()
  (:REQUIRED-FLAVORS BASIC-CONSTRAINT-FRAME))

(DEFMETHOD (:TURN-OFF-ACCENTS FRAME-WITH-XOR-BUTTONS) ()
  (DO ((I-PANES INTERNAL-PANES (CDR I-PANES))
       (PANE))
      ((NULL I-PANES))
    (SETQ PANE (CDAR I-PANES))
    (AND (TYPEP PANE 'XOR-ACCENT-MIXIN)
	 (SEND PANE ':SET-ACCENT NIL))))

(DEFMETHOD (:SET-PANES-NAME FRAME-WITH-XOR-BUTTONS) (PANE NEW-NAME)
  (SETQ PANE (SEND SELF ':GET-PANE PANE))
  (UNLESS (EQUAL NEW-NAME (SEND PANE ':NAME))
    (LET ((OLD-WIDTH (SEND PANE :PANE-SIZE (SHEET-INSIDE-WIDTH) (SHEET-INSIDE-HEIGHT) 
			   		   (SHEET-INSIDE-WIDTH) (SHEET-INSIDE-HEIGHT)
					   :HORIZONTAL)))
      (DELAYING-SCREEN-MANAGEMENT			
	(SETF (SYMEVAL-IN-INSTANCE PANE 'NAME) NEW-NAME)
	(LET ((NEW-WIDTH (SEND PANE :PANE-SIZE (SHEET-INSIDE-WIDTH) (SHEET-INSIDE-HEIGHT) 
			       (SHEET-INSIDE-WIDTH) (SHEET-INSIDE-HEIGHT)
			       :HORIZONTAL)))
	  (COND ((> NEW-WIDTH OLD-WIDTH)
		 ;; Button needs to grow -- 
		 ;;   Recompute our configuration in order to insure that blanking
		 ;;   continues to work.  (We may also have to move panes around.)
		 (CONSTRAINT-FRAME-CLEAR-CURRENT-POSITION INTERNAL-CONSTRAINTS)
		 (CONSTRAINT-FRAME-RECOMPUTE-CONFIGURATION))
		(T
		 (SHEET-FORCE-ACCESS (PANE)
		   (SEND PANE :REFRESH)))))))))

(DEFFLAVOR BUTTONS-FRAME
	()
	(FRAME-WITH-XOR-BUTTONS PANE-MIXIN
	 CONSTRAINT-FRAME-WITH-SHARED-IO-BUFFER BORDERS-MIXIN))

(DEFMETHOD (:INIT BUTTONS-FRAME :BEFORE) (IGNORE &AUX PANES-NAMES)
  (SETQ PANES-NAMES (MAPCAR #'CAR PANES))
  (SETQ CONSTRAINTS `((ONLY . ((BUTTONS)
			       ((BUTTONS :HORIZONTAL (1.0) (BUTTONS-1)
			         ((BUTTONS-1 WHITE-INCLUDE-WHITESPACE (1.0) (:EVEN)
					     (BUTTONS-2)
				   ((BUTTONS-2 FLOATING-BUTTONS ,PANES-NAMES)))))))))))

(DEFMETHOD (:PANE-SIZE BUTTONS-FRAME) (&REST ARGS)
  (+ (LEXPR-SEND (CDAR INTERNAL-PANES) ':PANE-SIZE ARGS) 5))

(DEFMETHOD (:CHANGE-BUTTONS BUTTONS-FRAME) (&REST PANES-AND-NAMES)
  (LOOP FOR (PANE PANE-NAME) ON PANES-AND-NAMES BY 'CDDR
	DO (SETF (SHEET-NAME PANE) PANE-NAME)
	FINALLY (SEND SELF ':SET-CONFIGURATION 'ONLY)))

(COMPILE-FLAVOR-METHODS BIG-BUTTON-PANE BIG-BUTTON-WITH-TOP-OUTSIDE-LABEL-PANE BUTTON-PANE
			MEDIUM-BUTTON-PANE SMALL-BUTTON-PANE BUTTONS-FRAME)
