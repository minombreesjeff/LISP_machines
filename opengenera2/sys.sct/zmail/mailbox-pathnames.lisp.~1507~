;;; -*- Mode: LISP; Syntax: Zetalisp; Package: ZWEI; Base: 10 -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>
;;;>

;;; Zmail specific generic functions for mailbox pathnames -- Some of these generic
;;;    functions really want to be defined on the host rather than the pathname but
;;;    it's easier to put them all in one place.

;;; Mail file and inbox formats are represented as the flavor of their Zmail buffer.


;;; Mail File Generics

;;; Given the pathname of a user's home directory, return the list of possible
;;; mail file pathnames to be used as the user's default mail file --
;;;    The first extant file in this list will be used or, if none exist, the user
;;;    will be asked to create the first.
(DEFGENERIC POSSIBLE-DEFAULT-MAIL-FILE-PATHNAMES (FS:MAILBOX-PATHNAME-MIXIN)
  (DECLARE (ARGLIST . (HOMEDIR-PATHNAME))
	   (VALUES . (LIST-OF-MAIL-FILE-PATHNAMES)))
  (:METHOD (FS:LOGICAL-PATHNAME)
    (POSSIBLE-DEFAULT-MAIL-FILE-PATHNAMES (SEND SELF :TRANSLATED-PATHNAME))))

;;; Return the list of mail file formats supported by the pathname's system --
;;;    While other format mail files may be stored on the machine, the formats returned
;;;    by this generic function are the only ones guarenteed to be supported in the future.
(DEFGENERIC NATIVE-MAIL-FILE-FORMATS (FS:MAILBOX-PATHNAME-MIXIN)
  (DECLARE (ARGLIST . (ANY-PATHNAME))
	   (VALUES . (LIST-OF-MAIL-FILE-FORMATS)))
  (:FUNCTION
    (LET ((FORMATS-LIST
	    (FUNCALL (FLAVOR:GENERIC NATIVE-MAIL-FILE-FORMATS) FS:MAILBOX-PATHNAME-MIXIN)))
      (IF (CL:MEMBER 'TEXT-MAIL-BUFFER FORMATS-LIST)
	  FORMATS-LIST
	(APPEND FORMATS-LIST '(TEXT-MAIL-BUFFER)))))
  (:METHOD (FS:LOGICAL-PATHNAME)
    (NATIVE-MAIL-FILE-FORMATS (SEND SELF :TRANSLATED-PATHNAME))))

;;; Return the default default mail file format for the given pathname --
;;;    The default default format is the format to be used for the pathname when it can
;;;    not be determined either from the file's content or type or from the type of another
;;;    mail file's buffer.
(DEFGENERIC DEFAULT-DEFAULT-MAIL-FILE-FORMAT (FS:MAILBOX-PATHNAME-MIXIN)
  (DECLARE (ARGLIST . (MAIL-FILE-PATHNAME))
	   (VALUES . (MAIL-FILE-FORMAT)))
  (:METHOD (FS:LOGICAL-PATHNAME)
    (DEFAULT-DEFAULT-MAIL-FILE-FORMAT (SEND SELF :TRANSLATED-PATHNAME))))

;;; Return the default mail file format for the given pathname --
;;;    The default format is derived solely from the pathname's type.  If a default
;;;    format can not be determined, this generic function should return NIL.  See
;;;    CREATE-BUFFER-AND-LOAD-MAIL-FILE and CREATE-BUFFER-FOR-NEW-MAIL-FILE in MAIL-FILES
;;;    for examples of the proper use of this generic.
(DEFGENERIC DEFAULT-MAIL-FILE-FORMAT (FS:MAILBOX-PATHNAME-MIXIN)
  (DECLARE (ARGLIST . (MAIL-FILE-PATHNAME))
	   (VALUES . (MAIL-FILE-FORMAT)))
  (:METHOD (FS:LOGICAL-PATHNAME)
    (DEFAULT-MAIL-FILE-FORMAT (SEND SELF :TRANSLATED-PATHNAME))))

;;; Return the actual mail file format for a pathname given a stream open to the file --
;;;    The method must leave the stream positioned at the beginning of the file.
(DEFGENERIC ACTUAL-MAIL-FILE-FORMAT (FS:MAILBOX-PATHNAME-MIXIN STREAM)
  (DECLARE (ARGLIST . (MAIL-FILE-PATHNAME STREAM))
	   (VALUES . (MAIL-FILE-FORMAT)))
  (:METHOD (FS:LOGICAL-PATHNAME)
    (ACTUAL-MAIL-FILE-FORMAT (SEND SELF :TRANSLATED-PATHNAME) STREAM)))

;;; Returns a system specific default value for a mail file option --
;;;    (Once again, this generic really should be defined on NET:HOST.)
;;;    The default value may be dependent on the mail file format in addition to the system.
(DEFGENERIC HOST-DEFAULT-MAIL-FILE-OPTION-VALUE (FS:MAILBOX-PATHNAME-MIXIN FORMAT OPTION)
  (DECLARE (ARGLIST . (MAIL-FILE-PATHNAME MAIL-FILE-FORMAT MAIL-FILE-OPTION))
	   (VALUES . (DEFAULT-VALUE DEFAULT-VALUE-DEFINED)))
  ;; The default method ...
  (:METHOD (FS:MAILBOX-PATHNAME-MIXIN)
    (IGNORE FORMAT OPTION)
    (VALUES NIL NIL))				;No options are system and format specific.
  ;; Standard logical pathname method ...
  (:METHOD (FS:LOGICAL-PATHNAME)
    (HOST-DEFAULT-MAIL-FILE-OPTION-VALUE (SEND SELF :TRANSLATED-PATHNAME) FORMAT OPTION)))


;;; Inbox Generics

;;; Return the default pathname for the inbox associated with a mail file --
;;;    The :FOR-DEFAULT keyword means that this pathname is going to be used as the default
;;;    value when asking the user for an inbox pathname and, therefore, we should always
;;;    generate a pathname.  Otherwise, we'll only generate a pathname if the mail file
;;;    pathname given as input identifies one of the user's possible default mail files.
;;;    If the pathname given as input is the value of *ZMAIL-STARTUP-FILE-NAME*, we'll
;;;    return the inbox pathname for the user's homedir on the pathname's host.  In this
;;;    way, we insure that *ZMAIL-STARTUP-FILE-NAME* is treated like a true default mail
;;;    file in terms of locating inboxes.
(DEFGENERIC DEFAULT-INBOX-PATHNAME (FS:MAILBOX-PATHNAME-MIXIN &KEY FOR-DEFAULT)
  (DECLARE (ARGLIST . (MAIL-FILE-PATHNAME &KEY FOR-DEFAULT))
	   (VALUES . (INBOX-PATHNAME)))
  (:FUNCTION
    (WHEN (AND *ZMAIL-STARTUP-FILE-NAME*
	       (EQ FS:MAILBOX-PATHNAME-MIXIN
		   (FS:MERGE-PATHNAMES *ZMAIL-STARTUP-FILE-NAME* *ZMAIL-PATHNAME-DEFAULTS*)))
      (SETQ FS:MAILBOX-PATHNAME-MIXIN (FIRST
					(POSSIBLE-DEFAULT-MAIL-FILE-PATHNAMES
					  (FS:USER-HOMEDIR (SEND FS:MAILBOX-PATHNAME-MIXIN
								 :HOST))))))
    (IF FOR-DEFAULT
	(FUNCALL (FLAVOR:GENERIC DEFAULT-INBOX-PATHNAME) FS:MAILBOX-PATHNAME-MIXIN)
      (LOOP WITH OUR-GENERIC-PATHNAME = (SEND FS:MAILBOX-PATHNAME-MIXIN :GENERIC-PATHNAME)
	    FOR PATHNAME IN (POSSIBLE-DEFAULT-MAIL-FILE-PATHNAMES FS:MAILBOX-PATHNAME-MIXIN)
	    WHEN (EQ OUR-GENERIC-PATHNAME (SEND PATHNAME :GENERIC-PATHNAME))
	      RETURN
		(FUNCALL (FLAVOR:GENERIC DEFAULT-INBOX-PATHNAME) FS:MAILBOX-PATHNAME-MIXIN))))
  (:METHOD-ARGLIST)				; :FOR-DEFAULT key is for our use only
  ;; The default method ...
  (:METHOD (FS:MAILBOX-PATHNAME-MIXIN)	   
    (SEND SELF :NEW-PATHNAME :NAME "MAIL" :CANONICAL-TYPE :MAIL))
  ;; Standard logical pathname method ...
  (:METHOD (FS:LOGICAL-PATHNAME)
    (DEFAULT-INBOX-PATHNAME (SEND SELF :TRANSLATED-PATHNAME))))

;;; Given the pathname of a user's home directory, return the pathname of the GMSGS inbox --
;;;    The GMSGS inbox contains the results of running the GMSGS program on the host;
;;;    GMSGS is a program for reading system messages and converting them into a format
;;;    suitable for reading into mail files.
(DEFGENERIC GMSGS-INBOX-PATHNAME (FS:MAILBOX-PATHNAME-MIXIN)
  (DECLARE (ARGLIST . (HOMEDIR-PATHNAME))
	   (VALUES . (INBOX-PATHNAME)))
  ;; The default method -- no GMSGS inbox ...
  (:METHOD (FS:MAILBOX-PATHNAME-MIXIN)
    NIL)
  ;; Standard logical pathname method ...
  (:METHOD (FS:LOGICAL-PATHNAME)
    (GMSGS-INBOX-PATHNAME (SEND SELF :TRANSLATED-PATHNAME))))

;;; Determine the pathname to be used when renaming an inbox --
;;;    The :WILD key is used by INBOX-BUFFER's MAKE-INSTANCE method to check for
;;;    renamed inboxes which are not inserted in the mail file and must be read again.
(DEFGENERIC RENAME-INBOX-PATHNAME (FS:MAILBOX-PATHNAME-MIXIN &KEY WILD)
  (DECLARE (ARGLIST . (INBOX-PATHNAME &KEY WILD))
	   (VALUES . (RENAMED-INBOX-PATHNAME)))
  (:METHOD (FS:LOGICAL-PATHNAME)
    (RENAME-INBOX-PATHNAME (SEND SELF :TRANSLATED-PATHNAME) :WILD WILD)))

;;; Return the inbox format supported by the pathname's system
(DEFGENERIC NATIVE-INBOX-FORMAT (FS:MAILBOX-PATHNAME-MIXIN)
  (DECLARE (ARGLIST . (ANY-PATHNAME))
	   (VALUES . (INBOX-FORMAT)))
  ;; The default method -- no supported inbox format
  (:METHOD (FS:MAILBOX-PATHNAME-MIXIN)
    NIL)
  ;; Standard logical pathname method ...
  (:METHOD (FS:LOGICAL-PATHNAME)
    (NATIVE-INBOX-FORMAT (SEND SELF :TRANSLATED-PATHNAME))))


;;; Miscellaneous Support Functions

;;; A support function for the methods of the ACTUAL-MAIL-FILE-FORMAT generic function that
;;; determines if the file at the other end of a stream may be read in the specified format.
(DEFUN-IN-FLAVOR (STREAM-SUPPORTS-MSG-FILE-FORMAT-P FS:MAILBOX-PATHNAME-MIXIN) (STREAM FORMAT)
  (LET ((STREAM-ELEMENT-TYPE (CL:STREAM-ELEMENT-TYPE STREAM))
	(FORMAT-ELEMENT-TYPE (FLAVOR:FUNCALL-HANDLER
			       FORMAT 'MSG-FILE-ELEMENT-TYPE :PATHNAME SELF)))
    (WHEN (CL:SUBTYPEP FORMAT-ELEMENT-TYPE STREAM-ELEMENT-TYPE)
      FORMAT)))

D,#TD1PsT[Begin using 006 escapes](1 0 (NIL 0) (NIL :ITALIC NIL) "CPTFONTI");;; A support function for the methods of the ACTUAL-MAIL-FILE-FORMAT generic function that
;;; determines if the file at the other end of a stream is a KBIN file.
0(DEFUN-IN-FLAVOR (KBIN-MSG-FILE-FORMAT-P FS:MAILBOX-PATHNAME-MIXIN) (STREAM)
  (DECLARE (SPECIAL KBIN:*KBIN-FORMAT-VERSION-OPCODE* KBIN:*KBIN-FORMAT-OLDEST-VERSION*
		    KBIN:*KBIN-FORMAT-VERSION*))
  (LABELS ((CHECK-OPCODE-AND-VERSION (OPCODE VERSION)
	     (IF (AND (EQL OPCODE KBIN:*KBIN-FORMAT-VERSION-OPCODE*)
		      (NUMBERP VERSION)
		      1;; Use the same bounds check that is used by 0KBIN 1proper to decide
0		      1;; if the0 1file is truly a 0KBIN 1file.
0		      ( (KBIN:ENCODE-IMMEDIATE-INTEGER KBIN:*KBIN-FORMAT-OLDEST-VERSION*)
			 VERSION
			 (KBIN:ENCODE-IMMEDIATE-INTEGER (+ KBIN:*KBIN-FORMAT-VERSION* 100))))
		 'KBIN:KBIN-BUFFER))
	   (CONSTRUCT-AND-CHECK-OPCODE-AND-VERSION (BYTE-1 BYTE-2 BYTE-3 BYTE-4)
	     (LET ((OPCODE (DPB (CHAR-CODE BYTE-1) (BYTE 8 8)
				(DPB (CHAR-CODE BYTE-2) (BYTE 8 0) 0)))
		   (VERSION (DPB (CHAR-CODE BYTE-3) (BYTE 8 8)
				 (DPB (CHAR-CODE BYTE-4) (BYTE 8 0) 0))))
	       (CHECK-OPCODE-AND-VERSION OPCODE VERSION))))
    (COND ((STREAM-SUPPORTS-MSG-FILE-FORMAT-P STREAM 'KBIN:KBIN-BUFFER)
	   (LET ((OPCODE (SEND STREAM :TYI))
		 (VERSION (SEND STREAM :TYI)))
	     (SEND STREAM :SET-POINTER 0)
	     (CHECK-OPCODE-AND-VERSION OPCODE VERSION)))
	  ((CL:SUBTYPEP 'CL:STRING-CHAR (CL:STREAM-ELEMENT-TYPE STREAM))
	   1;; A character stream -- Check for improper opening mode...
0	   (SYS:WITH-STACK-ARRAY (FOUR-CHARS 4 :ELEMENT-TYPE 'CHARACTER)
	     (LET ((N-CHARS-READ (SEND STREAM :STRING-IN NIL FOUR-CHARS)))
	       (SEND STREAM :SET-POINTER 0)
	       (WHEN (AND (= N-CHARS-READ 4)
			  (LOOP FOR CHAR BEING THE ARRAY-ELEMENTS OF FOUR-CHARS
				NEVER (CHAR-FAT-P CHAR)))
		 1;; ... while recognizing that the bytes may be stored swapped.
0		 (OR (CONSTRUCT-AND-CHECK-OPCODE-AND-VERSION (AREF FOUR-CHARS 0)
							     (AREF FOUR-CHARS 1)
							     (AREF FOUR-CHARS 2)
							     (AREF FOUR-CHARS 3))
		     (CONSTRUCT-AND-CHECK-OPCODE-AND-VERSION (AREF FOUR-CHARS 1)
							     (AREF FOUR-CHARS 0)
							     (AREF FOUR-CHARS 3)
							     (AREF FOUR-CHARS 2)))))))
	  (T NIL))))

;;; Generic used by MSG-BUFFER's CHECK-NOT-KBIN-MSG-FILE internal function.
(DEFMETHOD (KBIN-MSG-FILE-P FS:MAILBOX-PATHNAME-MIXIN) (STREAM)
  (KBIN-MSG-FILE-FORMAT-P STREAM))

;;; A support function for the methods of the ACTUAL-MAIL-FILE-FORMAT generic function that
;;; determines if the file at the other end of a stream is a BABYL file.
(DEFUN-IN-FLAVOR (BABYL-MSG-FILE-FORMAT-P FS:MAILBOX-PATHNAME-MIXIN) (STREAM)
  (WHEN (STREAM-SUPPORTS-MSG-FILE-FORMAT-P STREAM 'BABYL-BUFFER)
    (LET ((FIRST-LINE (SEND STREAM :LINE-IN)))
      (SEND STREAM :SET-POINTER 0)
      (IF (STRING-EQUAL FIRST-LINE "Babyl Options:")
	  'BABYL-BUFFER))))

;;; A support function for the methods of the RENAME-INBOX-PATHNAME generic function that
;;; generates the renamed pathname by prepending the supplied string onto the inbox pathname's
;;; type.  This function optionally allows the specification of a new version for
;;; the renamed inbox.  In addition, it handles the :WILD keyword by recognizing that
;;; only :NEWEST versions should be translated to :WILD.
(DEFUN-IN-FLAVOR (RENAME-INBOX-WITH-TYPE-PREFIX FS:MAILBOX-PATHNAME-MIXIN)
		 (TYPE-PREFIX &KEY (VERSION NIL VERSION-P) WILD)
  (LET* ((OLD-TYPE (SEND SELF :RAW-TYPE))
	 (NEW-PATHNAME
	   (SEND SELF :NEW-PATHNAME :RAW-TYPE (STRING-APPEND
						TYPE-PREFIX
						(IF (EQ OLD-TYPE :UNSPECIFIC) "" OLD-TYPE))
				    :VERSION (IF VERSION-P VERSION (SEND SELF :VERSION)))))
    (IF (AND WILD (EQ (SEND NEW-PATHNAME :VERSION) :NEWEST))
	(SEND NEW-PATHNAME :NEW-VERSION :WILD)
      NEW-PATHNAME)))

;;; Construct an approriate User-ID for use in pathnames on our system.
(DEFUN-IN-FLAVOR (GET-USER-ID-FOR-PATHNAME FS:MAILBOX-PATHNAME-MIXIN) (&KEY CASE)
  (LET ((HOST (SEND SELF :HOST)))
    (OR (SEND HOST :HOST-USER-ID)
	(CL:ECASE CASE
	  (:UPPER (SI:STRING-UPCASE-IF-NECESSARY USER-ID))
	  (:LOWER (SI:STRING-DOWNCASE-IF-NECESSARY USER-ID))
	  (:MIXED USER-ID)))))

;;; LMFS Pathnames

(2 0 (NIL 0) (NIL :BOLD NIL) "CPTFONTCB");;; NOTE -- This list should be changed to return the KBIN mail file first.
0(DEFMETHOD (POSSIBLE-DEFAULT-MAIL-FILE-PATHNAMES FS:LMFS-MAILBOX-PATHNAME-MIXIN) ()
  (LIST (SEND SELF :NEW-PATHNAME :NAME "MAIL" :TYPE :BABYL :VERSION :NEWEST)
	(SEND SELF :NEW-PATHNAME :NAME "MAIL" :TYPE :KBIN :VERSION :NEWEST)
	(SEND SELF :NEW-PATHNAME :NAME "BABYL" :TYPE :TEXT :VERSION :NEWEST)))

(DEFMETHOD (NATIVE-MAIL-FILE-FORMATS FS:LMFS-MAILBOX-PATHNAME-MIXIN) ()
  '(BABYL-BUFFER RMAIL-BUFFER DIRECTORY-MAIL-BUFFER KBIN:KBIN-BUFFER TEXT-MAIL-BUFFER))

2;;; NOTE -- The default default should be changed to KBIN.
0(DEFMETHOD (DEFAULT-DEFAULT-MAIL-FILE-FORMAT FS:LMFS-MAILBOX-PATHNAME-MIXIN) ()
  'BABYL-BUFFER)

(DEFMETHOD (DEFAULT-MAIL-FILE-FORMAT FS:LMFS-MAILBOX-PATHNAME-MIXIN) ()
  (CL:CASE (SEND SELF :CANONICAL-TYPE)
    (:BABYL 'BABYL-BUFFER)
    (:KBIN 'KBIN:KBIN-BUFFER)
    (:RMAIL 'RMAIL-BUFFER)
    (OTHERWISE NIL)))				;Can't tell without looking at contents

(DEFMETHOD (ACTUAL-MAIL-FILE-FORMAT FS:LMFS-MAILBOX-PATHNAME-MIXIN) (STREAM)
  (OR (KBIN-MSG-FILE-FORMAT-P STREAM)
      (BABYL-MSG-FILE-FORMAT-P STREAM)
      (WHEN (STREAM-SUPPORTS-MSG-FILE-FORMAT-P STREAM 'DIRECTORY-MAIL-BUFFER)
	(LET ((FIRST-LINE (SEND STREAM :LINE-IN)))
	  (SEND STREAM :SET-POINTER 0)
	  (IF (STRING-EQUAL FIRST-LINE "*Mail file directory*")
	      'DIRECTORY-MAIL-BUFFER)))
      ;; Any other text file is assumed to be an RMAIL file...
      (STREAM-SUPPORTS-MSG-FILE-FORMAT-P STREAM 'RMAIL-BUFFER)))

(DEFMETHOD (DEFAULT-INBOX-PATHNAME FS:LMFS-MAILBOX-PATHNAME-MIXIN) ()
  (SEND SELF :NEW-PATHNAME :NAME "MAIL" :TYPE :TEXT :VERSION :NEWEST))

(DEFMETHOD (RENAME-INBOX-PATHNAME FS:LMFS-MAILBOX-PATHNAME-MIXIN) (&KEY WILD)
  (RENAME-INBOX-WITH-TYPE-PREFIX "_ZMAIL_" :VERSION :NEWEST :WILD WILD))

(DEFMETHOD (NATIVE-INBOX-FORMAT FS:LMFS-MAILBOX-PATHNAME-MIXIN) ()
  'ITS-INBOX-BUFFER)

;;; ITS Pathnames

2;;; NOTE -- This list should be changed to return the KBIN mail file first.
0(DEFMETHOD (POSSIBLE-DEFAULT-MAIL-FILE-PATHNAMES FS:ITS-MAILBOX-PATHNAME-MIXIN) ()
  (LET ((NAME (GET-USER-ID-FOR-PATHNAME :CASE :UPPER)))
    (LIST (SEND SELF :NEW-PATHNAME :NAME NAME :TYPE :BABYL :VERSION :NEWEST)
	  (SEND SELF :NEW-PATHNAME :NAME NAME :TYPE :KBIN :VERSION :NEWEST)
	  (SEND SELF :NEW-PATHNAME :NAME NAME :TYPE :RMAIL :VERSION :NEWEST))))

(DEFMETHOD (NATIVE-MAIL-FILE-FORMATS FS:ITS-MAILBOX-PATHNAME-MIXIN) ()
  '(RMAIL-BUFFER BABYL-BUFFER KBIN:KBIN-BUFFER TEXT-MAIL-BUFFER))

(DEFMETHOD (DEFAULT-DEFAULT-MAIL-FILE-FORMAT FS:ITS-MAILBOX-PATHNAME-MIXIN) ()
  'RMAIL-BUFFER)

(DEFMETHOD (DEFAULT-MAIL-FILE-FORMAT FS:ITS-MAILBOX-PATHNAME-MIXIN) ()
  (CL:CASE (SEND SELF :CANONICAL-TYPE)
    (:BABYL 'BABYL-BUFFER)
    (:RMAIL 'RMAIL-BUFFER)
    (:KBIN 'KBIN:KBIN-BUFFER)
    (OTHERWISE NIL)))				;Can't tell without looking at content

(DEFMETHOD (ACTUAL-MAIL-FILE-FORMAT FS:ITS-MAILBOX-PATHNAME-MIXIN) (STREAM)
  (OR (KBIN-MSG-FILE-FORMAT-P STREAM)
      (BABYL-MSG-FILE-FORMAT-P STREAM)
      ;; Any other text file is assumed to be an RMAIL file...
      (STREAM-SUPPORTS-MSG-FILE-FORMAT-P STREAM 'RMAIL-BUFFER)))

(DEFMETHOD (DEFAULT-INBOX-PATHNAME FS:ITS-MAILBOX-PATHNAME-MIXIN) ()
  (SEND SELF :NEW-PATHNAME :NAME (GET-USER-ID-FOR-PATHNAME :CASE :UPPER) :TYPE :MAIL))

(DEFMETHOD (GMSGS-INBOX-PATHNAME FS:ITS-MAILBOX-PATHNAME-MIXIN) ()
  (SEND SELF :NEW-PATHNAME :NAME (GET-USER-ID-FOR-PATHNAME :CASE :UPPER) :TYPE :GMSGS))

(DEFMETHOD (RENAME-INBOX-PATHNAME FS:ITS-MAILBOX-PATHNAME-MIXIN) (&KEY WILD)
  (IGNORE WILD)					;No multiply renamed inboxes on ITS.
  (CL:CASE (SEND SELF :CANONICAL-TYPE)
    (:MAIL (SEND SELF :NEW-CANONICAL-TYPE :ZMAIL-TEMP))
    (:GMSGS (SEND SELF :NEW-CANONICAL-TYPE :GMSGS-TEMP))
    (OTHERWISE (RENAME-INBOX-WITH-TYPE-PREFIX "_Z"))))

(DEFMETHOD (NATIVE-INBOX-FORMAT FS:ITS-MAILBOX-PATHNAME-MIXIN) ()
  'ITS-INBOX-BUFFER)

;;; TENEX Family Pathnames -- Includes TENEX and TOPS20 systems.
;;;    Note that all three flavors referenceed below are built on FS:MAILBOX-PATHNAME-MIXIN
;;;    even though their names don't indicate this.

;;; Common methods

2;;; NOTE -- This list should be changed to return the KBIN mail file first.
0(DEFMETHOD (POSSIBLE-DEFAULT-MAIL-FILE-PATHNAMES FS:TENEX-FAMILY-PATHNAME-MIXIN) ()
  (LET ((NAME (GET-USER-ID-FOR-PATHNAME :CASE :UPPER)))
    (LIST (SEND SELF :NEW-PATHNAME :NAME NAME :TYPE :BABYL :VERSION :NEWEST)
	  (SEND SELF :NEW-PATHNAME :NAME NAME :TYPE :KBIN :VERSION :NEWEST)
	  (SEND SELF :NEW-PATHNAME :NAME "OLDMAIL" :TYPE "TXT" :VERSION :NEWEST))))

(DEFMETHOD (NATIVE-MAIL-FILE-FORMATS FS:TENEX-FAMILY-PATHNAME-MIXIN) ()
  '(FILE-TENEX-BUFFER BABYL-BUFFER KBIN:KBIN-BUFFER TEXT-MAIL-BUFFER))

(DEFMETHOD (DEFAULT-DEFAULT-MAIL-FILE-FORMAT FS:TENEX-FAMILY-PATHNAME-MIXIN) ()
  'BABYL-BUFFER)

(DEFMETHOD (DEFAULT-MAIL-FILE-FORMAT FS:TENEX-FAMILY-PATHNAME-MIXIN) ()
  (CL:CASE (SEND SELF :CANONICAL-TYPE)
    (:BABYL 'BABYL-BUFFER)
    (:KBIN 'KBIN:KBIN-BUFFER)
    (OTHERWISE NIL)))

(DEFMETHOD (ACTUAL-MAIL-FILE-FORMAT FS:TENEX-FAMILY-PATHNAME-MIXIN) (STREAM)
  (OR (KBIN-MSG-FILE-FORMAT-P STREAM)
      (BABYL-MSG-FILE-FORMAT-P STREAM)
      ;; Any other text file is assumed to be a native TENEX file...
      (STREAM-SUPPORTS-MSG-FILE-FORMAT-P STREAM 'FILE-TENEX-BUFFER)))

(DEFMETHOD (HOST-DEFAULT-MAIL-FILE-OPTION-VALUE FS:TENEX-FAMILY-PATHNAME-MIXIN)
	   (FORMAT OPTION)
  (IGNORE FORMAT)				;True for all formats on TENEX ...
  (CL:CASE OPTION
    (:APPEND (VALUES T T))			;Always append new mail on TENEX.
    (OTHERWISE (VALUES NIL NIL))))

(DEFMETHOD (NATIVE-INBOX-FORMAT FS:TENEX-FAMILY-PATHNAME-MIXIN) ()
  'TENEX-INBOX-BUFFER)


;;; TENEX specific methods

(DEFMETHOD (DEFAULT-INBOX-PATHNAME FS:TENEX-PATHNAME-MIXIN) ()
  (SEND SELF :NEW-PATHNAME :NAME "MESSAGE" :TYPE "TXT" :VERSION 1))

(DEFMETHOD (RENAME-INBOX-PATHNAME FS:TENEX-PATHNAME-MIXIN) (&KEY WILD)
  (RENAME-INBOX-WITH-TYPE-PREFIX "-ZMAIL-" :VERSION :NEWEST :WILD WILD))


;;; TOPS20 (TWENEX) specific methods

(DEFMETHOD (DEFAULT-INBOX-PATHNAME FS:TOPS20-PATHNAME-MIXIN) ()
  (SEND SELF :NEW-PATHNAME :NAME "MAIL" :TYPE "TXT" :VERSION 1))

(DEFMETHOD (GMSGS-INBOX-PATHNAME FS:TOPS20-PATHNAME-MIXIN) ()
  (SEND SELF :NEW-PATHNAME :NAME "GMSGS" :TYPE "TXT" :VERSION :NEWEST))

(DEFMETHOD (RENAME-INBOX-PATHNAME FS:TOPS20-PATHNAME-MIXIN) (&KEY WILD)
  (RENAME-INBOX-WITH-TYPE-PREFIX "_ZMAIL_" :VERSION :NEWEST :WILD WILD))

;;; UNIX Family Pathnames

2;;; NOTE -- This list should be changed to return the KBIN mail file first.
0(DEFMETHOD (POSSIBLE-DEFAULT-MAIL-FILE-PATHNAMES FS:UNIX-MAILBOX-PATHNAME-MIXIN) ()
  (LET ((NAME (GET-USER-ID-FOR-PATHNAME :CASE :LOWER)))
    (LIST (SEND SELF :NEW-PATHNAME :RAW-NAME "RMAIL" :TYPE :UNSPECIFIC :VERSION :UNSPECIFIC)
	  (SEND SELF :NEW-PATHNAME :RAW-NAME NAME :TYPE :BABYL :VERSION :UNSPECIFIC)
	  (SEND SELF :NEW-PATHNAME :RAW-NAME NAME :TYPE :KBIN :VERSION :UNSPECIFIC)
	  (SEND SELF :NEW-PATHNAME :RAW-NAME "mbox" :TYPE :UNSPECIFIC :VERSION :UNSPECIFIC))))

(DEFMETHOD (NATIVE-MAIL-FILE-FORMATS FS:UNIX-MAILBOX-PATHNAME-MIXIN) ()
  '(UNIX-MAIL-BUFFER BABYL-BUFFER KBIN:KBIN-BUFFER TEXT-MAIL-BUFFER))

(DEFMETHOD (DEFAULT-DEFAULT-MAIL-FILE-FORMAT FS:UNIX-MAILBOX-PATHNAME-MIXIN) ()
  'UNIX-MAIL-BUFFER)

(DEFMETHOD (DEFAULT-MAIL-FILE-FORMAT FS:UNIX-MAILBOX-PATHNAME-MIXIN) ()
  (IF (AND (STRING= (SEND SELF :RAW-NAME) "RMAIL")
	   (EQ (SEND SELF :RAW-TYPE) :UNSPECIFIC))
      'BABYL-BUFFER
    (CL:CASE (SEND SELF :CANONICAL-TYPE)
      (:BABYL 'BABYL-BUFFER)
      (:KBIN 'KBIN:KBIN-BUFFER)
      (OTHERWISE NIL))))

(DEFMETHOD (ACTUAL-MAIL-FILE-FORMAT FS:UNIX-MAILBOX-PATHNAME-MIXIN) (STREAM)
  (OR (KBIN-MSG-FILE-FORMAT-P STREAM)
      (BABYL-MSG-FILE-FORMAT-P STREAM)
      ;; Any other text file is assumed to be a native Unix file...
      (STREAM-SUPPORTS-MSG-FILE-FORMAT-P STREAM 'UNIX-MAIL-BUFFER)))

(DEFMETHOD (HOST-DEFAULT-MAIL-FILE-OPTION-VALUE FS:UNIX-MAILBOX-PATHNAME-MIXIN)
	   (FORMAT OPTION)
  (IGNORE FORMAT)				;True for all formats on UNIX ...
  (CL:CASE OPTION
    (:APPEND (VALUES T T))			;Always append new mail on UNIX.
    (OTHERWISE (VALUES NIL NIL))))

(DEFMETHOD (DEFAULT-INBOX-PATHNAME FS:UNIX-MAILBOX-PATHNAME-MIXIN) ()
  (SEND SELF :NEW-PATHNAME :RAW-DIRECTORY '("usr" "spool" "mail")
			   :RAW-NAME (GET-USER-ID-FOR-PATHNAME :CASE :LOWER)
			   :TYPE :UNSPECIFIC :VERSION :UNSPECIFIC))

(DEFMETHOD (RENAME-INBOX-PATHNAME FS:UNIX-MAILBOX-PATHNAME-MIXIN) (&KEY WILD)
  (IGNORE WILD)					;No multiply renamed inboxes on UNIX.
  (SEND SELF :NEW-RAW-TYPE "zmail"))

(DEFMETHOD (NATIVE-INBOX-FORMAT FS:UNIX-MAILBOX-PATHNAME-MIXIN) ()
  'UNIX-INBOX)

;;; Macintosh Pathnames
;;; 1   0Can store mail files on the Macintosh, but no support for any Macintosh
;;; 1   0native mail file or inbox formats (are there any?)
2;;; -- Should these methods be on a mixin instead of MAC-FS:MACINTOSH-PATHNAME ?

;;; NOTE -- This list should be changed to return the KBIN mail file first.
0(DEFMETHOD (POSSIBLE-DEFAULT-MAIL-FILE-PATHNAMES MAC-FS:MACINTOSH-PATHNAME) ()
  (LIST (SEND SELF :NEW-PATHNAME :NAME "MAIL" :TYPE :BABYL :VERSION :NEWEST)
	(SEND SELF :NEW-PATHNAME :NAME "MAIL" :TYPE :KBIN :VERSION :NEWEST)))

(DEFMETHOD (NATIVE-MAIL-FILE-FORMATS MAC-FS:MACINTOSH-PATHNAME) ()
  '(BABYL-BUFFER RMAIL-BUFFER KBIN:KBIN-BUFFER TEXT-MAIL-BUFFER))

2;;; NOTE -- The default default should be changed to KBIN.
0(DEFMETHOD (DEFAULT-DEFAULT-MAIL-FILE-FORMAT MAC-FS:MACINTOSH-PATHNAME) ()
  'BABYL-BUFFER)

(DEFMETHOD (DEFAULT-MAIL-FILE-FORMAT MAC-FS:MACINTOSH-PATHNAME) ()
  (CL:CASE (SEND SELF :CANONICAL-TYPE)
    (:BABYL 'BABYL-BUFFER)
    (:KBIN 'KBIN:KBIN-BUFFER)
    (:RMAIL 'RMAIL-BUFFER)
    (OTHERWISE NIL)))				;Can't tell without looking at contents

(DEFMETHOD (ACTUAL-MAIL-FILE-FORMAT MAC-FS:MACINTOSH-PATHNAME) (STREAM)
  (OR (KBIN-MSG-FILE-FORMAT-P STREAM)
      (BABYL-MSG-FILE-FORMAT-P STREAM)
      ;; Any other text file is assumed to be an RMAIL file...
      (STREAM-SUPPORTS-MSG-FILE-FORMAT-P STREAM 'RMAIL-BUFFER)))
