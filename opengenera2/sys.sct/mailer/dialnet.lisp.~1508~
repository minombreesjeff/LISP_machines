D,#TD1PsT[Begin using 006 escapes](1 0 (NIL 0) (NIL :ITALIC NIL) "CPTFONTI");; -*- Mode: Lisp; Package: Mailer; Base: 10.; Syntax: ZetaLisp; Lowercase: Yes -*-
0;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>
;;;>

1;; Dialnet registry

0(defprop (2 0 (NIL 0) (NIL :BOLD NIL) "CPTFONTCB")dialnet-registry0 "Dialnet setup" herald)

(defun 2(dialnet-registry cold-boot) 0()
  (su:log-event :normal "Restoring subnet information from disk")
  (verbosely-load-registries))

(defun 2verbosely-load-registries0 ()
  (let ((loaded-registries #+VLM :no-registries-found
			   #-VLM
			   (dial:load-dialnet-registry))
	(machine-is-dialnet-mailer (send (neti:find-network-named :dial) :dialnet-interfaces)))
    (selectq loaded-registries
      (:no-registries-found
       (when machine-is-dialnet-mailer
	 (su:log-event :problem "No dialnet registry or subnet files were found.~@
                                 Lacking :SUBNET information, the mailer may not be~@
                                 able to figure out what to dial for a given phone number.~@
                                 You should create a SYS:SITE;SUBNETS.LISP file, possibly~@
                                 by using the conversion tool on any old registries you have.")))
      (:unavailable
       ;; Complain about network errors regardless of whether or not we're a Dialnet mailer.
       ;; Since we can't tell if any (obsolete) registries were around that didn't get loaded
       ;; because of the error, we'd better make sure the user knows.  Since this is a network
       ;; error and not simple file-not-found, it's presumably transient.
       (su:log-event :problem "Dialnet registry or subnet files were unavailable~@
                               due to some sort of network error.  Lacking :SUBNET~@
                               information, the mailer may not be able to figure out~@
                               what to dial for a given phone number until whatever~@
                               network error that makes the registry or subnet files~@
                               unavailable has been corrected."))
      ((nil)
       (su:log-event :normal
		     "Used the loaded subnet data since no changes were made to the information on disk"))
      (otherwise
       (loop with loaded-a-subnet-file = nil
	     for registry in loaded-registries
	     for registry-is-subnet-file = (send registry :subnet-only)
	     for registry-string =
		 (let ((last (send registry :last-checked-creation-date)))
		   (cond ((numberp last)	; This is a date.
			  (format nil "Loaded ~:[~A registry~;~*subnets file~] last modified on ~\time\"
				  registry-is-subnet-file
				  (send registry :name)
				  (send registry :last-checked-creation-date)))
			 (t			; Not a date.  Probably something like :NOT-FOUND or :UNAVAILABLE.
			  ;; Only complain about the subnets file itself here, not any registries.
			  ;; Network errors get a complaint no matter what, but a not-found subnets
			  ;; file only gets a complaint if we run Dialnet on this mailer.  This
			  ;; keeps us from nagging non-Dialnet sites that we can't find the file.
			  (when (and registry-is-subnet-file
				     (or machine-is-dialnet-mailer
					 (neq last :not-found)))
			    (format nil "Subnets file ~A ~:[unavailable due to network error~;not found~]"
				    (send registry :pathname)
				    (eq last :not-found))))))
	     if registry-is-subnet-file
	       do (setf loaded-a-subnet-file t)
	     else
	       collect registry into registries-to-warn-about
	     when registry-string
	       do (su:log-event :normal registry-string)
	     finally
	       (when registries-to-warn-about
		 ;; It's fair game to complain here even if this machine isn't a Dialnet mailer,
		 ;; since even non-Dialnet mailers shouldn't be using registries any more.
		 (su:log-event :problem
			       "Dialnet registries have been declared obsolete in Genera 8.0,~@
                                because the :HOST and :DOMAIN information in them is now available~@
                                via the domain name system.  In a future release, Dialnet registries~@
                                will not be loaded at all, requiring you to have preserved their~@
                                :SUBNET information in your SYS:SITE;SUBNETS.LISP file, possibly~@
                                by using the conversion tool.")
		 ;; Despite the fact that users don't have a hook to even add to the list of Dialnet
		 ;; registries to be loaded, let's make sure we don't emit a huge string if they've
		 ;; somehow added them.
		 (let* ((warning
				 (format nil
					 "For compatibility until you convert, the following ~@
					 ~:[files were~;file was~] loaded anyway because ~
					 ~:*~:[they were~;it was~] around:~@
					 ~A"
					 (= (length registries-to-warn-about) 1)
					 (format:print-list nil "~A"
							    (loop for registry in registries-to-warn-about
								  collect (send registry :pathname))
							    ",~&")))
			(chopped-warning	; We'd have to load around 9 registries to get truncated ...
			  (if (> (string-length warning) 460)	; ... but let's truncate just in case.  How incredibly gross.
			      (string-append (substring warning 0 460) "...")
			      warning)))
		 (su:log-event :problem
			       chopped-warning)))
	       (when machine-is-dialnet-mailer
		 ;; We only complain about a missing subnets file if the machine is a Dialnet mailer,
		 ;; since non-Dialnet sites are allowed not to have one.
		 (unless loaded-a-subnet-file
		   ;; If we haven't loaded a subnet file, we must have loaded a registry file if we're here.
		   ;; If we haven't loaded either, then we would have taken the (NIL) case above.
		   (su:log-event :problem
				 "Dialnet registries have been declared obsolete in Genera 8.0,~@
				 because the :HOST and :DOMAIN information in them is now available~@
				 via the domain name system.  However, your SYS:SITE;SUBNETS.LISP~@
				 file is missing, indicating you have not yet converted to its use.")
		   (su:log-event :problem
				 "Since registries were loaded, you probably have :SUBNET information~@
				 loaded and the mailer can dial the phone, but you should convert to~@
				 using the domain name system and the subnets file as soon as possible,~@
				 possibly by using the conversion tool.")
		   )))))))

(defun 2(dialnet-registry warm-boot)0 ())

(defun2 reload-dialnet-registry0 ()
  (dial:forget-dialnet-registries-were-loaded)
  (with-log-output-to-user "Load Subnet File"
    (verbosely-load-registries)))
