/* -*- Mode: C; Package: C-USER; Search-list: RPC -*- */


/* Server portion of UNIX-PREDEFINED-REMOTE-ENTRIES remote module version 1
   Generated from S:>rel-8-3>sys>embedding>ux>predefined-entries.lisp.6
   by dodds on Thursday the twelfth of November, 1992; 7:57:11 pm */

#include "RPC.h"

char * rpc_server_name = "";
char * rpc_server_version = "";

static OSErr raw_server_name_and_version_handler PROTO_ARGS((XDRAgent the_XDRAgent,
                                                             LongInt TransactionID,
                                                             XDRBlock CallXDRBlock,
                                                             LongInt * the_XDRPointer,
                                                             LongInt * XDRLimit));

static OSErr raw_server_name_and_version_handler(the_XDRAgent,
                                                 TransactionID,
                                                 CallXDRBlock,
                                                 the_XDRPointer,
                                                 XDRLimit) 
XDRAgent the_XDRAgent;
LongInt TransactionID;
XDRBlock CallXDRBlock;
LongInt * the_XDRPointer;
LongInt * XDRLimit;
{ XDRAgent XDR_Agent = the_XDRAgent;
  LongInt * XDRPointer = the_XDRPointer;
  LongInt length_tem_1, length_tem_2;
  OSErr system_error_code = noErr;
  
  XDRVerifyPointer(XDRPointer, XDRLimit);
  { XDRBlock ReplyXDRBlock;
    { extern char * rpc_server_name, *rpc_server_version;
      { system_error_code = XDRInitiateReply(XDR_Agent,
                                             TransactionID,
                                             (LongInt)((LongInt)(strlen(rpc_server_name) +
                                                           7) >> 2) +
                                             ((LongInt)(strlen(rpc_server_version) +
                                                     7) >> 2),
                                             &ReplyXDRBlock,
                                             &the_XDRPointer,
                                             &XDRLimit);
        if(system_error_code)goto _end_;
        XDRPointer = the_XDRPointer;
        length_tem_1 = strlen(rpc_server_name);
        *(XDRPointer++) = length_tem_1;
        CopyMemory((void *)rpc_server_name, (void *)XDRPointer,
                   (LongInt)length_tem_1);
        XDRPointer += (length_tem_1 + 3) >> 2;
        length_tem_2 = strlen(rpc_server_version);
        *(XDRPointer++) = length_tem_2;
        CopyMemory((void *)rpc_server_version, (void *)XDRPointer,
                   (LongInt)length_tem_2);
        XDRPointer += (length_tem_2 + 3) >> 2;
        XDRVerifyPointer(XDRPointer, XDRLimit);
        system_error_code = XDRSendReply(XDR_Agent,
                                         ReplyXDRBlock);
        if(system_error_code)goto _end_;
        };
      }
    _end_ :;
    }
  return(system_error_code);
  }

static OSErr unix_predefined_remote_entries_server PROTO_ARGS((XDRAgent agent,
                                                               LongInt TransactionID,
                                                               LongInt entry_number,
                                                               XDRBlock block,
                                                               LongInt * pointer,
                                                               LongInt * limit));


static OSErr unix_predefined_remote_entries_server(agent,
                                                   TransactionID,
                                                   entry_number,
                                                   block,
                                                   pointer,
                                                   limit) 
XDRAgent agent;
LongInt TransactionID, entry_number;
XDRBlock block;
LongInt * pointer;
LongInt * limit;
{ register FunctionPtr handler;
  switch((int)entry_number)
  { case 1 : handler = raw_server_name_and_version_handler;
    break;
    default : return(RPC_PROC_UNAVAIL);
    };
  return((*handler)(agent, TransactionID, block, pointer,
                    limit));
  }


extern OSErr initialize_unix_predefined_remote_entries_server PROTO_ARGS((void));

OSErr initialize_unix_predefined_remote_entries_server()
{ return(RegisterModule((LongInt)0x7F000140, (LongInt)1, unix_predefined_remote_entries_server));
  }
