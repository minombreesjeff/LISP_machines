;;; -*- Mode: LISP; Syntax: Common-Lisp; Package: RPC; Base: 10 -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

;;; RPC trace facility
;;;--- Eventually tie this into the metering facility

;;; T to turn tracing on
(DEFVAR *RPC-TRACE-ENABLED* NIL)

;;; An array with one entry for each XDR block sent or received, used as a
;;; circular buffer.  The elements are described by the structure below.
(DEFVAR *RPC-TRACE-BUFFER*)

;;; Index of next element to be stored into *RPC-TRACE-BUFFER*.
(DEFVAR *RPC-TRACE-INDEX*)

(ZL:DEFSTRUCT (RPC-TRACE-BUFFER-ELEMENT (:TYPE GROUPED-ARRAY) (:CONC-NAME RPC-TRACE-)
					(:SIZE-SYMBOL RPC-TRACE-BUFFER-ELEMENT-PREFIX-SIZE))
  TIME		;%MICROSECOND-CLOCK when send/receive began
  AGENT		;which transport agent
  DIRECTION	;:INPUT or :OUTPUT
  PROCESS	;which process (the name, not the object, since they get reused)
  STACK-DEPTH	;depth in words of the control stack
  BLOCK-SIZE	;number of words in XDR block
  BLOCK)	;first word of XDR block

(DEFCONSTANT RPC-TRACE-BUFFER-ELEMENT-SIZE 26)		;number of words per element
							;truncate BLOCK to what fits in this

(DEFUN WRITE-RPC-TRACE (AGENT DIRECTION XDR-BLOCK)
  (LET ((BUFFER *RPC-TRACE-BUFFER*) (INDEX *RPC-TRACE-INDEX*))
    (DECLARE (SYS:ARRAY-REGISTER BUFFER))
    (SETF (RPC-TRACE-TIME INDEX BUFFER) (%MICROSECOND-CLOCK))
    (SETF (RPC-TRACE-AGENT INDEX BUFFER) AGENT)
    (SETF (RPC-TRACE-DIRECTION INDEX BUFFER) DIRECTION)
    (SETF (RPC-TRACE-PROCESS INDEX BUFFER) (PROCESS-NAME *CURRENT-PROCESS*))
    (SETF (RPC-TRACE-STACK-DEPTH INDEX BUFFER) (%POINTER-DIFFERENCE (%STACK-FRAME-POINTER)
								    %CONTROL-STACK-LOW))
    (LET ((POINTER (XDR-BLOCK-DATA-POINTER AGENT XDR-BLOCK))
	  (SIZE (XDR-BLOCK-DATA-SIZE AGENT XDR-BLOCK)))
      (SETF (RPC-TRACE-BLOCK-SIZE INDEX BUFFER) SIZE)
      (#+3600 %BLOCK-GC-COPY #+IMACH %BLOCK-COPY-3232
       POINTER (LOCF (RPC-TRACE-BLOCK INDEX BUFFER))
       (MIN SIZE (- RPC-TRACE-BUFFER-ELEMENT-SIZE (1- RPC-TRACE-BUFFER-ELEMENT-PREFIX-SIZE))))
      (INCF INDEX RPC-TRACE-BUFFER-ELEMENT-SIZE)
      (SETQ *RPC-TRACE-INDEX* (IF (< INDEX (ARRAY-TOTAL-SIZE BUFFER)) INDEX 0)))))

(DEFUN ENABLE-RPC-TRACE (&OPTIONAL (BUFFER-SIZE 100))
  (UNLESS (AND (VARIABLE-BOUNDP *RPC-TRACE-BUFFER*)
	       (= (ARRAY-TOTAL-SIZE *RPC-TRACE-BUFFER*)
		  (* BUFFER-SIZE RPC-TRACE-BUFFER-ELEMENT-SIZE)))
    (SETQ *RPC-TRACE-BUFFER* (MAKE-ARRAY (* BUFFER-SIZE RPC-TRACE-BUFFER-ELEMENT-SIZE))))
  (FILL *RPC-TRACE-BUFFER* NIL)
  (SETQ *RPC-TRACE-INDEX* 0)
  (SETQ *RPC-TRACE-ENABLED* T))

(DEFUN DISABLE-RPC-TRACE ()
  (SETQ *RPC-TRACE-ENABLED* NIL))

;;; This can be improved later.  Just print it out, in oldest-first order
;;; Skips showing the agent
(DEFUN SHOW-RPC-TRACE (N-NEWEST-TO-SHOW &OPTIONAL (N-NEWEST-TO-SKIP 0))
  (DISABLE-RPC-TRACE)
  ;; First find the oldest entry, which depends on whether it has wrapped around yet
  (LET* ((OLDEST (IF (RPC-TRACE-TIME *RPC-TRACE-INDEX* *RPC-TRACE-BUFFER*)
		     *RPC-TRACE-INDEX*
		     0))
	 (COUNT (FLOOR (IF (RPC-TRACE-TIME *RPC-TRACE-INDEX* *RPC-TRACE-BUFFER*)
			   (ARRAY-TOTAL-SIZE *RPC-TRACE-BUFFER*)
			   *RPC-TRACE-INDEX*)
		       RPC-TRACE-BUFFER-ELEMENT-SIZE))
	 (SKIP (MAX 0 (- COUNT N-NEWEST-TO-SHOW N-NEWEST-TO-SKIP)))
	 (SHOW (MIN N-NEWEST-TO-SHOW (- COUNT SKIP N-NEWEST-TO-SKIP)))
	 (BUFFER *RPC-TRACE-BUFFER*))
    (DECLARE (SYS:ARRAY-REGISTER BUFFER))
    (FORMAT T "~&RPC trace has ~:D entr~:@P.  Showing entries ~D-~D, oldest first:"
	    COUNT SKIP (+ SKIP SHOW -1))
    ;; Loop over the entries to be printed, oldest first
    (LOOP FOR INDEX FROM (MOD (+ OLDEST (* SKIP RPC-TRACE-BUFFER-ELEMENT-SIZE))
			      (ARRAY-TOTAL-SIZE *RPC-TRACE-BUFFER*))
		    BY RPC-TRACE-BUFFER-ELEMENT-SIZE
	  REPEAT SHOW
	  WITH TIME = NIL DO
      (UNLESS (< INDEX (ARRAY-TOTAL-SIZE *RPC-TRACE-BUFFER*))
	(SETQ INDEX 0))
      ;; Elapsed time in microseconds since last entry
      (IF TIME (FORMAT T "~&~8D " (%32-BIT-DIFFERENCE (RPC-TRACE-TIME INDEX BUFFER) TIME))
	  (FORMAT T "~&~9@T"))
      (SETQ TIME (RPC-TRACE-TIME INDEX BUFFER))
      ;; direction, process name, stack depth, block size
      (FORMAT T "~A ~28<~A@~D~;[~D]~>: "
	      (IF (EQ (RPC-TRACE-DIRECTION INDEX BUFFER) ':INPUT) #\I #\O)
	      (RPC-TRACE-PROCESS INDEX BUFFER)
	      (RPC-TRACE-STACK-DEPTH INDEX BUFFER)
	      (RPC-TRACE-BLOCK-SIZE INDEX BUFFER))
      ;; Decode the block
      (SHOW-XDR-BLOCK-FOR-TRACE (RPC-TRACE-AGENT INDEX BUFFER)
				(LOCF (RPC-TRACE-BLOCK INDEX BUFFER))
				(MIN (RPC-TRACE-BLOCK-SIZE INDEX BUFFER)
				     (- RPC-TRACE-BUFFER-ELEMENT-SIZE
					(1- RPC-TRACE-BUFFER-ELEMENT-PREFIX-SIZE)))))))

(DEFMETHOD (TRACED-XDR-BLOCK-HEADER-WORD LITTLE-ENDER-DATA) (POINTER INDEX)
  (LDB (BYTE 32 0) (%P-CONTENTS-OFFSET POINTER INDEX)))

(DEFMETHOD (TRACED-XDR-BLOCK-HEADER-WORD BIG-ENDER-DATA) (POINTER INDEX)
  (LDB (BYTE 32 0) (BYTE-SWAP (%P-CONTENTS-OFFSET POINTER INDEX))))

(DEFMETHOD (SHOW-XDR-BLOCK-FOR-TRACE STD-TRANSPORT-AGENT) (POINTER SIZE)
  ;; Decide whether it's a call or a reply
  (COND ((ZEROP (TRACED-XDR-BLOCK-HEADER-WORD SELF POINTER 1))
	 ;; Call
	 (LET* ((TRANSACTION-ID (TRACED-XDR-BLOCK-HEADER-WORD SELF POINTER 0))
		(MODULE-NUMBER (TRACED-XDR-BLOCK-HEADER-WORD SELF POINTER 3))
		(ENTRY-NUMBER (TRACED-XDR-BLOCK-HEADER-WORD SELF POINTER 5))
		(CREDENTIAL-LENGTH
		  (CEILING (TRACED-XDR-BLOCK-HEADER-WORD SELF POINTER 7) 4))
		(AUTHENTICATION-LENGTH
		  (CEILING (TRACED-XDR-BLOCK-HEADER-WORD SELF POINTER (+ 9 CREDENTIAL-LENGTH))
			   4))
		(MODULE (GETHASH MODULE-NUMBER *REMOTE-MODULE-TABLE*))
		(MODULE-NAME (AND MODULE (REMOTE-MODULE-NAME MODULE)))
		(ENTRY (AND MODULE (FIND ENTRY-NUMBER (REMOTE-MODULE-ENTRIES MODULE)
					 :KEY #'REMOTE-ENTRY-NUMBER)))
		(ENTRY-NAME (AND ENTRY (REMOTE-ENTRY-NAME ENTRY))))
	   (FORMAT T "Call ~D to ~:[entry ~D of module ~X~@[ (~S)~]~;~:*~S~]:"
		   TRANSACTION-ID ENTRY-NAME ENTRY-NUMBER MODULE-NUMBER MODULE-NAME)
	   (LOOP FOR INDEX FROM (+ 10 CREDENTIAL-LENGTH AUTHENTICATION-LENGTH) BELOW SIZE DO
	     (FORMAT T " ~O" (TRACED-XDR-BLOCK-HEADER-WORD SELF POINTER INDEX)))))
	((= (TRACED-XDR-BLOCK-HEADER-WORD SELF POINTER 1) 1)
	 ;; Reply
	 (FORMAT T "Reply to ~D:" (TRACED-XDR-BLOCK-HEADER-WORD SELF POINTER 0))
	 (LET ((VERIFICATION-LENGTH
		 (CEILING (TRACED-XDR-BLOCK-HEADER-WORD SELF POINTER 4) 4)))
	   (LOOP FOR INDEX FROM (+ 5 VERIFICATION-LENGTH) BELOW SIZE DO
	     (FORMAT T " ~O" (TRACED-XDR-BLOCK-HEADER-WORD SELF POINTER INDEX)))))
	(T
	 (FORMAT T "Garbage:")
	 (LOOP FOR INDEX FROM 0 BELOW SIZE DO
	   (FORMAT T " ~O" (TRACED-XDR-BLOCK-HEADER-WORD SELF POINTER INDEX))))))

(DEFWHOPPER (SEND-XDR-BLOCK STD-TRANSPORT-AGENT) (XDR-BLOCK &OPTIONAL DONT-RELEASE)
  (WHEN *RPC-TRACE-ENABLED*
    (WRITE-RPC-TRACE SELF :OUTPUT XDR-BLOCK))
  (CONTINUE-WHOPPER XDR-BLOCK DONT-RELEASE))

(DEFWHOPPER (RECEIVE-XDR-BLOCK STD-TRANSPORT-AGENT) ()
  (LET ((XDR-BLOCK (CONTINUE-WHOPPER)))
    (WHEN *RPC-TRACE-ENABLED*
      (WRITE-RPC-TRACE SELF :INPUT XDR-BLOCK))
    XDR-BLOCK))

