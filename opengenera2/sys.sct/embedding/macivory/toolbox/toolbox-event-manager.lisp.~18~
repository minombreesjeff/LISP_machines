;;; -*- Base: 10; Syntax: Lisp+c; Mode: LISP; Package: MAC-TOOLBOX -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

(define-toolkit-module D,#TD1PsT[Begin using 006 escapes](1 0 (NIL 0) (NIL :BOLD NIL) "CPTFONTCB")(toolbox-event-manager
0			 :submodules T
			 :type :linked
			 :include ("<Events.h>")
			 :default-pathname
			   "sys:embedding;macivory;toolbox;toolbox-event-manager;"
			 )
  (:glue-submodule (toolbox-event-manager-glue :linked "toolbox-event-manager-link.c"
					       :auto-load "toolbox-event-manager-auto.c"))
  (:submodule (toolbox-event-manager-1 :file "toolbox-event-manager-1.c")
   ;; Accessing Events
   GetNextEvent
   EventAvail
   )
  (:submodule (toolbox-event-manager-2 :file "toolbox-event-manager-2.c")
   ;; Reading the mouse; reading the Keyboard and Keypad
   GetMouse
   Button
   StillDown
   WaitMouseUp
   GetKeys)
  (:submodule (toolbox-event-manager-3 :file "toolbox-event-manager-3.c")
   ;; Misc
   TickCount
   GetDblTime
   GetCaretTime
   KeyTrans
   ))

;; Accessing Events

(deftoolkit 1GetNextEvent0 toolbox-event-manager
   ((eventmask integer-16)
    (theevent eventrecord))
   ((handle-event-p boolean)
    (nextevent eventrecord :overwrite theevent))
   #{ { Boolean handle_event_p;
	EventRecord nextevent;

	handle_event_p = GetNextEvent(eventmask, &nextevent);
	RPCValues(handle_event_p, &nextevent);
      } }
   ) 


(deftoolkit1 EventAvail0 toolbox-event-manager
   ((eventmask integer-16)
    (theevent eventrecord))
   ((handle-event-p boolean)
    (nextevent eventrecord :overwrite theevent))
   #{ { Boolean handle_event_p;
	EventRecord nextevent;

	handle_event_p = EventAvail(eventmask, &nextevent);
	RPCValues(handle_event_p, &nextevent);
      } }
   )



;; Reading the mouse; reading the Keyboard and Keypad
(deftoolkit1 GetMouse0 toolbox-event-manager
   ((mouselocin point))
   ((mouselocout point :overwrite mouselocin))
   #{ { Point ml;

	GetMouse(&ml);
	RPCValues(&ml);
	} }
	)

(deftoolkit1 Button0 toolbox-event-manager
   ()
   ((downp boolean))
   #{ { Boolean downp = Button();
	RPCValues(downp);
	} }
	)



(deftoolkit1 StillDown0 toolbox-event-manager
   ()
   ((stilldownp boolean))
   #{ { Boolean sdp = StillDown();
	RPCValues(sdp);
	} }
	)

(deftoolkit1 WaitMouseUp0 toolbox-event-manager
   ()
   ((stilldownp boolean))
   #{ { Boolean sdp = WaitMouseUp();
	RPCValues(sdp);
	} }
	)

(deftoolkit1 GetKeys0 toolbox-event-manager
   ((keymapin keymap))
   ((keymapout keymap :overwrite keymapin))
   #{ { KeyMap km;

	GetKeys(&km);
	RPCValues(&km);
	} }
	)



;; Misc
(deftoolkit1 TickCount0 toolbox-event-manager
   ()
   ((tickcount integer-32))
   #{ { long tc = TickCount();
	RPCValues(tc);
	} }
	)

(deftoolkit1 GetDblTime0 toolbox-event-manager
   ()
   ((dbltime integer-32))
   #{ { long dbt = GetDblTime();
	RPCValues(dbt);
	} }
	)

(deftoolkit1 GetCaretTime0 toolbox-event-manager
   ()
   ((carettime integer-32))
   #{ { long ct = GetCaretTime();
	RPCValues(ct);
	} }
	)

(deftoolkit1 KeyTrans0 toolbox-event-manager
   ((transdata Ptr)
    (keycode integer-16))
   ((result integer-32)
    (state integer-32))
   #{ { long state, result;

	result = KeyTrans(transdata, keycode, &state);
	RPCValues(result,state);
	} }
	)

#||
(write-toolkit-submodule-c-program toolbox-event-manager-1 "blueberry:mac-4:rlb:rui:")
(write-toolkit-submodule-c-program toolbox-event-manager-2 "blueberry:mac-4:rlb:rui:")
(write-toolkit-submodule-c-program toolbox-event-manager-3 "blueberry:mac-4:rlb:rui:")
(write-toolkit-submodule-c-program toolbox-event-manager-glue "blueberry:mac-4:rlb:rui:")

(write-toolkit-module-c-program toolbox-event-manager)
||#

