;;; -*- Base: 10; Syntax: Lisp+c; Mode: LISP; Package: MAC-TOOLBOX -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

(define-toolkit-module D,#TD1PsT[Begin using 006 escapes](1 0 (NIL 0) (NIL :BOLD NIL) "CPTFONTCB")(international-utilities
0			 :submodules T
			 :type :linked
			 :include ("<Packages.h>")
			 :default-pathname
			   "sys:embedding;macivory;toolbox;international-utilities;"
			 )
  (:glue-submodule (international-utilities-glue :linked "international-utilities-link.c"
					  :auto-load  "international-utilities-auto.c"))
  (:submodule (international-utilities-1 :file "international-utilities-1.c")
   IUDateString
   IUDatePString
   IUTimeString
   IUTimePString
   IUMetric
   IUGetIntl
   IUSetIntl
   IUCompString
   IUMagString
   IUEqualString
   IUMagIDString
   
   ))


(deftoolkit1 IUDateString0 international-utilities
   ((datetime integer-32)
    (form dateform))
   ((result Str255))
   #{ { Str255 result;

	IUDateString(datetime, form, result);
	RPCValues(result);
	} }
	)

(deftoolkit1 IUDatePString0 international-utilities
   ((datetime integer-32)
    (form dateform)
    (intlparam handle))
   ((result STR255))
   #{ { Str255 result;

	IUDatePString(datetime, form, result, intlparam);
	RPCValues(result);
	} }
	)

(deftoolkit1 IUTimeString0 international-utilities
   ((datetime integer-32)
    (wantseconds boolean))
   ((result str255))
   #{ { Str255 result;

	IUTimeString(datetime, wantseconds, result);
	RPCValues(result);
	} }
	)

(deftoolkit1 IUTimePString0 international-utilities
   ((datetime integer-32)
    (wantseconds boolean)
    (intlparam handle))
   ((result str255))
   #{ { Str255 result;

	IUTimePString(datetime, wantseconds, result, intlparam);
	RPCValues(result);
	} }
	)

(deftoolkit1 IUMetric0 international-utilities
   ()
   ((metricp boolean))
   #{ { Boolean mp = IUMetric();
	RPCValues(mp);
	} }
	)

(deftoolkit1 IUGetIntl0 international-utilities
   ((theid integer-16))
   ((IRhandle handle))
   #{ { Handle ir = IUGetIntl(theid);
	RPCValues((long)ir);
	} }
	)

(deftoolkit1 IUSetIntl0 international-utilities
   ((refnum integer-16)
    (theid integer-16)
    (intlparam Handle))
   ()
   #{ { IUSetIntl(refnum, theid, intlparam);
	RPCValues();
	} }
	)

(deftoolkit1 IUCompString0 international-utilities
   ((astr str255)
    (bstr str255))
   ((result integer-16))
   #{ { short res = IUCompString(astr, bstr);
	RPCValues(res);
	} }
	)

(deftoolkit1 IUMagString0 international-utilities
   ((aptr ptr)
    (bptr ptr)
    (alen integer-16)
    (blen integer-16))
   ((result integer-16))
   #{ { short r = IUMagString(aptr, bptr, alen, blen);
	RPCValues(r);
	} }
	)

(deftoolkit1 IUEqualString0 international-utilities
   ((astr str255)
    (bstr str255))
   ((result integer-16))
   #{ { short r = IUEqualString(astr, bstr);
	RPCValues(r);
	} }
	)

(deftoolkit1 IUMagIDString0 international-utilities
   ((aptr ptr)
    (bptr ptr)
    (alen integer-16)
    (blen integer-16))
   ((result integer-16))
   #{ { short r = IUMagIDString(aptr, bptr, alen, blen);
	RPCValues(r);
	} }
	)


#||
(write-toolkit-submodule-c-program international-utilities-1 "blueberry:mac-4:rlb:rui:")

(write-toolkit-submodule-c-program international-utilities-glue "blueberry:mac-4:rlb:rui:")

(write-toolkit-module-c-program international-utilities)
||#
