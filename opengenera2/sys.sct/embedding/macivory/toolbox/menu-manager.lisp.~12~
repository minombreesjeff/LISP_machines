;;; -*- Mode: LISP; Syntax: Lisp+C; Package: MAC-TOOLBOX; Base: 10 -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

(define-toolkit-module D,#TD1PsT[Begin using 006 escapes](1 0 (NIL 0) (NIL :BOLD NIL) "CPTFONTCB")(menu-manager
0			 :submodules T
			 :type :linked
			 :include ("<Menus.h>" "<Quickdraw.h>")
			 :default-pathname "sys:embedding;macivory;toolbox;menu-manager;"
			 )
  (:glue-submodule (menu-manager-glue :linked "menu-manager-link.c"
				      :auto-load "menu-manager-auto.c"))
  (:submodule (menu-manager-1 :file "menu-manager-1.c")
   ;; Initialization and allocation
   InitMenus
   NewMenu
   GetMenu
   DisposeMenu)
  (:submodule (menu-manager-2 :file "menu-manager-2.c")
   ;; Forming the menus
   AppendMenu
   AddResMenu
   InsertResMenu
   ;; Forming the menu bar
   InsertMenu
   DrawMenuBar
   DeleteMenu
   ClearMenuBar
   GetNewMBar
   GetMenuBar
   SetMenuBar
   InsMenuItem
   DelMenuItem
   )
  (:submodule (menu-manager-3 :file "menu-manager-3.c")
   ;; Choosing from a menu
   MenuSelect
   MenuKey
   HiliteMenu)
  (:submodule (menu-manager-4 :file "menu-manager-4.c")
   ;; Controlling the appearance of items
   SetItem
   GetItem
   DisableItem
   EnableItem
   CheckItem
   SetItemMark
   GetItemMark
   SetItemIcon
   GetItemIcon
   SetItemStyle
   GetItemStyle)
  (:submodule (menu-manager-5 :file "menu-manager-5.c")
   ;; Misc routines
   CalcMenuSize
   CountMItems
   GetMHandle
   FlashMenuBar
   SetMenuFlash
   ))

;; Initialization and allocation
(deftoolkit InitMenus menu-manager
  ()
  ()
   #{ { 
	InitMenus();
	RPCValues();
	}}
	)

(deftoolkit NewMenu menu-manager
  ((menuid integer-16)
   (menutitle pascal-string))
  ((menu menuhandle))
   #{ { 
	MenuHandle menu;
	menu = NewMenu(menuid, menutitle);
	RPCValues((long)menu);
	}}
	)
	
(deftoolkit GetMenu menu-manager
  ((resourceid integer-16))
  ((menu menuhandle))
   #{ { 
	MenuHandle menu;
	menu = GetMenu(resourceid);
	RPCValues((long)menu);
	}}
	)

(deftoolkit DisposeMenu menu-manager
  ((themenu menuhandle))
  ()
   #{ { 
	DisposeMenu(themenu);
	RPCValues();
	}}
	)

;; Forming the menus
(deftoolkit AppendMenu menu-manager
  ((themenu menuhandle)
   (data pascal-string))
  ()
   #{ { 
	AppendMenu(themenu, data);
	RPCValues();
	}}
	)

(deftoolkit AddResMenu menu-manager
  ((themenu menuhandle)
   (thetype restype))
  ()
   #{ { 
	AddResMenu(themenu, *(long*)thetype);
	RPCValues();
	}}
	)

(deftoolkit InsertResMenu menu-manager
  ((themenu menuhandle)
   (thetype restype)
   (afteritem integer-16))
  ()
   #{ { 
	InsertResMenu(themenu, *(long*)thetype, afteritem);
	RPCValues();
	}}
	)

;; Forming the menu bar
(deftoolkit InsertMenu menu-manager
  ((themenu menuhandle)
   (beforeid integer-16))
  ()
   #{ { 
	InsertMenu(themenu, beforeid);
	RPCValues();
	}}
	)

(deftoolkit DrawMenuBar menu-manager
  ()
  ()
   #{ { 
	DrawMenuBar();
	RPCValues();
	}}
	)

(deftoolkit DeleteMenu menu-manager
  ((menuid integer-16))
  ()
   #{ { 
	DeleteMenu(menuid);
	RPCValues();
	}}
	)

(deftoolkit ClearMenuBar menu-manager
  ()
  ()
   #{ { 
	ClearMenuBar();
	RPCValues();
	}}
	)

(deftoolkit GetNewMBar menu-manager
  ((menubarid integer-16))
  ((mbar handle))
   #{ { 
	Handle h;
	h = GetNewMBar(menubarid);
	RPCValues((long)h);
	}}
	)

(deftoolkit GetMenuBar menu-manager
  ()
  ((mbar handle))
   #{ { 
	Handle h;
	h = GetMenuBar();
	RPCValues((long)h);
	}}
	)

(deftoolkit SetMenuBar menu-manager
  ((menulist handle))
  ()
   #{ { 
	SetMenuBar(menulist);
	RPCValues();
	}}
	)

(deftoolkit InsMenuItem menu-manager
  ((themenu menuhandle)
   (itemstring pascal-string)
   (afteritem integer-16))
  ()
   #{ { 
	InsMenuItem(themenu, itemstring, afteritem);
	RPCValues();
	}}
	)

(deftoolkit DelMenuItem menu-manager
  ((themenu menuhandle)
   (item integer-16))
  ()
   #{ { 
	DelMenuItem(themenu, item);
	RPCValues();
	}}
	)

;; Choosing from a menu
(deftoolkit MenuSelect menu-manager
  ((startpt point))
  ((menu&item integer-32))
   #{ { 
	long result;
	result = MenuSelect(*(Point *)startpt);
	RPCValues(result);
	}}
	)

(deftoolkit MenuKey menu-manager
  ;;--- I doubt "char" is defined as remote type.  It may need char-to-ascii
  ((ch char))
  ((menu&item integer-32))
   #{ { 
	long result;
	result = MenuKey(ch);
	RPCValues(result);
	}}
	)

(deftoolkit HiliteMenu menu-manager
  ((menuid integer-16))
  ()
   #{ { 
	HiliteMenu(menuid);
	RPCValues();
	}}
	)

;; Controlling the appearance of items
(deftoolkit SetItem menu-manager
  ((themenu menuhandle)
   (item integer-16)
   (itemstring pascal-string))
  ()
   #{ { 
	SetItem(themenu, item, itemstring);
	RPCValues();
	}}
	)

(deftoolkit GetItem menu-manager
  ((themenu menuhandle)
   (item integer-16)
   (itemstring pascal-string))
  ((result-itemstring pascal-string :overwrite itemstring))
   #{ { 
	Str255 string;
	GetItem(themenu, item, &string);
	RPCValues(string);
	}}
	)

(deftoolkit DisableItem menu-manager
  ((themenu menuhandle)
   (item integer-16))
  ()
   #{ { 
	DisableItem(themenu, item);
	RPCValues();
	}}
	)

(deftoolkit EnableItem menu-manager
  ((themenu menuhandle)
   (item integer-16))
  ()
   #{ { 
	EnableItem(themenu, item);
	RPCValues();
	}}
	)

(deftoolkit CheckItem menu-manager
  ((themenu menuhandle)
   (item integer-16)
   (checked boolean))
  ()
   #{ { 
	CheckItem(themenu, item, checked);
	RPCValues();
	}}
	)

(deftoolkit SetItemMark menu-manager
  ((themenu menuhandle)
   (item integer-16)
   (markchar char))				;---char again
  ()
   #{ { 
	SetItemMark(themenu, item, markchar);
	RPCValues();
	}}
	)

(deftoolkit GetItemMark menu-manager
  ((themenu menuhandle)
   (item integer-16))
  ((result char))				;---
   #{ { 
	char result;
	GetItemMark(themenu, item, &result);
	RPCValues(result);
	}}
	)

(deftoolkit SetItemIcon menu-manager
  ((themenu menuhandle)
   (item integer-16)
   (icon cardinal-8))
  ()
   #{ { 
	SetItemIcon(themenu, item, icon);
	RPCValues();
	}}
	)

(deftoolkit GetItemIcon menu-manager
  ((themenu menuhandle)
   (item integer-16))
  ((result cardinal-8))
   #{ { 
	Byte result;
	GetItemIcon(themenu, item, &result);
	RPCValues(result);
	}}
	)

(deftoolkit SetItemStyle menu-manager
  ((themenu menuhandle)
   (item integer-16)
   (chstyle style))
  ()
   #{ { 
	SetItemStyle(themenu, item, chstyle);
	RPCValues();
	}}
	)

(deftoolkit GetItemStyle menu-manager
  ((themenu menuhandle)
   (item integer-16))
  ((result style))
   #{ { 
	Style style;
	GetItemStyle(themenu, item, &style);
	RPCValues(style);
	}}
	)

;; Misc routines
(deftoolkit CalcMenuSize menu-manager
  ((themenu menuhandle))
  ()
   #{ { 
	CalcMenuSize(themenu);
	RPCValues();
	}}
	)

(deftoolkit CountMItems menu-manager
  ((themenu menuhandle))
  ((result integer-16))
   #{ { 
	short result;
	result = CountMItems(themenu);
	RPCValues(result);
	}}
	)

(deftoolkit GetMHandle menu-manager
  ((menuid integer-16))
  ((result menuhandle))
   #{ { 
	MenuHandle h;
	h = GetMHandle(menuid);
	RPCValues((long)h);
	}}
	)

(deftoolkit FlashMenuBar menu-manager
  ((menuid integer-16))
  ()
   #{ { 
	FlashMenuBar(menuid);
	RPCValues();
	}}
	)

(deftoolkit SetMenuFlash menu-manager
  ((count integer-16))
  ()
   #{ { 
	SetMenuFlash(count);
	RPCValues();
	}}
	)

#||
(write-toolkit-submodule-c-program menu-manager-1)
(write-toolkit-submodule-c-program menu-manager-2)
(write-toolkit-submodule-c-program menu-manager-3)
(write-toolkit-submodule-c-program menu-manager-4)
(write-toolkit-submodule-c-program menu-manager-5)
(write-toolkit-submodule-c-program menu-manager-glue)
||#

