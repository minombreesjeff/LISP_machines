;;; -*- Mode: LISP; Syntax: Common-lisp; Package: SYSTEM-APPLICATIONS; Base: 10; Lowercase: T -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

;;; PC's.  --- Is there a standard numeric assignment?

(defparameter *ibm-pc-key-layout*
  '((:row 3 0 1 15)
    (:wide-key 3 1 3/2 16)
    (:row 9/2 1 17 28)
    (:wide-key 3 2 15/8 30)
    (:row 39/8 2 31 41)
    (:l-key 127/8 2 17/8 43 (5/8 -1 17/8 0))
    (:wide-key 3 3 9/4 44)
    (:row 21/4 3 46 55)
    (:wide-key 61/4 3 11/4 57)
    (:wide-key 3 4 3/2 58)
    (:wide-key 23/4 4 19/2 61)
    (:wide-key 33/2 4 3/2 64)
    (:column 1 0 65 69)
    (:column 0 0 70 74)
    (:column 19 0 90 93)
    (:column 20 0 95 98)
    (:wide-key 19 4 2 99)
    (:column 21 0 100 104)
    (:column 22 0 105 107)
    (:tall-key 22 3 2 108)))

(defparameter *ibm-pc-101-key-layout*
  '((:row 0 2 1 13)
    (:wide-key 13 2 2 15)
    (:wide-key 0 3 4/3 16)
    (:row 4/3 3 17 28)
    (:wide-key 40/3 3 5/3 29)
    (:wide-key 0 4 5/3 30)
    (:row 5/3 4 31 41)
    (:wide-key 38/3 4 7/3 43)
    (:wide-key 0 5 2 44)
    (:row 2 5 46 55)
    (:wide-key 12 5 3 57)
    (:wide-key 0 6 4/3 58)
    (:wide-key 5/2 6 3/2 60)
    (:wide-key 4 6 7 61)
    (:wide-key 11 6 3/2 62)
    (:wide-key 41/3 6 4/3 64)
    (:column 16 2 75 76)
    (:column 16 6 79 79)
    (:column 17 2 80 81)
    (:column 17 5 83 84)
    (:column 18 2 85 86)
    (:column 18 6 89 89)
    (:column 20 2 90 93)
    (:column 21 2 95 98)
    (:wide-key 20 6 2 99)
    (:column 22 2 100 104)
    (:column 23 2 105 105)
    (:tall-key 23 3 2 106)
    (:tall-key 23 5 2 108)
    (:row 0 0 110 110)
    (:row 3/2 0 112 115)
    (:row 6 0 116 119)
    (:row 11 0 120 123)
    (:row 16 0 124 126)))

(defparameter *ibm-pc-102-key-layout*
  '((:row 0 2 1 13)
    (:wide-key 13 2 2 15)
    (:wide-key 0 3 4/3 16)
    (:row 4/3 3 17 28)
    (:l-key 40/3 3 5/3 43 (1/3 1 5/3 2))
    (:wide-key 0 4 5/3 30)
    (:row 5/3 4 31 42)
    (:wide-key 0 5 4/3 44)
    (:row 4/3 5 45 55)
    (:wide-key 37/3 5 8/3 57)
    (:wide-key 0 6 4/3 58)
    (:wide-key 5/2 6 3/2 60)
    (:wide-key 4 6 7 61)
    (:wide-key 11 6 3/2 62)
    (:wide-key 41/3 6 4/3 64)
    (:column 16 2 75 76)
    (:column 16 6 79 79)
    (:column 17 2 80 81)
    (:column 17 5 83 84)
    (:column 18 2 85 86)
    (:column 18 6 89 89)
    (:column 20 2 90 93)
    (:column 21 2 95 98)
    (:wide-key 20 6 2 99)
    (:column 22 2 100 104)
    (:column 23 2 105 105)
    (:tall-key 23 3 2 106)
    (:tall-key 23 5 2 108)
    (:row 0 0 110 110)
    (:row 3/2 0 112 115)
    (:row 6 0 116 119)
    (:row 11 0 120 123)
    (:row 16 0 124 126)))

(defparameter *ibm-pc-another-102-key-layout*
  '((:row 0 2 1 13)
    (:wide-key 13 2 2 15)
    (:wide-key 0 3 4/3 16)
    (:row 4/3 3 17 28)
    (:wide-key 0 4 5/3 30)
    (:row 5/3 4 31 41)
    (:l-key 38/3 4 7/3 43 (2/3 -1 7/3 0))
    (:wide-key 0 5 4/3 44)
    (:row 4/3 5 45 55)
    (:wide-key 37/3 5 8/3 57)
    (:wide-key 0 6 1 58)
    (:wide-key 1 6 4/3 59)
    (:wide-key 5/2 6 3/2 60)
    (:wide-key 4 6 7 61)
    (:wide-key 11 6 3/2 62)
    (:wide-key 38/3 6 4/3 63)
    (:wide-key 14 6 1 64)
    (:column 16 2 75 76)
    (:column 16 6 79 79)
    (:column 17 2 80 81)
    (:column 17 5 83 84)
    (:column 18 2 85 86)
    (:column 18 6 89 89)
    (:column 20 2 90 93)
    (:column 21 2 95 98)
    (:wide-key 20 6 2 99)
    (:column 22 2 100 104)
    (:column 23 2 105 105)
    (:tall-key 23 3 2 106)
    (:tall-key 23 5 2 108)
    (:row 0 0 110 110)
    (:row 3/2 0 112 115)
    (:row 6 0 116 119)
    (:row 11 0 120 123)
    (:row 16 0 124 126)))

;;; Keyboard scan codes; code set 3 on the PS-2.
(defparameter *ibm-pc-make-codes*
  (make-array 128
    :element-type '(unsigned-byte 8)
    :initial-contents '(0000 #x0E #x16 #x1E #x26 #x25 #x2E #x36 #x3D #x3E #x46 #x45 #x4E #x55
			0000 #x66 #x0D #x15 #x1D #x24 #x2D #x2C #x35 #x3C #x43 #x44 #x4D #x54
			#x5B #x5C #x14 #x1C #x1B #x23 #x2B #x34 #x33 #x3B #x42 #x4B #x4C #x52
			#x53 #x5A #x12 #x13 #x1A #x22 #x21 #x2A #x32 #x31 #x3A #x41 #x49 #x4A
			0000 #x59 #x11 0000 #x19 #x29 #x39 0000 #x58 0000 0000 0000 0000 0000
			0000 0000 0000 0000 0000 #x67 #x64 0000 0000 #x61 #x6E #x65 0000 #x63
			#x60 #x6F #x6D 0000 0000 #x6A #x76 #x6C #x6B #x69 0000 #x77 #x75 #x73
			#x72 #x70 #x7E #x7D #x74 #x7A #x71 #x84 #x7C 0000 #x79 0000 #x08 0000
			#x07 #x0F #x17 #x1F #x27 #x2F #x37 #x3F #x47 #x4F #x56 #x5E #x57 #x5F
			#x62 0000)))

(defparameter *MSWindows-virtual-key-codes*
  (make-array 128
    :element-type '(unsigned-byte 8)
    :initial-contents '(0000 0192 0049 0050 0051 0052 0053 0054 0055 0056 0057 0058 0189 0187 0220 0008
			0009 0081 0087 0069 0082 0084 0089 0085 0073 0079 0080 0219 0221 0000 0017 0065
			0083 0068 0070 0071 0072 0074 0075 0076 0186 0222 0000 0013 0016 0000 0090 0088
			0067 0086 0066 0078 0077 0188 0190 0191 0000 0016 0018 0000 0000 0032 0000 0000
			0020 0113 0115 0117 0119 0121 0112 0114 0116 0118 0120 0000 0000 0000 0000 0000
			0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0027 0103 0100 0097 0000 0144
			0104 0101 0098 0096 0003 0105 0102 0099 0110 0004 0106 0109 0107 0000 0000 0000
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0


			)))

(defparameter
  *default-MSWindows-keyboard-mapping-table*
  (sys:make-keyboard-table
    '(nil nil nil #\Suspend nil nil nil nil #\Rubout		        ; 0 - 8
      #\Tab nil nil #\Clear-input #\Return nil nil :left-shift          ; 9 - 16
      :left-control :left-meta nil :caps-lock nil nil nil nil           ; 17 - 24
      nil nil (#\Escape #\Escape #\ #\) nil nil nil nil #\Space	; 25 - 32
      #\Page #\Line #\End #\Complete nil nil nil nil		        ; 33 - 40
      nil nil nil nil nil nil nil (#\0 #\))                             ; 41 - 48
      (#\1 #\!) (#\2 #\@) (#\3 #\#) (#\4 #\$)                           ; 49 - 52
      (#\5 #\%) (#\6 #\^) (#\7 #\&) (#\8 #\* nil #\)                   ; 53 - 56
      (#\9 #\() nil nil nil nil nil nil nil			        ; 57 - 64
      (#\a #\A nil #\) (#\b #\B nil #\) (#\c #\C) (#\d #\D nil #\ç)	; 65 - 68
      (#\e #\E #\ #\) (#\f #\F) (#\g #\G #\ #\â) (#\h #\H #\)	; 69 - 72
      (#\i #\I #\) (#\j #\J #\) (#\k #\K #\) (#\l #\L #\ #\à)	; 73 - 76
      (#\m #\M) (#\n #\N) (#\o #\O #\) (#\p #\P #\ #\)	        ; 77 - 80
      (#\q #\Q #\) (#\r #\R #\) (#\s #\S) (#\t #\T #\)	        ; 81 - 84
      (#\u #\U #\) (#\v #\V) (#\w #\W #\) (#\x #\X)		        ; 85 - 88
      (#\y #\Y #\) (#\z #\Z) nil nil nil nil nil  #\0	                ; 89 - 96
      (#\1 #\End) #\2 (#\3 #\Line) #\4 (#\5 #\Clear-input) #\6 (#\7 #\Complete) #\8	; 97 - 104
      (#\9 #\Page) #\* #\Scroll nil #\Refresh #\. nil #\Abort		; 105 - 112
      #\Resume #\Function #\Network #\Select			        ; 113 - 116
      #\Back-Space (#\Help #\Help #\Symbol-help #\Symbol-help)	        ; 117 - 118
      :left-symbol :left-hyper :left-super nil			        ; 119 - 122
      nil nil nil nil nil nil nil nil				        ; 123 - 130
      nil nil nil nil nil nil nil nil				        ; 131 - 138
      nil nil nil nil nil :mode-lock nil nil		                ; 139 - 146
      nil nil nil nil nil nil nil nil				        ; 147 - 154
      nil nil nil nil nil nil nil nil				        ; 155 - 162
      nil nil nil nil nil nil nil nil				        ; 163 - 170
      nil nil nil nil nil nil nil nil				        ; 171 - 178
      nil nil nil nil nil nil nil (#\; #\: nil #\å)		        ; 179 - 186
      (#\= #\+ #\ #\ä) (#\, #\< #\) (#\- #\_ #\) (#\. #\> #\)       ; 187 - 190
      (#\/ #\? #\á) (#\` #\~ #\) nil nil			        ; 191 - 194
      nil nil nil nil nil nil nil nil				        ; 195 - 202
      nil nil nil nil nil nil nil nil				        ; 203 - 210
      nil nil nil nil nil nil nil nil				        ; 211 - 218
      (#\[ #\{) (#\\ #\|) (#\] #\}) (#\' #\" #\ )		        ; 219 - 222
      nil nil nil nil						        ; 223 - 226
      nil nil nil nil nil nil nil nil				        ; 227 - 234
      nil nil nil nil nil nil nil nil				        ; 235 - 242
      nil nil nil nil nil nil nil nil				        ; 243 - 250
      nil nil nil nil nil nil 				                ; 251 - 256
      ))
  )


(defun define-ibm-keyboard-layout (name &rest args
					&key key-layout legends
					     (make-codes *ibm-pc-make-codes*)
					&allow-other-keys)
  (let ((keys nil))
    (labels ((add-key (key-number left top right bottom &rest other-options)
	       (push (let ((key (list* :code (aref make-codes key-number)
				       :edges (list left top right bottom)
				       (copy-list other-options))))
		       (if (not legends)
			   (setf (getf key :legend) (format nil "~D" key-number))	;---
			 (let ((entry (assoc key-number legends)))
			   (when entry
			     (destructuring-bind (nil legend &optional name) entry
			       (setf (getf key :legend) legend)
			       (when name
				 (setf (getf key :name) name))))))
		       key)
		     keys)))
      (dolist (clause key-layout)
	(ecase (first clause)
	  (:wide-key
	    (destructuring-bind (nil left top width key-number) clause
	      (add-key key-number left top (+ left width) (1+ top))))
	  (:tall-key
	    (destructuring-bind (nil left top height key-number) clause
	      (add-key key-number left top (1+ left) (+ top height))))
	  (:l-key
	    (destructuring-bind (nil left top width key-number l-shape-stub) clause
	      (add-key key-number left top (+ left width) (1+ top)
				  :l-shape-stub l-shape-stub)))
	  (:row
	    (destructuring-bind (nil left top start end) clause
	      (loop for key-number from start to end
		    for x from left
		    do (add-key key-number x top (1+ x) (1+ top)))))
	  (:column
	    (destructuring-bind (nil left top start end) clause
	      (loop for key-number from start to end
		    for y from top
		    do (add-key key-number left y (1+ left) (1+ y))))))))
    (si:with-rem-keywords (other-options args '(:key-layout :legends :make-codes))
      (apply #'define-keyboard-layout-2 name (nreverse keys) other-options))))

(define-ibm-keyboard-layout :ibm-pc-usa
  :pretty-name "IBM PC (U.S. English)"
  :numeric-id #x00030001
  :make-codes *MSWindows-virtual-key-codes*
  :default-mapping-table *default-MSWindows-keyboard-mapping-table*
  :key-layout *ibm-pc-key-layout*
  :legends '((1 ("~" "`"))
	     (2 ("!" "1"))
	     (3 ("@" "2"))
	     (4 ("#" "3"))
	     (5 ("$" "4"))
	     (6 ("%" "5"))
	     (7 ("^" "6"))
	     (8 ("&" "7"))
	     (9 ("*" "8"))
	     (10 ("(" "9"))
	     (11 (")" "0"))
	     (12 ("_" "-"))
	     (13 ("+" "="))
	     (14 ("|" "\\"))
	     (15 ("Back" "Space"))
	     (16 "Tab")
	     (17 "Q")
	     (18 "W")
	     (19 "E")
	     (20 "R")
	     (21 "T")
	     (22 "Y")
	     (23 "U")
	     (24 "I")
	     (25 "O")
	     (26 "P")
	     (27 ("{" "["))
	     (28 ("}" "]"))
	     (30 "Ctrl")
	     (31 "A")
	     (32 "S")
	     (33 "D")
	     (34 "F")
	     (35 "G")
	     (36 "H")
	     (37 "J")
	     (38 "K")
	     (39 "L")
	     (40 (":" ";"))
	     (41 ("\"" "'"))
	     (43 "Enter")
	     (44 "Shift" "Left Shift")
	     (46 "Z")
	     (47 "X")
	     (48 "C")
	     (49 "V")
	     (50 "B")
	     (51 "N")
	     (52 "M")
	     (53 ("<" ","))
	     (54 (">" "."))
	     (55 ("?" "/"))
	     (57 "Shift" "Right Shift")
	     (58 "Alt")
	     (61 nil "Space")
	     (64 ("Caps" "Lock"))
	     (65 "F2")
	     (66 "F4")
	     (67 "F6")
	     (68 "F8")
	     (69 "F10")
	     (70 "F1")
	     (71 "F3")
	     (72 "F5")
	     (73 "F7")
	     (74 "F9")
	     (90 "Esc")
	     (91 "7" "Numeric 7")
	     (92 "4" "Numeric 4")
	     (93 "1" "Numeric 1")
	     (95 ("Num" "Lock"))
	     (96 "8" "Numeric 8")
	     (97 "5" "Numeric 5")
	     (98 "2" "Numeric 2")
	     (99 "0" "Numeric 0")
	     (100 ("Scroll" "Lock"))
	     (101 "9" "Numeric 9")
	     (102 "6" "Numeric 6")
	     (103 "3" "Numeric 3")
	     (104 "." "Numeric .")
	     (105 "Sys")
	     (106 "*" "Numeric *")
	     (107 "-" "Numeric -")
	     (108 "+" "Numeric +")))

(define-ibm-keyboard-layout :ibm-pc-101-usa
  :pretty-name "IBM PC (101 keys, U.S. English)"
  :numeric-id #x00030002
  :key-layout *ibm-pc-101-key-layout*
  :legends '((1 ("~" "`"))
	     (2 ("!" "1"))
	     (3 ("@" "2"))
	     (4 ("#" "3"))
	     (5 ("$" "4"))
	     (6 ("%" "5"))
	     (7 ("^" "6"))
	     (8 ("&" "7"))
	     (9 ("*" "8"))
	     (10 ("(" "9"))
	     (11 (")" "0"))
	     (12 ("_" "-"))
	     (13 ("+" "="))
	     (15 ("Backspace"))
	     (16 "Tab")
	     (17 "Q")
	     (18 "W")
	     (19 "E")
	     (20 "R")
	     (21 "T")
	     (22 "Y")
	     (23 "U")
	     (24 "I")
	     (25 "O")
	     (26 "P")
	     (27 ("{" "["))
	     (28 ("}" "]"))
	     (29 ("|" "\\"))
	     (30 "Caps Lock")
	     (31 "A")
	     (32 "S")
	     (33 "D")
	     (34 "F")
	     (35 "G")
	     (36 "H")
	     (37 "J")
	     (38 "K")
	     (39 "L")
	     (40 (":" ";"))
	     (41 ("\"" "'"))
	     (43 "Enter")
	     (44 "Shift" "Left Shift")
	     (46 "Z")
	     (47 "X")
	     (48 "C")
	     (49 "V")
	     (50 "B")
	     (51 "N")
	     (52 "M")
	     (53 ("<" ","))
	     (54 (">" "."))
	     (55 ("?" "/"))
	     (57 "Shift" "Right Shift")
	     (58 "Ctrl" "Left Control")
	     (60 "Alt" "Left Alt")
	     (61 nil "Space")
	     (62 "Alt" "Right Alt")
	     (64 "Ctrl" "Right Control")
	     (75 "Insert")
	     (76 "Delete")
	     (80 "Home")
	     (81 "End")
	     (85 ("Page" "Up"))
	     (86 ("Page" "Down"))
	     (79 "")
	     (83 "")
	     (84 "")
	     (89 "")
	     (90 ("Num" "Lock"))
	     (91 "7" "Numeric 7")
	     (92 "4" "Numeric 4")
	     (93 "1" "Numeric 1")
	     (95 "/" "Numeric /")
	     (96 "8" "Numeric 8")
	     (97 "5" "Numeric 5")
	     (98 "2" "Numeric 2")
	     (99 "0" "Numeric 0")
	     (100 "*" "Numeric *")
	     (101 "9" "Numeric 9")
	     (102 "6" "Numeric 6")
	     (103 "3" "Numeric 3")
	     (104 "." "Numeric .")
	     (105 "-" "Numeric -")
	     (106 "+" "Numeric +")
	     (108 "Enter" "Numeric Enter")
	     (110 "Esc")
	     (112 "F1")
	     (113 "F2")
	     (114 "F3")
	     (115 "F4")
	     (116 "F5")
	     (117 "F6")
	     (118 "F7")
	     (119 "F8")
	     (120 "F9")
	     (121 "F10")
	     (122 "F11")
	     (123 "F12")
	     (124 ("Print" "Screen"))
	     (125 ("Scroll" "Lock"))
	     (126 "Pause")))

(define-ibm-keyboard-layout :ibm-pc-102-unlegended
  :pretty-name "IBM PC (102 keys, key numbers)"
  :numeric-id #x00030003
  :key-layout *ibm-pc-102-key-layout*
  )

(define-ibm-keyboard-layout :ibm-pc-another-102-unlegended
  :pretty-name "IBM PC (another 102 keys, key numbers)"
  :numeric-id #x00030004
  :key-layout *ibm-pc-another-102-key-layout*
  )

