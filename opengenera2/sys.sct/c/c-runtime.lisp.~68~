;;; -*- Mode: LISP; Package: USER; Lowercase: T; Base: 10; Syntax: Common-lisp -*-

;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>
;;;>

;;;
;;;
;;;	 Created on Tuesday the ninth of September, 1986 at 6:24:01 pm by DySak on Nene at
;;; SCRC.
;;;
#|@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
		     S Y S T E M   D E C L A R A T I O N   F O R   T H E
		S Y M B O L I C S   C   R U N T I M E   O N L Y   S Y S T E M
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|#


;;; add c mode to the known file types
(unless (zl:assq :c  fs:*file-type-mode-alist*)
  (push `(:c . :c) fs:*file-type-mode-alist*))

;;; add :c-include D,#TD1PsT[Begin using 006 escapes](1 0 (NIL 0) (NIL :ITALIC NIL) "CPTFONTI")as a 0c mode to the known file types
(unless (zl:assq :c-include  fs:*file-type-mode-alist*)
  (push `(:c-include . :c) fs:*file-type-mode-alist*))

(defsystem c-runtime
    (;;;	try loading without this :default-package "c-system"
     :default-pathname "sys: c; runtime; vc;"
     :journal-directory "sys: c; runtime; patch;"
     :maintaining-sites :scrc
     :patchable t
     :advertised-in ()
     :distribute-binaries t
     :distribute-sources t
     :source-category :optional
     :default-system-branch "Development"
     :branch-mapping "Development" 
     :version-controlled t)

  1;;
0  1;;        S Y S T E M   M O D U L E   D E F I N I T I O N S
0  1;;
0  1;;        0compiler-tools-package1 is included here as insurance for reading the sysdcl
0  1;;        (containing the CTS package declaration) in case SCT doesn't go depth first.
0  (:module compiler-tools-package "compiler-tools-package"
	   (:type :system)
	   (:version-controlled nil))
  (:module compiler-tools-runtime "compiler-tools-runtime"
	   (:type :system)
	   (:version-controlled nil))
  (:module package-definitions "c-packages"
	   (:type :system)
	   (:version-controlled nil))
  (:module minimal-lexer-runtime "minimal-lexer-runtime"
	   (:type :system)
	   (:version-controlled nil))
  (:module syntax-editor-runtime "syntax-editor-runtime"
	   (:type :system) (:version-controlled nil))
  (:module time "time" (:version-controlled nil))
  1;;
0  1;;0	1F I L E   M O D U L E   D E F I N I T I O N S
0  1;;
0  (:module runtime-definitions "runtime-defs")
  (:module descriptor-definitions "desc-defs")
  (:module descriptor-utilities "desc-utils" (:uses-definitions-from descriptor-definitions))
  (:module printf "printf")
  (:module scanf "scanf" (:uses-definitions-from printf))
  (:module c-errno "sys:c;include;errno" (:type :lisp-load-only) (:version-controlled nil))
  (:module c-stdio "sys:c;include;stdio" (:type :lisp-load-only) (:version-controlled nil))
  (:module c-signal "sys:c;include;signal" (:type :lisp-load-only) (:version-controlled nil))
  (:module c-locale "sys:c;include;locale" (:type :lisp-load-only) (:version-controlled nil))
  (:serial
    compiler-tools-package
    compiler-tools-runtime
    package-definitions
    (:parallel runtime-definitions descriptor-definitions)
    "misc-utils"
    descriptor-utilities
    "load-interfaces"
    "function-specs"
    "builtins"
    "limits"
    "library-defs"
    "library-utils"
    "read"
    "set-jmp"
    "stdarg"
    printf
    scanf
    "string-utilities"
    "math"
    time
    "signal"
    "stdio"
    (:parallel "assert" "ctype" "string" "stdlib")
    "execute-interfaces"
    "sct-interfaces"
    "cometh"
    minimal-lexer-runtime
    syntax-editor-runtime
    "runtime-language-mode"
    c-errno
    c-stdio
    c-signal
    c-locale
    )					; end of top-level :serial for c-runtime system
  )					; end of c-runtime system definition
