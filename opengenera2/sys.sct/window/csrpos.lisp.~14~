;-*- Mode:LISP; Package:TV; Base:8 -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

;For Maclisp compatibility
;No arguments returns (line . column)
;One argument does magic functions
;Two arguments sets cursorpos to there (args there of NIL mean don't change)
;Returns T if it succeeded, NIL if it didn't.
;Hmm, NEWIO seems to blow out rather than returning NIL now.  Change this?

;If the last argument is T (meaning TERMINAL-IO)
;or a stream, then it is applied to that stream.  Otherwise it is applied
;to STANDARD-OUTPUT.  Anything other than a number or a 1-character long
;symbol or NIL is assumed to be a stream.

(DEFUN CURSORPOS (&REST ARGS)
  (LET ((NARGS (LENGTH ARGS))
	(STREAM STANDARD-OUTPUT)
	ARG1 WO)
    (COND ((NULL ARGS))			;If any args, look for stream as 1st arg
	  ((EQ (SETQ ARG1 (CAR (LAST ARGS))) T) (SETQ STREAM TERMINAL-IO NARGS (1- NARGS)))
	  ((OR (NUMBERP ARG1) (NULL ARG1)))
	  ((OR (NOT (SYMBOLP ARG1)) (> (ARRAY-LENGTH (GET-PNAME ARG1)) 1))
	   (SETQ STREAM ARG1 NARGS (1- NARGS))))
    (SETQ ARG1 (CAR ARGS)
	  WO (SEND STREAM ':WHICH-OPERATIONS))
    (COND ((ZEROP NARGS)
	   (IF (MEMQ ':READ-CURSORPOS WO)
	       (MULTIPLE-VALUE-BIND (X Y) (SEND STREAM ':READ-CURSORPOS ':CHARACTER)
		 (CONS Y X))
	       (FERROR "~S stream does not support cursor positioning" STREAM)))
	  ((> NARGS 2)
	   (ERROR 'TOO-MANY-ARGUMENTS
		  ':FUNCTION 'CURSORPOS
		  ':NARGS NARGS))
	  ((OR (> NARGS 1) (NUMBERP ARG1))	;2 arguments or one numeric argument
	   (IF (MEMQ ':SET-CURSORPOS WO)
	       (MULTIPLE-VALUE-BIND (X Y) (SEND STREAM ':READ-CURSORPOS ':CHARACTER)
		 (SEND STREAM ':SET-CURSORPOS
			  (OR (SECOND ARGS) X) (OR (FIRST ARGS) Y) ':CHARACTER))
	       (FERROR "~S stream does not support cursor positioning" STREAM)))
	  ((CHAR= (SETQ ARG1 (CHAR-UPCASE (AREF (GET-PNAME ARG1) 0))) #/F)
	   (CURSORPOS-INTERNAL STREAM +1 0 #\SP WO))	;F forward space
	  ((CHAR= ARG1 #/B)				;B backspace
	   (CURSORPOS-INTERNAL STREAM -1 0 #\BS WO))
	  ((CHAR= ARG1 #/D)				;D down a line
	   (CURSORPOS-INTERNAL STREAM 0 +1 NIL WO))
	  ((CHAR= ARG1 #/U)				;U up a line
	   (CURSORPOS-INTERNAL STREAM 0 -1 NIL WO))
	  ((CHAR= ARG1 #/C)				;C clear screen
	   (IF (MEMQ ':CLEAR-WINDOW WO)
	       (SEND STREAM ':CLEAR-WINDOW)
	       (SEND STREAM ':TYO #\FORM))
	   T)
	  ((CHAR= ARG1 #/T)				;T top of screen
	   (IF (MEMQ ':HOME-CURSOR WO) (SEND STREAM ':HOME-CURSOR)
	       (SEND STREAM ':TYO #\FORM))
	   T)
	  ((CHAR= ARG1 #/E)				;E erase to end of screen
	   (COND ((MEMQ ':CLEAR-REST-OF-WINDOW WO)
		  (SEND STREAM ':CLEAR-REST-OF-WINDOW)
		  T)))
	  ((CHAR= ARG1 #/L)				;L erase to end of line
	   (COND ((MEMQ ':CLEAR-REST-OF-LINE WO)
		  (SEND STREAM ':CLEAR-REST-OF-LINE)
		  T)))
	  ((CHAR= ARG1 #/K)				;K erase character
	   (COND ((MEMQ ':CLEAR-CHAR WO) (SEND STREAM ':CLEAR-CHAR) T)))
	  ((CHAR= ARG1 #/X)				;X erase character backward
	   (CURSORPOS 'B STREAM)
	   (CURSORPOS 'K STREAM))
	  ((CHAR= ARG1 #/Z)				;Z home down
	   (IF (MEMQ ':HOME-DOWN WO) (SEND STREAM ':HOME-DOWN)
	       (SEND STREAM ':FRESH-LINE))
	   T)
	  ((CHAR= ARG1 #/A)				;A fresh line
	   (SEND STREAM ':FRESH-LINE)
	   T)
	  (T (FERROR "~C not a recognized CURSORPOS option" ARG1)))))

(DEFUN CURSORPOS-INTERNAL (STREAM DX DY ALTERNATE-CHARACTER WO)
  (COND ((MEMQ ':SET-CURSORPOS WO)
	 (MULTIPLE-VALUE-BIND (X Y) (SEND STREAM ':READ-CURSORPOS ':CHARACTER)
	   (SEND STREAM ':SET-CURSORPOS (+ X DX) (+ Y DY) ':CHARACTER)
	   T))
	((NOT (NULL ALTERNATE-CHARACTER))
	 (SEND STREAM ':TYO ALTERNATE-CHARACTER)
	 T)
	(T NIL)))	;Or should it give an error?
