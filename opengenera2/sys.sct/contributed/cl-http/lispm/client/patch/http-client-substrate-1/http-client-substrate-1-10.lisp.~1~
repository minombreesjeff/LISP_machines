;;; -*- Mode: LISP; Syntax: ansi-common-lisp; Package: http; Base: 10; Patch-File: t -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>
;;; Patch file for HTTP-CLIENT-SUBSTRATE version 1.10
;;; Reason: Fix connection pool management to ensure that connections are not added
;;; more than once to the free pool and that free pool pointers are cleared
;;; at all times when a connection is not free.
;;; Written by JCMa, 6/04/98 13:18:05
;;; while running on Lispm Machine Thomas Jefferson from FEP0:>ComLink-38-72-A-MIT-8-5.ilod.1
;;; with Genera 8.5, Experimental IP-TCP Documentation 422.0, NFS Server 439.0,
;;; Mailer 438.0, Print Spooler 439.0, Domain Name Server 436.0,
;;; Experimental Lock Simple 435.1, Compare Merge 404.0, VC Documentation 401.0,
;;; Logical Pathnames Translation Files NEWEST, Experimental Conversion Tools 436.0,
;;; Metering 444.0, Metering Substrate 444.0, Hacks 440.0, CLIM 72.0,
;;; Genera CLIM 72.0, PostScript CLIM 72.0, Experimental CLIM Documentation 71.27,
;;; Statice Runtime 466.0, Statice 466.0, Statice Browser 466.0,
;;; Statice Server 466.0, 8-5-Patches 1.1, MAC 413.0, Showable Procedures 36.3,
;;; Binary Tree 34.0, Working LispM Mailer 7.0, HTTP Server 67.52,
;;; W3 Presentation System 7.0, CL-HTTP Server Interface 52.0,
;;; Symbolics Common Lisp Compatibility 3.0, Comlink Packages 5.1,
;;; Comlink Utilities 9.41, COMLINK Cryptography 1.1, Routing Taxonomy 8.3,
;;; COMLINK Database 10.110, Email Servers 11.21,
;;; Comlink Customized LispM Mailer 6.14, Dynamic Forms 12.18,
;;; Communications Linker Server 38.77, Lambda Information Retrieval System 18.30,
;;; Jcma 41, HTTP Proxy Server 2.10, HTTP Client Substrate 1.9, Ivory Revision 4A,
;;; IFEP 328, FEP0:>I328-loaders.flod(24), FEP0:>I328-info.flod(24),
;;; FEP0:>I328-debug.flod(24), FEP0:>I328-lisp.flod(25), FEP0:>I328-kernel.fep(44),
;;; Boot ROM version 320, Device PROM version 325, Genera application 5.6.1a1,
;;; MacIvory SCSI Manager Server 4.3.2a1, Toolbox Servers 4.2,
;;; MacIvory & RPC library 6.3.4a1, MacIvory life support 4.3.8a1,
;;; Symbolics keyboard 2.1.1a1, Macintosh System Software 8.1,
;;; 1152x820 Screen with Genera fonts, Machine serial number 30376,
;;; Macintosh Quadra 800, Symbolics Keyboard,
;;; Add support for Apple's Gestalt and Speech Managers. (from SYS:MAC;MACIVORY-SPEECH-SUPPORT.LISP.1),
;;; Domain Fixes (from CML:MAILER;DOMAIN-FIXES.LISP.33),
;;; Don't force in the mail-x host (from CML:MAILER;MAILBOX-FORMAT.LISP.23),
;;; Make Mailer More Robust (from CML:MAILER;MAILER-FIXES.LISP.15),
;;; Patch TCP hang on close when client drops connection. (from HTTP:LISPM;SERVER;TCP-PATCH-HANG-ON-CLOSE.LISP.10),
;;; Add CLIM presentation and text style format directives. (from FV:SCLC;FORMAT.LISP.20),
;;; Deny some hosts access to some servers. (from CML:LISPM;HOST-SERVICE-ACCESS-CONTROL.LISP.4),
;;; Fix Statice Lossage (from CML:LISPM;STATICE-PATCH.LISP.3),
;;; COMLINK Mailer Patches. (from CML:LISPM;MAILER-PATCH.LISP.102),
;;; Clim patches (from CML:DYNAMIC-FORMS;CLIM-PATCHES.LISP.48).



(SCT:FILES-PATCHED-IN-THIS-PATCH-FILE 
  "HTTP:CLIENT;CONNECTION.LISP.47")


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:CLIENT;CONNECTION.LISP.47")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: lisp; Syntax: ansi-common-lisp; Package: http; Base: 10; Default-character-style: (:fix :roman :normal) -*-")

(defmethod deallocate-connection ((connection basic-connection))
  (with-slots (stream state host port close-p domain-name version) connection
    ;; make sure that open streams are deallocated
    (ecase state
      ((:open :closed)
       (setq state :deallocated)
       (when stream
         (%deallocate-client-http-stream stream)
         (setq stream nil))
       ;; reset instance variables for GC and fast allocation.
       (setq host nil
             port 80
             close-p nil
             domain-name nil
             version nil))
      (:deallocated))
    (when stream (error "Stream not Dellocated"))))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:CLIENT;CONNECTION.LISP.47")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: lisp; Syntax: ansi-common-lisp; Package: http; Base: 10; Default-character-style: (:fix :roman :normal) -*-")

(defmethod deallocate-connection :after ((connection connection-pool-mixin))
  (with-slots (free-since timeout close-time requests-completed requests-allowed next) connection
    (setq free-since 0
          timeout 0
          close-time 0
          requests-completed 0
          requests-allowed 0
          next nil)))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:CLIENT;CONNECTION.LISP.47")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: lisp; Syntax: ansi-common-lisp; Package: http; Base: 10; Default-character-style: (:fix :roman :normal) -*-")

(defmethod deallocate-connection :around ((connection basic-connection))
  (client-trace "~&Deallocate: ~S" connection)
  (call-next-method)
  (deallocate-resource 'http-connection connection)
  connection)

;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:CLIENT;CONNECTION.LISP.47")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: lisp; Syntax: ansi-common-lisp; Package: http; Base: 10; Default-character-style: (:fix :roman :normal) -*-")

(define get-connection (host port &optional domain-name &aux (table *connection-table*))
  "Returns a client connection to a server from the connection pool."
  (declare (values connection stream new-connection-p))
  (when *client-persistent-connections*
    (with-connection-pool-lock (:mode :write)
      (multiple-value-bind (entry found-p)
          (gethash host table) 
        (cond (entry
               (multiple-value-bind (conn replace-top-connection-p)
                   (%pop-connection-from-pool entry port)
                 (cond-every
                   (replace-top-connection-p
                     (let ((next (connection-next entry)))
                       (if next
                           (setf (gethash host table) next)
                           (remhash host table))))
                   (conn
                     (let ((stream (connection-stream conn)))
                       (clear-input stream)
                       (clear-output stream)
                       (setf (connection-domain-name conn) domain-name
			     (connection-next conn) nil
			     (connection-free-since conn) 0)
                       (return-from get-connection (values conn stream)))))))
              (found-p
               (remhash host table))))))
  ;; If no live connection available allocate a new one.
  (allocate-connection host port domain-name))

;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:CLIENT;CONNECTION.LISP.47")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: lisp; Syntax: ansi-common-lisp; Package: http; Base: 10; Default-character-style: (:fix :roman :normal) -*-")

(defmethod note-free-connection ((connection connection-pool-mixin))
  (with-slots (requests-completed requests-allowed free-since close-time timeout) connection
    (cond ((zerop (connection-free-since connection))
	   (let* ((time (get-universal-time))
		  (close (+ time (or timeout *client-persistent-connection-timeout*))))
	     (setf free-since time
		   close-time close)
	     (push-connection-pool connection)))
	  (t (error "Attempt to note free connection that is already free for ~S." connection)))))

