;;; -*- Mode: LISP; Syntax: Common-Lisp; Package: USER; Base: 10; Patch-File: t -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>
;;; Patch file for CL-HTTP version 67.3
;;; Reason: Function WWW-UTILS::%DOMAIN-NAME-FOR-IP-ADDRESS:  add error-p argument.
;;; Function WWW-UTILS:DOMAIN-NAME-FOR-PARSED-IP-ADDRESS:  implement.
;;; Function (CLOS:METHOD HTTP::PERSISTENT-CONNECTION-P (HTTP::BASIC-SERVER-MIXIN)):  fix connection lossage due to incomplete cutover.
;;; Function (CLOS:METHOD HTTP::WRITE-HEADER (T HTTP::HEADER T)):  fix to write
;;; raw values from header objects correctly.
;;; Written by JCMa, 9/04/97 19:26:13
;;; while running on Lispm Machine Thomas Jefferson from FEP0:>ComLink-38-68-D-MIT-8-3.ilod.1
;;; with Genera 8.3, Logical Pathnames Translation Files NEWEST, NFS Server 435.0,
;;; Metering 439.0, Metering Substrate 439.0, Conversion Tools 430.0, Hacks 435.0,
;;; CLIM 66.5, Genera CLIM 66.0, PostScript CLIM 66.2, CLIM Documentation 66.0,
;;; 8-3-Patches 1.33, MAC 412.8, Statice Runtime 460.4, Statice 460.1,
;;; Statice Browser 460.0, Statice Documentation 423.0, DBFS Utilities 439.0,
;;; Showable Procedures 36.3, Binary Tree 34.0, Mailer 434.0,
;;; Working LispM Mailer 6.1, Experimental HTTP Server 67.2,
;;; Experimental W3 Presentation System 7.0,
;;; Experimental CL-HTTP Server Interface 52.0,
;;; Symbolics Common Lisp Compatibility 3.0, Comlink Packages 4.6,
;;; Comlink Utilities 9.35, COMLINK Cryptography 1.0, Routing Taxonomy 8.1,
;;; COMLINK Database 10.84, Email Servers 11.18,
;;; Comlink Customized LispM Mailer 6.14, Dynamic Forms 12.12,
;;; Communications Linker Server 38.68,
;;; Experimental Lambda Information Retrieval System 12.8, Jcma 41,
;;; Experimental HTTP Client 48.0, Image Substrate 435.0,
;;; Essential Image Substrate 427.0, Experimental HTTP Client Substrate 1.0,
;;; Ivory Revision 4A, FEP 328, FEP0:>I328-loaders.flod(24),
;;; FEP0:>I328-info.flod(24), FEP0:>I328-debug.flod(24), FEP0:>I328-lisp.flod(25),
;;; FEP0:>I328-kernel.fep(44), Boot ROM version 320, Device PROM version 325,
;;; Genera application 5.6.1a1, MacIvory SCSI Manager Server 4.3.2a1,
;;; Toolbox Servers 4.2, MacIvory & RPC library 6.3.4a1,
;;; MacIvory life support 4.3.8a1, Symbolics keyboard 2.1.1a1,
;;; Macintosh System Software 8.0, 1152x820 Screen with Genera fonts,
;;; Machine serial number 30376, Macintosh, Symbolics Keyboard,
;;; Add support for Apple's Gestalt and Speech Managers. (from SYS:MAC;MACIVORY-SPEECH-SUPPORT.LISP.5),
;;; Ephemeral gc reclamation patch (from SYS:8-3-PATCHES;PATCH;8-3-PATCHES-1-31.LISP.4),
;;; Domain Fixes (from CML:MAILER;DOMAIN-FIXES.LISP.33),
;;; Don't force in the mail-x host (from CML:MAILER;MAILBOX-FORMAT.LISP.22),
;;; Make Mailer More Robust (from CML:MAILER;MAILER-FIXES.LISP.15),
;;; Patch TCP hang on close when client drops connection. (from HTTP:LISPM;SERVER;TCP-PATCH-HANG-ON-CLOSE.LISP.10),
;;; Add CLIM presentation and text style format directives. (from FV:SCLC;FORMAT.LISP.20),
;;; Deny some hosts access to some servers. (from CML:LISPM;HOST-SERVICE-ACCESS-CONTROL.LISP.4),
;;; Fix Statice Lossage (from CML:LISPM;STATICE-PATCH.LISP.3),
;;; COMLINK Mailer Patches. (from CML:LISPM;MAILER-PATCH.LISP.102),
;;; Clim patches (from CML:DYNAMIC-FORMS;CLIM-PATCHES.LISP.48).

(SCT:FILES-PATCHED-IN-THIS-PATCH-FILE 
  "HTTP:LISPM;SERVER;LISPM.LISP.345"
  "HTTP:SERVER;SERVER.LISP.684"
  "HTTP:SERVER;HEADERS.LISP.331")


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:LISPM;SERVER;LISPM.LISP.345")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: LISP; Package: WWW-UTILS; BASE: 10; Syntax: ANSI-Common-Lisp; Default-Character-Style: (:FIX :ROMAN :NORMAL);-*-")

;;;------------------------------------------------------------------- 
;;;
;;; OBTAINING THE DOMAIN NAME FOR AN IP ADDRESS
;;;

(define %domain-name-for-ip-address (address &optional (no-error-p t))
  "Given the IP address, ADDRESS, this returns the domain name or NIL."
  (declare (values domain-name successfully-resolved-p))
  (check-type address string)
  (labels ((unparse-domain-style-name (domain-name-list)
	     (apply #'concatenate 'string
		    (loop with length = (length domain-name-list)
			  for item in domain-name-list
			  for idx upfrom 1
			  collect (nstring-upcase item)
			  while (< idx length)
			  collect ".")))
	   (do-it (address)
	     ;; Special magic to get reverse parse out of the Lispm DNS system.
	     (let* ((name-list `("ARPA" "IN-ADDR" ,@(neti:parse-domain-style-name address)))
		    (domain-spec (neti:domain-query (nreverse name-list)))
		    (domain-list (fifth (car domain-spec))))
	       (if domain-list
		   (values (unparse-domain-style-name domain-list) t)
		   (values address nil)))))
    (declare (dynamic-extent #'unparse-domain-style-name))
    (if no-error-p
	(handler-case
	  (do-it address)
	  (neti:domain-resolver-error () (values address nil)))
	(do-it address))))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:LISPM;SERVER;LISPM.LISP.345")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: LISP; Package: WWW-UTILS; BASE: 10; Syntax: ANSI-Common-Lisp; Default-Character-Style: (:FIX :ROMAN :NORMAL);-*-")

(define domain-name-for-parsed-ip-address (ip-number &optional (no-error-p t))
  "Given the parsed IP address (an integer), IP-NUMBER, this returns the domain name or NIL."
  (%domain-name-for-ip-address (neti:unparse-internet-address ip-number) no-error-p))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;SERVER.LISP.684")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: lisp; Syntax: ANSI-Common-Lisp; Package: http; Base: 10 -*-")

(defmethod persistent-connection-p ((server basic-server-mixin) &optional inside-transaction-p)
  (with-slots (headers requests-completed close-connection-p) server
    (cond (close-connection-p nil)
          (t (let ((connection (get-header :connection headers)))
               (case (server-http-version server)
                 (:http/0.9 nil)
                 (:http/1.0
                   (and connection
			(member :keep-alive connection)
			(> *persistent-connection-maximum-requests*
			   (if inside-transaction-p (1+ (the fixnum requests-completed)) requests-completed))))
                 (t (if (member :close connection)
			nil
			(> *persistent-connection-maximum-requests*
			   (if inside-transaction-p (1+ (the fixnum requests-completed)) requests-completed))))))))))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;HEADERS.LISP.331")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: lisp; Package: HTTP; BASE: 10.; Syntax: ANSI-COMMON-LISP; Default-Character-Style: (:FIX :ROMAN :NORMAL);-*-")

(defmethod write-header (header-name (header header) stream &aux raw-value)
  (cond ((and (slot-boundp header 'raw-value)
	      (setq raw-value (header-raw-value header)))
	 (loop initially (fast-format stream "~A: " (symbol-name header-name))
	       for (val . more) = raw-value then more
	       do (write-string val stream)
		  (send-cr-line-feed stream)
	       while more
	       do (write-char #\space stream)))
        ((slot-boundp header 'value)
         (write-header header-name (%header-value header) stream))
        (t (error "Unable to extract a header value from ~A." header))))

