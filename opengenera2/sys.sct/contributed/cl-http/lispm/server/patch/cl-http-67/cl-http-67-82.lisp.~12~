;;; -*- Mode: lisp; Syntax: ansi-common-lisp; Package: http; Base: 10; Patch-File: t -*-
;;; Patch file for CL-HTTP version 67.82
;;; Reason: Function (CLOS:METHOD HTTP::UNREGISTER-LOG (HTTP::BASIC-LOG-MIXIN)):  Symmetric method.
;;; Function HTTP::REGISTER-LOG:  Doc change
;;; Function HTTP::UNREGISTER-LOG:  Doc
;;; Function (CLOS:METHOD HTTP:REMOVE-ACCESS-LOG (HTTP::ACCESS-LOG (EQL :ALL))):  Method to delete from all access logs.
;;; Function HTTP:REMOVE-ACCESS-LOG:  Update documentation.
;;; Function HTTP:INTERN-ACCESS-LOG:  Find logs whether active or inactive.
;;; Function HTTP::UNINTERN-ACCESS-LOG:  New.
;;; Function TQ::CLEAR-TASK-QUEUE:  New.
;;; Function (CLOS:METHOD TQ::CLEAR-TASK-QUEUE (TQ:TASK-QUEUE)):  Implement.
;;; Function (CLOS:METHOD CLOS:INITIALIZE-INSTANCE (HTTP::PROCESS-QUEUED-LOGGING-MIXIN) :AFTER):  Clean up name for process.
;;; DEFEMTHOD HTTP::UNINTERN-ACCESS-LOG:  Implement.
;;; Function HTTP::CREATE-NOTIFICATION-ACCESS-LOG:  Add the log to the port.
;;; Written by JCMa, 9/16/98 14:31:41
;;; while running on Lispm Machine Thomas Jefferson from FEP0:>COMLINK-38-76-RL-183-J-A-MIT-8-5.ilod.1
;;; with Genera 8.5, Experimental IP-TCP Documentation 422.0, NFS Server 439.0,
;;; Mailer 438.0, Print Spooler 439.0, Domain Name Server 436.0,
;;; Experimental Lock Simple 435.1, Compare Merge 404.0, VC Documentation 401.0,
;;; Logical Pathnames Translation Files NEWEST, Experimental Conversion Tools 436.0,
;;; Metering 444.0, Metering Substrate 444.0, Hacks 440.0, CLIM 72.0,
;;; Genera CLIM 72.0, PostScript CLIM 72.0, Experimental CLIM Documentation 71.27,
;;; Statice Runtime 466.0, Statice 466.0, Statice Browser 466.0,
;;; Statice Server 466.0, 8-5-Patches 1.1, MAC 413.0,
;;; Relatus Natural Language Environment 183, RELATUS Utilities 29.2,
;;; Experimental Gnoscere Representation System 13.7,
;;; Dynamic Window Hardcopy Extensions 4.1, Background Bug Reporting 12.0,
;;; Experimental Relatus Parser Semantic Perception 27.1, Showable Procedures 36.3,
;;; Binary Tree 34.0, Experimental Reference System 32.2,
;;; Experimental Semantic Inversion 19.2, Experimental Lexical Classifier 3.0,
;;; Experimental Gnoscere Activity System 6.2, Flavor Resource 1.0,
;;; Relatus Parser 5.6, Experimental Relatus Generator 6.2,
;;; Lisp System Extensions 72.2, Object Resource 36.0, Agent Utilities 45.0,
;;; Working LispM Mailer 7.0, HTTP Server 67.79, W3 Presentation System 7.0,
;;; CL-HTTP Server Interface 52.0, Symbolics Common Lisp Compatibility 3.0,
;;; Comlink Packages 5.1, Comlink Utilities 9.41, COMLINK Cryptography 1.1,
;;; Routing Taxonomy 8.3, COMLINK Database 10.111, Email Servers 11.22,
;;; Comlink Customized LispM Mailer 6.14, Dynamic Forms 12.18,
;;; Communications Linker Server 38.77, Lambda Information Retrieval System 18.34,
;;; Experimental Joshua 237.3, Jcma 41, Ivory Revision 4A, IFEP 328,
;;; FEP0:>I328-loaders.flod(24), FEP0:>I328-info.flod(24), FEP0:>I328-debug.flod(24),
;;; FEP0:>I328-lisp.flod(25), FEP0:>I328-kernel.fep(44), Boot ROM version 320,
;;; Device PROM version 325, Genera application 5.6.1a1,
;;; MacIvory SCSI Manager Server 4.3.2a1, Toolbox Servers 4.2,
;;; MacIvory & RPC library 6.3.4a1, MacIvory life support 4.3.8a1,
;;; Symbolics keyboard 2.1.1a1, Macintosh System Software 8.1,
;;; 1152x820 Screen with Genera fonts, Machine serial number 30376,
;;; Macintosh Quadra 800, Symbolics Keyboard,
;;; Add support for Apple's Gestalt and Speech Managers. (from SYS:MAC;MACIVORY-SPEECH-SUPPORT.LISP.1),
;;; Domain Fixes (from CML:MAILER;DOMAIN-FIXES.LISP.33),
;;; Don't force in the mail-x host (from CML:MAILER;MAILBOX-FORMAT.LISP.23),
;;; Make Mailer More Robust (from CML:MAILER;MAILER-FIXES.LISP.15),
;;; Patch TCP hang on close when client drops connection. (from HTTP:LISPM;SERVER;TCP-PATCH-HANG-ON-CLOSE.LISP.10),
;;; Add CLIM presentation and text style format directives. (from FV:SCLC;FORMAT.LISP.20),
;;; Deny some hosts access to some servers. (from CML:LISPM;HOST-SERVICE-ACCESS-CONTROL.LISP.4),
;;; Fix Statice Lossage (from CML:LISPM;STATICE-PATCH.LISP.3),
;;; COMLINK Mailer Patches. (from CML:LISPM;MAILER-PATCH.LISP.102),
;;; Clim patches (from CML:DYNAMIC-FORMS;CLIM-PATCHES.LISP.48),
;;; Asynchonous Log Window (from W:>rusty>asynchonous-log-window).

;;; Patch file for CL-HTTP version 67.82
;;; Written by JCMa, 9/17/98 16:52:11
;;; while running on FUJI-VLM from FUJI:/usr/opt/VLM100/lib/symbolics/Comlink-38-77-RL-183-J-B1-MIT-8-5.vlod
;;; with Open Genera 2.0, Genera 8.5, Logical Pathnames Translation Files NEWEST,
;;; Metering 444.0, Metering Substrate 444.0, Experimental Conversion Tools 436.0,
;;; Hacks 440.0, CLIM 72.0, Genera CLIM 72.0, PostScript CLIM 72.0,
;;; Experimental CLIM Documentation 72.0, 8-5-Patches 2.4, MAC 414.0,
;;; Relatus Natural Language Environment 183, RELATUS Utilities 29.2,
;;; Experimental Gnoscere Representation System 13.7,
;;; Dynamic Window Hardcopy Extensions 4.1, Background Bug Reporting 12.0,
;;; Experimental Relatus Parser Semantic Perception 27.1, Showable Procedures 36.3,
;;; Binary Tree 34.0, Experimental Reference System 32.2,
;;; Experimental Semantic Inversion 19.2, Experimental Lexical Classifier 3.0,
;;; Experimental Gnoscere Activity System 6.2, Flavor Resource 1.0,
;;; Relatus Parser 5.7, Experimental Relatus Generator 6.2,
;;; Lisp System Extensions 72.2, Object Resource 36.0, Agent Utilities 45.0,
;;; Experimental Statice Runtime 465.2, Experimental Statice 465.0,
;;; Experimental Statice Browser 465.0, Experimental Statice Documentation 425.0,
;;; Experimental Joshua 237.3, Experimental Server Utilities 440.1,
;;; Experimental Mailer 437.4, Working LispM Mailer 7.0, HTTP Server 67.82,
;;; W3 Presentation System 7.0, CL-HTTP Server Interface 52.0,
;;; Symbolics Common Lisp Compatibility 3.0, Comlink Packages 5.1,
;;; Comlink Utilities 9.41, COMLINK Cryptography 1.1, Routing Taxonomy 8.3,
;;; COMLINK Database 10.111, Email Servers 11.22,
;;; Comlink Customized LispM Mailer 6.14, Dynamic Forms 12.18,
;;; Communications Linker Server 38.77, Lambda Information Retrieval System 18.38,
;;; Jcma 41, Ivory Revision 5, VLM Debugger 329, Genera program 8.11,
;;; DEC OSF/1 V4.0 (Rev. 110),
;;; 1280x994 8-bit PSEUDO-COLOR X Screen FUJI:0.0 with 224 Genera fonts (DECWINDOWS Digital Equipment Corporation Digital UNIX V4.0 R1),
;;; Domain Fixes (from CML:MAILER;DOMAIN-FIXES.LISP.33),
;;; Don't force in the mail-x host (from CML:MAILER;MAILBOX-FORMAT.LISP.23),
;;; Make Mailer More Robust (from CML:MAILER;MAILER-FIXES.LISP.15),
;;; Patch TCP hang on close when client drops connection. (from HTTP:LISPM;SERVER;TCP-PATCH-HANG-ON-CLOSE.LISP.10),
;;; Add CLIM presentation and text style format directives. (from FV:SCLC;FORMAT.LISP.20),
;;; Deny some hosts access to some servers. (from CML:LISPM;HOST-SERVICE-ACCESS-CONTROL.LISP.4),
;;; Fix Statice Lossage (from CML:LISPM;STATICE-PATCH.LISP.3),
;;; COMLINK Mailer Patches. (from CML:LISPM;MAILER-PATCH.LISP.102),
;;; Clim patches (from CML:DYNAMIC-FORMS;CLIM-PATCHES.LISP.48),
;;; Asynchonous Log Window (from W:>rusty>asynchonous-log-window).


;;; Patch file for CL-HTTP version 67.82
;;; Written by JCMa, 9/17/98 16:39:58
;;; while running on FUJI-VLM from FUJI:/usr/opt/VLM100/lib/symbolics/Comlink-38-77-RL-183-J-B1-MIT-8-5.vlod
;;; with Open Genera 2.0, Genera 8.5, Logical Pathnames Translation Files NEWEST,
;;; Metering 444.0, Metering Substrate 444.0, Experimental Conversion Tools 436.0,
;;; Hacks 440.0, CLIM 72.0, Genera CLIM 72.0, PostScript CLIM 72.0,
;;; Experimental CLIM Documentation 72.0, 8-5-Patches 2.4, MAC 414.0,
;;; Relatus Natural Language Environment 183, RELATUS Utilities 29.2,
;;; Experimental Gnoscere Representation System 13.7,
;;; Dynamic Window Hardcopy Extensions 4.1, Background Bug Reporting 12.0,
;;; Experimental Relatus Parser Semantic Perception 27.1, Showable Procedures 36.3,
;;; Binary Tree 34.0, Experimental Reference System 32.2,
;;; Experimental Semantic Inversion 19.2, Experimental Lexical Classifier 3.0,
;;; Experimental Gnoscere Activity System 6.2, Flavor Resource 1.0,
;;; Relatus Parser 5.7, Experimental Relatus Generator 6.2,
;;; Lisp System Extensions 72.2, Object Resource 36.0, Agent Utilities 45.0,
;;; Experimental Statice Runtime 465.2, Experimental Statice 465.0,
;;; Experimental Statice Browser 465.0, Experimental Statice Documentation 425.0,
;;; Experimental Joshua 237.3, Experimental Server Utilities 440.1,
;;; Experimental Mailer 437.4, Working LispM Mailer 7.0, HTTP Server 67.82,
;;; W3 Presentation System 7.0, CL-HTTP Server Interface 52.0,
;;; Symbolics Common Lisp Compatibility 3.0, Comlink Packages 5.1,
;;; Comlink Utilities 9.41, COMLINK Cryptography 1.1, Routing Taxonomy 8.3,
;;; COMLINK Database 10.111, Email Servers 11.22,
;;; Comlink Customized LispM Mailer 6.14, Dynamic Forms 12.18,
;;; Communications Linker Server 38.77, Lambda Information Retrieval System 18.38,
;;; Jcma 41, Ivory Revision 5, VLM Debugger 329, Genera program 8.11,
;;; DEC OSF/1 V4.0 (Rev. 110),
;;; 1280x994 8-bit PSEUDO-COLOR X Screen FUJI:0.0 with 224 Genera fonts (DECWINDOWS Digital Equipment Corporation Digital UNIX V4.0 R1),
;;; Domain Fixes (from CML:MAILER;DOMAIN-FIXES.LISP.33),
;;; Don't force in the mail-x host (from CML:MAILER;MAILBOX-FORMAT.LISP.23),
;;; Make Mailer More Robust (from CML:MAILER;MAILER-FIXES.LISP.15),
;;; Patch TCP hang on close when client drops connection. (from HTTP:LISPM;SERVER;TCP-PATCH-HANG-ON-CLOSE.LISP.10),
;;; Add CLIM presentation and text style format directives. (from FV:SCLC;FORMAT.LISP.20),
;;; Deny some hosts access to some servers. (from CML:LISPM;HOST-SERVICE-ACCESS-CONTROL.LISP.4),
;;; Fix Statice Lossage (from CML:LISPM;STATICE-PATCH.LISP.3),
;;; COMLINK Mailer Patches. (from CML:LISPM;MAILER-PATCH.LISP.102),
;;; Clim patches (from CML:DYNAMIC-FORMS;CLIM-PATCHES.LISP.48),
;;; Asynchonous Log Window (from W:>rusty>asynchonous-log-window).




(SCT:FILES-PATCHED-IN-THIS-PATCH-FILE 
  "HTTP:SERVER;LOG.LISP.164"
  "HTTP:SERVER;LOG.LISP.165"
  "HTTP:SERVER;TASK-QUEUE.LISP.14"
  "HTTP:SERVER;LOG.LISP.166"
  "HTTP:SERVER;LOG.LISP.167")


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;LOG.LISP.164")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Syntax: Ansi-common-lisp; Package: HTTP; Base: 10; Mode: LISP -*-")

(defmethod unregister-log ((log basic-log-mixin))
  (setq *all-logs* (delete log *all-logs*)))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;LOG.LISP.164")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Syntax: Ansi-common-lisp; Package: HTTP; Base: 10; Mode: LISP -*-")

(define-generic register-log (log)
  (:documentation "Primitive that registers LOG so that it is found by intern-access-log, but does not make the log active."))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;LOG.LISP.164")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Syntax: Ansi-common-lisp; Package: HTTP; Base: 10; Mode: LISP -*-")

(define-generic unregister-log (log)
  (:documentation "Primitive that unregisters LOG. LOC should be removed from active ports with remove log."))

;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;LOG.LISP.165")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Syntax: Ansi-common-lisp; Package: HTTP; Base: 10; Mode: LISP -*-")

(defmethod remove-access-log ((log access-log) (port (eql :all)))
  (loop for entry in *standard-access-logs*
	do (when (member log (cdr entry))
	     (delete log entry)
	     (unless (cdr entry)
	       (delete entry *standard-access-logs*)))))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;LOG.LISP.165")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Syntax: Ansi-common-lisp; Package: HTTP; Base: 10; Mode: LISP -*-")

(define-generic remove-access-log (access-log port)
  (:documentation "Removes an access log, ACCESS-LOG, for PORT.
PORT is either an integer or :ALL"))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;LOG.LISP.165")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Syntax: Ansi-common-lisp; Package: HTTP; Base: 10; Mode: LISP -*-")

(define intern-access-log (name &key (port *standard-http-port*)
                                (if-does-not-exist :error)
                                (directory *standard-log-directory*)
                                host
                                (class *log-access-log-class*))
  (declare (values log newly-created-p))
  (flet ((equal-log-p (x)
           (and (equalp name (log-name x))
                (typep x class))))
    (declare (dynamic-extent #'equal-log-p))
    (etypecase name
      (string
        (cond
          ((find-access-log-if #'equal-log-p nil))
          (t (ecase if-does-not-exist
               (:soft nil)
               (:create
                 (let* ((*standard-log-directory* directory)
                        (log (allocate-log :name name :port port :class class :local-host (or host (local-host)))))
                   (when port (add-access-log log port))
                   (values log t)))
               (:error (error "Unknown HTTP log, ~A." name))))))
      (basic-log-mixin name))))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;LOG.LISP.165")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Syntax: Ansi-common-lisp; Package: HTTP; Base: 10; Mode: LISP -*-")

(define-generic unintern-access-log (log)
  (:documentation "Removes LOG from any ports and uninterns it."))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;TASK-QUEUE.LISP.14")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: LISP; Package: (task-queue :nicknames (tq) :use (future-common-lisp)); BASE: 10; Syntax: ANSI-Common-Lisp; -*-")

(defgeneric clear-task-queue (task-queue)
  (declare (values flushed-queue))
  (:documentation "Clears all entries from the task queue with inter-process locking."))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;TASK-QUEUE.LISP.14")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: LISP; Package: (task-queue :nicknames (tq) :use (future-common-lisp)); BASE: 10; Syntax: ANSI-Common-Lisp; -*-")

(defmethod clear-task-queue ((task-queue task-queue))
  (with-slots (lock queue pointer n-pending-tasks) task-queue
    (with-lock-held (lock :write "Task Queue Clear")
      (prog1 queue
	     (setq queue nil
		   pointer nil
		   n-pending-tasks 0)))))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;TASK-QUEUE.LISP.14")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: LISP; Package: (task-queue :nicknames (tq) :use (future-common-lisp)); BASE: 10; Syntax: ANSI-Common-Lisp; -*-")

(export (intern "CLEAR-TASK-QUEUE" :tq) :tq)

;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;LOG.LISP.166")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Syntax: Ansi-common-lisp; Package: HTTP; Base: 10; Mode: LISP -*-")

;;;------------------------------------------------------------------- 
;;;
;;; PROCESS QUEUED LOGGING
;;;

(defmethod initialize-instance :after ((log process-queued-logging-mixin) &key &allow-other-keys)
  ;; intialization some strings
  (setf (tq:task-queue-wait-whostate log) "Log Wait"
        (tq:task-queue-process-name log) (concatenate 'string "HTTP-" (substitute #\- #\space (log-name log)) "-Daemon"))
  ;; start up the process
  (start-log-queue log)
  log)

;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;LOG.LISP.166")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Syntax: Ansi-common-lisp; Package: HTTP; Base: 10; Mode: LISP -*-")

(defmethod unintern-access-log ((log basic-log-mixin))
  (remove-access-log log :all)
  (unregister-log log))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;LOG.LISP.167")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Syntax: Ansi-common-lisp; Package: HTTP; Base: 10; Mode: LISP -*-")

(define create-notification-access-log (predicate notifier &key (name "Notification-Log")
                                                  (port *standard-http-port*)
                                                  (class 'custom-notification-log))
  (flet ((equal-log (x)
           (equalp name (log-name x))))
    (declare (dynamic-extent #'equal-log))
    (check-type predicate function)
    (check-type notifier function)
    (let ((log (find-access-log-if #'equal-log port)))
      (unless log
        (multiple-value-setq (log)
          (intern-access-log (or name (default-log-file-name port class))
                             :port port
                             :directory *standard-log-directory*
                             :class class
                             :if-does-not-exist :create)))
      (setf (notification-log-notifier log) notifier
            (notification-log-predicate log) predicate)
      (log-notifications-on log t)
      (add-access-log log port)
      log)))
