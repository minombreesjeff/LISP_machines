;;; -*- Mode: LISP; Syntax: Common-Lisp; Package: USER; Base: 10; Patch-File: T -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>
;;; Patch file for CL-HTTP version 67.26
;;; Reason: Variable WWW-UTILS::*SAFE-SERVER-ABORT-STATES*:  whostate when it is safe to abort an HTTP connection.
;;; Function WWW-UTILS::SERVER-SAFE-TO-ABORT-P:  new predicate.
;;; Function WWW-UTILS::SCAVENGE-IDLE-HTTP-PROCESSES:  Perform tests without other processes running.
;;; Modularize so reporting happens with out processes running.
;;; Written by JCMa, 12/15/97 21:18:37
;;; while running on PUB3 from HOST3:/usr/users/install/og/eop-world-pub3-host3.vlod
;;; with Open Genera 2.0, Genera 8.5, Experimental IP-TCP Documentation 423.0,
;;; Experimental Lock Simple 437.0, Compare Merge 404.0, VC Documentation 401.0,
;;; Logical Pathnames Translation Files NEWEST, CLIM 72.0, Genera CLIM 72.0,
;;; PostScript CLIM 72.0, Experimental CLIM Documentation 72.0,
;;; Statice Runtime 466.0, Statice 466.0, Statice Browser 466.0,
;;; Statice Server 466.1, Experimental Statice Documentation 426.0,
;;; Experimental Joshua 237.3, Joshua Documentation 216.0,
;;; Experimental Image Substrate 440.0, Experimental Essential Image Substrate 433.0,
;;; Server Utilities 442.0, Mailer 438.0, Showable Procedures 36.3, Binary Tree 34.0,
;;; Working LispM Mailer 7.0, HTTP Server 67.25, W3 Presentation System 7.0,
;;; CL-HTTP Server Interface 52.0, Symbolics Common Lisp Compatibility 3.0,
;;; Comlink Packages 5.1, Comlink Utilities 9.40, COMLINK Cryptography 1.0,
;;; Routing Taxonomy 8.3, COMLINK Database 10.100, Email Servers 11.19,
;;; Comlink Customized LispM Mailer 6.14, Dynamic Forms 12.18,
;;; Communications Linker Server 38.74, Lambda Information Retrieval System 18.11,
;;; Comlink Documentation Utilities 4.1, White House Publication System 20.23,
;;; WH Automatic Categorization System 9.1, Ivory Revision 5, VLM Debugger 329,
;;; Genera program 8.1, DEC OSF/1 V4.0 (Rev. 52),
;;; 1280x974 24-bit TRUE-COLOR X Screen HOST3:0.0 with 224 Genera fonts (DECWINDOWS Digital Equipment Corporation Digital UNIX V4.0 R1),
;;; Domain Fixes (from CML:MAILER;DOMAIN-FIXES.LISP.33),
;;; Don't force in the mail-x host (from CML:MAILER;MAILBOX-FORMAT.LISP.23),
;;; Make Mailer More Robust (from CML:MAILER;MAILER-FIXES.LISP.15),
;;; Patch TCP hang on close when client drops connection. (from HTTP:LISPM;SERVER;TCP-PATCH-HANG-ON-CLOSE.LISP.10),
;;; Add CLIM presentation and text style format directives. (from FV:SCLC;FORMAT.LISP.20),
;;; Deny some hosts access to some servers. (from CML:LISPM;HOST-SERVICE-ACCESS-CONTROL.LISP.4),
;;; Fix Statice Lossage (from CML:LISPM;STATICE-PATCH.LISP.3),
;;; COMLINK Mailer Patches. (from CML:LISPM;MAILER-PATCH.LISP.102),
;;; Clim patches (from CML:DYNAMIC-FORMS;CLIM-PATCHES.LISP.48),
;;; Local flavor function patch (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>local-flavor-function-patch-mark2),
;;; Get emb file host patch (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>get-emb-file-host-patch),
;;; Get mailer home location from namespace (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>mailer-environment-patch),
;;; Consider internet-domain-name when matching names to file hosts (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>pathname-host-namep-patch),
;;; Parse pathname patch (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>parse-pathname-patch),
;;; AutoEval (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>autoeval-code),
;;; Get internal event code patch (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>get-internal-event-code-patch),
;;; AutoLogin (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>auto-login),
;;; Generate an error any time there domain system tries to create a bogus host object for the local host. (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>detect-bogus-host),
;;; Set Mailer UID variables for current namespace. (from EOP:MAIL-SERVER;PATCHES;MAILER-UID.LISP.1),
;;; Provide Switch between EOP and MIT sources. (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>mit-source),
;;; Make FS:USER-HOMEDIR look in the namespace as one strategy. (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>user-homedir),
;;; Local uid patch (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>local-uid-patch),
;;; Statice log clear patch (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>statice-log-clear-patch),
;;; Make compiled-function-spec-p of CLOS class symbol return NIL instead of erring (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>compiled-function-spec-p-patch),
;;; Improve mailer host parsing (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>parse-mailer-host-patch),
;;; Make native domain name host patch (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>make-native-domain-name-host-patch),
;;; Domain query cname loop patch (from DISTRIBUTION|DIS-W-HOST:>comlink>v-4>wh>config>mail-server>patches>domain-query-cname-loop-patch),
;;; Increase disk wired wait timeout from 30 to 90 seconds (from EOP:MAIL-SERVER;PATCHES;DISK-WAIT-90-PATCH.LISP.1),
;;; Checkpoint command patch (from WILSON.AI.MIT.EDU:>comlink>v-4>wh>config>mail-server>patches>checkpoint-command-patch.lisp.9),
;;; Gc report patch (from EOP:MAIL-SERVER;PATCHES;GC-REPORT-PATCH.LISP.1),
;;; Vlm namespace append patch (from EOP:MAIL-SERVER;PATCHES;VLM-NAMESPACE-APPEND-PATCH.LISP.1).

(SCT:FILES-PATCHED-IN-THIS-PATCH-FILE 
  "HTTP:LISPM;SERVER;LISPM.LISP.379")


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:LISPM;SERVER;LISPM.LISP.379")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: LISP; Package: WWW-UTILS; BASE: 10; Syntax: ANSI-Common-Lisp; Default-Character-Style: (:fix :roman :normal);-*-")

(defparameter *safe-server-abort-states* '("TCP In" "TCP Out" "TCP Finish")
  "Process whostates from which is is safe to abort HTTP connnections.")


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:LISPM;SERVER;LISPM.LISP.379")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: LISP; Package: WWW-UTILS; BASE: 10; Syntax: ANSI-Common-Lisp; Default-Character-Style: (:fix :roman :normal);-*-")

(defun server-safe-to-abort-p (server)
  "Returns non-null when it is safe to abort the HTTP connection for SERVER."
  (let ((process (http::server-process server)))
    (and process
	 (or (null *safe-server-abort-states*)
	     (member (process:process-whostate process) *safe-server-abort-states* :test #'equalp)))))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:LISPM;SERVER;LISPM.LISP.379")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: LISP; Package: WWW-UTILS; BASE: 10; Syntax: ANSI-Common-Lisp; Default-Character-Style: (:fix :roman :normal);-*-")

;; Don't just kill active HTTP connections. Useful for web walker, log window
;; and other lengthly computations.   3/18/97 -- JCMa.
(define scavenge-idle-http-processes ()
  "Finds and kills any HTTP servers that have been idle for more than IDLE-TIME."
  (labels ((reason-to-die (server)
             (cond ((http::server-timeout-p server) "it has been idle too long")
                   ((http::server-life-time-expired-p server) "its lifetime expired")
                   (t nil)))
           (idle-time (server)
             (let ((idle (http::server-idle-time server)))
               (when idle
                 (ceiling idle 60.))))
           (report-connection-abort (server process reason-to-die)
	     (format nil "~&Forcibly Aborting ~A
                          ~&~5TState: ~A~&Reason: ~A
                          ~:[~;~&~10TIdle Time: ~:*~\\time-interval\\~]~
                          ~:[~;~&~10TURL: ~:*~A~]"
		     server (process:process-whostate process) reason-to-die
		     (idle-time server) (http::server-url-string server)))
           (kill-http-server (server reason-to-die)
             (let ((process (http::server-process server)))
               (when process                    ;beware of fencepost error
		 (prog1 (report-connection-abort server process reason-to-die)
			(scl:process-interrupt process #'http::abort-connection server)))))
           (maybe-kill-http-server (server &aux reason-to-die report)
	     (process:with-no-other-processes	;Don't allow process to change state
	       (when (and (setq reason-to-die (reason-to-die server))
			  (server-safe-to-abort-p server))
		 (setq report (kill-http-server server reason-to-die))))
	     (when report
	       ;; (tv:notify nil report)                ;lose notifications as they just cause trouble
	       (http:report-bug http:*bug-http-server* "HTTP Connection Forcibly Aborted" report))))
	     
    (declare (inline reason-to-die))
    (unless http:*debug-server*
      (map-http-servers #'maybe-kill-http-server))
    (synchronize-idle-http-process-scavenger)))

