;;; -*- Mode: LISP; Syntax: ansi-common-lisp; Package: http; Base: 10; Patch-File: t -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>
;;; Patch file for CL-HTTP version 67.74
;;; Reason: Function (CLOS:METHOD URL:MIME-CONTENT-TYPE-SPEC (URL:TRANSLATION-METHOD-MIXIN)):  Smarten up for computed export types.
;;; DEFINE-HEADER-TYPE :CONTENT-TYPE-SEQUENCE-HEADER:  -
;;; DEFINE-HEADER :ACCEPT:  -
;;; Written by JCMa, 8/19/98 13:07:03
;;; while running on FUJI-VLM from FUJI:/usr/opt/VLM100/lib/symbolics/Comlink-38-77-RL-183-J-B-MIT-8-5.vlod
;;; with Open Genera 2.0, Genera 8.5, Logical Pathnames Translation Files NEWEST,
;;; Metering 444.0, Metering Substrate 444.0, Experimental Conversion Tools 436.0,
;;; Hacks 440.0, CLIM 72.0, Genera CLIM 72.0, PostScript CLIM 72.0,
;;; Experimental CLIM Documentation 72.0, 8-5-Patches 2.3, MAC 414.0,
;;; Relatus Natural Language Environment 183, RELATUS Utilities 29.2,
;;; Experimental Gnoscere Representation System 13.7,
;;; Dynamic Window Hardcopy Extensions 4.1, Background Bug Reporting 12.0,
;;; Experimental Relatus Parser Semantic Perception 27.1, Showable Procedures 36.3,
;;; Binary Tree 34.0, Experimental Reference System 32.2,
;;; Experimental Semantic Inversion 19.2, Experimental Lexical Classifier 3.0,
;;; Experimental Gnoscere Activity System 6.2, Flavor Resource 1.0,
;;; Relatus Parser 5.7, Experimental Relatus Generator 6.2,
;;; Lisp System Extensions 72.2, Object Resource 36.0, Agent Utilities 45.0,
;;; Experimental Statice Runtime 465.2, Experimental Statice 465.0,
;;; Experimental Statice Browser 465.0, Experimental Statice Documentation 425.0,
;;; Experimental Joshua 237.3, Experimental Server Utilities 440.1,
;;; Experimental Mailer 437.4, Working LispM Mailer 7.0, HTTP Server 67.73,
;;; W3 Presentation System 7.0, CL-HTTP Server Interface 52.0,
;;; Symbolics Common Lisp Compatibility 3.0, Comlink Packages 5.1,
;;; Comlink Utilities 9.41, COMLINK Cryptography 1.1, Routing Taxonomy 8.3,
;;; COMLINK Database 10.111, Email Servers 11.21,
;;; Comlink Customized LispM Mailer 6.14, Dynamic Forms 12.18,
;;; Communications Linker Server 38.77, Lambda Information Retrieval System 18.34,
;;; Experimental Feature Vector Editor 13.3,
;;; Experimental SHERFACS International Conflict Dataset 42.0,
;;; Experimental Inductive Interaction Detector 5.4, Experimental URN Resolver 10,
;;; Jcma 41, Ivory Revision 5, VLM Debugger 329, Genera program 8.8,
;;; DEC OSF/1 V4.0 (Rev. 110),
;;; 1280x994 8-bit PSEUDO-COLOR X Screen FUJI:0.0 with 224 Genera fonts (DECWINDOWS Digital Equipment Corporation Digital UNIX V4.0 R1),
;;; Domain Fixes (from CML:MAILER;DOMAIN-FIXES.LISP.33),
;;; Don't force in the mail-x host (from CML:MAILER;MAILBOX-FORMAT.LISP.23),
;;; Make Mailer More Robust (from CML:MAILER;MAILER-FIXES.LISP.15),
;;; Patch TCP hang on close when client drops connection. (from HTTP:LISPM;SERVER;TCP-PATCH-HANG-ON-CLOSE.LISP.10),
;;; Add CLIM presentation and text style format directives. (from FV:CODE;FORMAT.LISP.20),
;;; Deny some hosts access to some servers. (from CML:LISPM;HOST-SERVICE-ACCESS-CONTROL.LISP.4),
;;; Fix Statice Lossage (from CML:LISPM;STATICE-PATCH.LISP.3),
;;; COMLINK Mailer Patches. (from CML:LISPM;MAILER-PATCH.LISP.102),
;;; Clim patches (from CML:DYNAMIC-FORMS;CLIM-PATCHES.LISP.48),
;;; MIT CLIM 2.1 Patches (from FV:CODE;CLIM-2-1-PATCHES.LISP.1).



(SCT:FILES-PATCHED-IN-THIS-PATCH-FILE 
  "HTTP:SERVER;SERVER.LISP.743"
  "HTTP:SERVER;URL.LISP.329"
  "HTTP:SERVER;HEADERS.LISP.359")


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;SERVER.LISP.743")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: lisp; Syntax: ANSI-Common-Lisp; Package: http; Base: 10 -*-")

(define primary-pathname-extension-for-export-type (export-type &optional (error-p t))
    "Returns the primary pathname extension for EXPORT-TYPE
Signals an error if EXPORT-TYPE does not retrieve data from the file system."
    (cond ((car (rassoc export-type *pathname-extension-export-type-alist*  :test #'eq)))
          (error-p (error "~S is not an export type with associated pathanme extensions." export-type))
	  (t nil)))

;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;URL.LISP.329")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: LISP; Syntax: Ansi-common-lisp; Package: (URL :use (future-common-lisp) :colon-mode :internal); Base: 10 -*-")

(defmethod mime-content-type-spec ((url translation-method-mixin))
  (let ((translation-method (translation-method url))
        extension pathname)
    (cond (translation-method
	   (cond ((setq extension (http:primary-pathname-extension-for-export-type translation-method nil))
		  (http:%mime-content-type-spec extension))
		 (t (case translation-method
		      ((:html-form :computed-form :redirect :html-computed-form)
		       '(:text :html))
		      ;; Normal case is HTML, but someone could use different writers which makes this heuristic.   8/19/98 -- JCMa.
		      ((:directory :text-directory-hierarchy :image-directory :lisp-directory-hierarchy :directory-hierarchy :lisp-directory)
		       '(:text :html))
		      (:text-file '(:text :plain))
		      ;; Try extension case
		      ((:computed) nil)
		      (:search
			(if (extension url)
			    nil
			    '(:text :html)))
		      (t (error "Can't determine the content-type automatically for ~S." translation-method))))))
          ((and (setq extension (extension url))
		(setq extension (http:primary-pathname-extension (http:symbolize extension http:*keyword-package*))))
           (http:%mime-content-type-spec extension))
          ((setq pathname (cached-pathname url))
           (mime-content-type-spec pathname))
          (t (error "Can't determine the content-type automatically for ~S." url)))))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;HEADERS.LISP.359")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: lisp; Package: HTTP; BASE: 10.; Syntax: ANSI-COMMON-LISP; Default-Character-Style: (:FIX :ROMAN :NORMAL);-*-")

;; need to add singleton parsing option for sequence type headers.
(define-header-type :content-type-sequence-header (:header)
  :parse-function parse-mime-content-type-sequence-header
  :print-function print-mime-content-type-sequence-header)


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;HEADERS.LISP.359")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: lisp; Package: HTTP; BASE: 10.; Syntax: ANSI-COMMON-LISP; Default-Character-Style: (:FIX :ROMAN :NORMAL);-*-")

;;;------------------------------------------------------------------- 
;;;
;;; HTTP HEADERS
;;;

(define-header :accept
               (:content-type-sequence-header
                :request)
  :print-string "Accept"
  :print-series-predicate 'header-accept-series-value-p)

