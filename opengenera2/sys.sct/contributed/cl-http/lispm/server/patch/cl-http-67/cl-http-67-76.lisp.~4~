;;; -*- Mode: lisp; Syntax: ansi-common-lisp; Package: http; Base: 10; Patch-File: t -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>
;;; Patch file for CL-HTTP version 67.76
;;; Reason: CLOS class HTTP::URI-RESOLVER-MIXIN:  new mixin provides URI resolution in server and proxy.
;;; CLOS class HTTP::SERVER:  update.
;;; Function (CLOS:METHOD URL:LOCAL-URL-P (T)):  null if not URL.
;;; Remove function HTTP::INVOKE-PROXY-SERVICE: undefine.
;;; Function HTTP::INVOKE-PROXY-SERVICE:  add uri argument.
;;; Function (CLOS:METHOD HTTP::INVOKE-PROXY-SERVICE (HTTP::PROXY-SERVER-MIXIN T T T)):  -
;;; Function (CLOS:METHOD HTTP::INVOKE-PROXY-SERVICE (HTTP::PROXY-SERVER-MIXIN T T T) :AROUND):  -
;;; Function HTTP::%EXECUTE-REQUEST:  call invoke-proxy-service with new URI arg.
;;; Function HTTP::%REPORT-STATUS-MESSAGE:  better error message.
;;; Written by JCMa, 8/20/98 17:42:07
;;; while running on FUJI-VLM from FUJI:/usr/opt/VLM100/lib/symbolics/Comlink-38-77-RL-183-J-B-MIT-8-5.vlod
;;; with Open Genera 2.0, Genera 8.5, Logical Pathnames Translation Files NEWEST,
;;; Metering 444.0, Metering Substrate 444.0, Experimental Conversion Tools 436.0,
;;; Hacks 440.0, CLIM 72.0, Genera CLIM 72.0, PostScript CLIM 72.0,
;;; Experimental CLIM Documentation 72.0, 8-5-Patches 2.3, MAC 414.0,
;;; Relatus Natural Language Environment 183, RELATUS Utilities 29.2,
;;; Experimental Gnoscere Representation System 13.7,
;;; Dynamic Window Hardcopy Extensions 4.1, Background Bug Reporting 12.0,
;;; Experimental Relatus Parser Semantic Perception 27.1, Showable Procedures 36.3,
;;; Binary Tree 34.0, Experimental Reference System 32.2,
;;; Experimental Semantic Inversion 19.2, Experimental Lexical Classifier 3.0,
;;; Experimental Gnoscere Activity System 6.2, Flavor Resource 1.0,
;;; Relatus Parser 5.7, Experimental Relatus Generator 6.2,
;;; Lisp System Extensions 72.2, Object Resource 36.0, Agent Utilities 45.0,
;;; Experimental Statice Runtime 465.2, Experimental Statice 465.0,
;;; Experimental Statice Browser 465.0, Experimental Statice Documentation 425.0,
;;; Experimental Joshua 237.3, Experimental Server Utilities 440.1,
;;; Experimental Mailer 437.4, Working LispM Mailer 7.0, HTTP Server 67.75,
;;; W3 Presentation System 7.0, CL-HTTP Server Interface 52.0,
;;; Symbolics Common Lisp Compatibility 3.0, Comlink Packages 5.1,
;;; Comlink Utilities 9.41, COMLINK Cryptography 1.1, Routing Taxonomy 8.3,
;;; COMLINK Database 10.111, Email Servers 11.21,
;;; Comlink Customized LispM Mailer 6.14, Dynamic Forms 12.18,
;;; Communications Linker Server 38.77, Lambda Information Retrieval System 18.34,
;;; Experimental Feature Vector Editor 13.3,
;;; Experimental SHERFACS International Conflict Dataset 42.0,
;;; Experimental Inductive Interaction Detector 5.4, Jcma 41,
;;; Experimental URN Resolver 11, HTTP Client 48.9, HTTP Client Substrate 1.16,
;;; Experimental Image Substrate 438.1, Experimental Essential Image Substrate 431.0,
;;; HTTP Proxy Server 2.11, Ivory Revision 5, VLM Debugger 329, Genera program 8.8,
;;; DEC OSF/1 V4.0 (Rev. 110),
;;; 1280x994 8-bit PSEUDO-COLOR X Screen FUJI:0.0 with 224 Genera fonts (DECWINDOWS Digital Equipment Corporation Digital UNIX V4.0 R1),
;;; Domain Fixes (from CML:MAILER;DOMAIN-FIXES.LISP.33),
;;; Don't force in the mail-x host (from CML:MAILER;MAILBOX-FORMAT.LISP.23),
;;; Make Mailer More Robust (from CML:MAILER;MAILER-FIXES.LISP.15),
;;; Patch TCP hang on close when client drops connection. (from HTTP:LISPM;SERVER;TCP-PATCH-HANG-ON-CLOSE.LISP.10),
;;; Add CLIM presentation and text style format directives. (from FV:CODE;FORMAT.LISP.20),
;;; Deny some hosts access to some servers. (from CML:LISPM;HOST-SERVICE-ACCESS-CONTROL.LISP.4),
;;; Fix Statice Lossage (from CML:LISPM;STATICE-PATCH.LISP.3),
;;; COMLINK Mailer Patches. (from CML:LISPM;MAILER-PATCH.LISP.102),
;;; Clim patches (from CML:DYNAMIC-FORMS;CLIM-PATCHES.LISP.48),
;;; MIT CLIM 2.1 Patches (from FV:CODE;CLIM-2-1-PATCHES.LISP.1).

;;; Patch file for CL-HTTP version 67.76
;;; Written by JCMa, 8/21/98 18:26:30
;;; while running on FUJI-VLM from FUJI:/usr/opt/VLM100/lib/symbolics/Comlink-38-77-RL-183-J-B-MIT-8-5.vlod
;;; with Open Genera 2.0, Genera 8.5, Logical Pathnames Translation Files NEWEST,
;;; Metering 444.0, Metering Substrate 444.0, Experimental Conversion Tools 436.0,
;;; Hacks 440.0, CLIM 72.0, Genera CLIM 72.0, PostScript CLIM 72.0,
;;; Experimental CLIM Documentation 72.0, 8-5-Patches 2.3, MAC 414.0,
;;; Relatus Natural Language Environment 183, RELATUS Utilities 29.2,
;;; Experimental Gnoscere Representation System 13.7,
;;; Dynamic Window Hardcopy Extensions 4.1, Background Bug Reporting 12.0,
;;; Experimental Relatus Parser Semantic Perception 27.1, Showable Procedures 36.3,
;;; Binary Tree 34.0, Experimental Reference System 32.2,
;;; Experimental Semantic Inversion 19.2, Experimental Lexical Classifier 3.0,
;;; Experimental Gnoscere Activity System 6.2, Flavor Resource 1.0,
;;; Relatus Parser 5.7, Experimental Relatus Generator 6.2,
;;; Lisp System Extensions 72.2, Object Resource 36.0, Agent Utilities 45.0,
;;; Experimental Statice Runtime 465.2, Experimental Statice 465.0,
;;; Experimental Statice Browser 465.0, Experimental Statice Documentation 425.0,
;;; Experimental Joshua 237.3, Experimental Server Utilities 440.1,
;;; Experimental Mailer 437.4, Working LispM Mailer 7.0, HTTP Server 67.76,
;;; W3 Presentation System 7.0, CL-HTTP Server Interface 52.0,
;;; Symbolics Common Lisp Compatibility 3.0, Comlink Packages 5.1,
;;; Comlink Utilities 9.41, COMLINK Cryptography 1.1, Routing Taxonomy 8.3,
;;; COMLINK Database 10.111, Email Servers 11.21,
;;; Comlink Customized LispM Mailer 6.14, Dynamic Forms 12.18,
;;; Communications Linker Server 38.77, Lambda Information Retrieval System 18.34,
;;; Experimental Feature Vector Editor 13.3,
;;; Experimental SHERFACS International Conflict Dataset 42.0,
;;; Experimental Inductive Interaction Detector 5.4, Jcma 41,
;;; Experimental URN Resolver 11, HTTP Client 48.9, HTTP Client Substrate 1.17,
;;; Experimental Image Substrate 438.1, Experimental Essential Image Substrate 431.0,
;;; HTTP Proxy Server 3.0, Ivory Revision 5, VLM Debugger 329, Genera program 8.8,
;;; DEC OSF/1 V4.0 (Rev. 110),
;;; 1280x994 8-bit PSEUDO-COLOR X Screen FUJI:0.0 with 224 Genera fonts (DECWINDOWS Digital Equipment Corporation Digital UNIX V4.0 R1),
;;; Domain Fixes (from CML:MAILER;DOMAIN-FIXES.LISP.33),
;;; Don't force in the mail-x host (from CML:MAILER;MAILBOX-FORMAT.LISP.23),
;;; Make Mailer More Robust (from CML:MAILER;MAILER-FIXES.LISP.15),
;;; Patch TCP hang on close when client drops connection. (from HTTP:LISPM;SERVER;TCP-PATCH-HANG-ON-CLOSE.LISP.10),
;;; Add CLIM presentation and text style format directives. (from FV:CODE;FORMAT.LISP.20),
;;; Deny some hosts access to some servers. (from CML:LISPM;HOST-SERVICE-ACCESS-CONTROL.LISP.4),
;;; Fix Statice Lossage (from CML:LISPM;STATICE-PATCH.LISP.3),
;;; COMLINK Mailer Patches. (from CML:LISPM;MAILER-PATCH.LISP.102),
;;; Clim patches (from CML:DYNAMIC-FORMS;CLIM-PATCHES.LISP.48),
;;; MIT CLIM 2.1 Patches (from FV:CODE;CLIM-2-1-PATCHES.LISP.1).




(SCT:FILES-PATCHED-IN-THIS-PATCH-FILE 
  "HTTP:SERVER;CLASS.LISP.16"
  "HTTP:SERVER;URL.LISP.335"
  "HTTP:SERVER;SERVER.LISP.745"
  "HTTP:SERVER;SERVER.LISP.747"
  "HTTP:SERVER;HTTP-CONDITIONS.LISP.156")


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;CLASS.LISP.16")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Syntax: Ansi-Common-Lisp; Base: 10; Mode: lisp; Package: http-*-")

(defclass uri-resolver-mixin () ()
  (:documentation "Provides URI resolution service capabilities."))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;CLASS.LISP.16")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Syntax: Ansi-Common-Lisp; Base: 10; Mode: lisp; Package: http-*-")

(defclass server
          (uri-resolver-mixin proxy-server-mixin server-authentication-mixin server-logging-mixin basic-server-mixin)
    ()
  (:documentation "The HTTP server class."))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;URL.LISP.335")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: LISP; Syntax: Ansi-common-lisp; Package: (URL :use (future-common-lisp) :colon-mode :internal); Base: 10 -*-")

(defmethod local-url-p (url)
  (declare (ignore url))
  nil)

;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;SERVER.LISP.745")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: lisp; Syntax: ANSI-Common-Lisp; Package: http; Base: 10 -*-")

(SCL:FUNDEFINE 'INVOKE-PROXY-SERVICE)

;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;SERVER.LISP.745")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: lisp; Syntax: ANSI-Common-Lisp; Package: http; Base: 10 -*-")

;;;------------------------------------------------------------------- 
;;;
;;; PROXY METHODS
;;;

(define-generic invoke-proxy-service (server uri method http-version)
  (:documentation "Top-level entry point for proxy service."))

;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;SERVER.LISP.745")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: lisp; Syntax: ANSI-Common-Lisp; Package: http; Base: 10 -*-")

(defmethod invoke-proxy-service :around ((server proxy-server-mixin) uri method http-version)
  (with-subnet-access-control
    ((server-address server) (or *proxy-subnets* *secure-subnets*) 
     :deny-subnets *disallowed-subnets*
     :rejection-form (error 'access-forbidden :method method :url uri))
    (call-next-method server uri method http-version)))

;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;SERVER.LISP.745")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: lisp; Syntax: ANSI-Common-Lisp; Package: http; Base: 10 -*-")

(defun %execute-request (server request stream)
  (declare (optimize (speed 3)))
  (flet ((invoke-local-service (server uri-string method http-version)
           (multiple-value-bind (request-context bind-context-p)
               (request-local-context uri-string http-version *headers*)
             (setf (server-url-string server) (merge-url uri-string request-context))
             (if bind-context-p
                 (with-virtual-host-local-context (request-context)
                   (invoke-server-method server method http-version))
                 (invoke-server-method server method http-version)))))
    (declare (inline invoke-local-service))
    (multiple-value-bind (method uri-string http-version)
        (parse-request request)
      (unless (and method uri-string http-version)
        (error 'bad-syntax-provided :method method :url uri-string
               :format-string "Bad HTTP Request: ~S"
               :format-args (list request)))
      (unless (member http-version '(:http/1.1 :http/1.0 :http/0.9))
        (error 'http-version-not-supported :url uri-string
               :format-string "The server does not support ~A."
               :format-args (list http-version)))
      (setf (server-method server) method
            (server-http-version server) http-version
            ;; anything other than 200 must reset the status value.
            (server-status server) 200)
      (without-connection-overflows (uri-string)
        (with-headers (stream)
          ;; Remember these for logging purposes
          (setf (server-headers server) *headers*)
          (cond ;; scheme prefixed URL Proxy path
            ((url:scheme-prefixed-url-p uri-string)
             (setf (server-url-string server) uri-string)
             (multiple-value-bind (uri)
                 (intern-url uri-string :if-does-not-exist :uninterned)
               (cond  ;; Actually a local reference, start over as 
                 ((url:local-url-p uri)
                  (invoke-local-service server uri-string method http-version))
                 (*proxy-service*
                  (setf (server-url server) uri)
                  (invoke-proxy-service server uri method http-version))
                 (t (error 'access-forbidden 
                           :format-string "HTTP Proxy service is currently unavailable on ~A (~D)." 
                           :format-args (list (local-host-domain-name) (server-host-local-port server))
                           :method method :url uri)))))
            ;; Standard path, call the primary server method.
            (t (invoke-local-service server uri-string method http-version)))))))) 


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;SERVER.LISP.747")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: lisp; Syntax: ANSI-Common-Lisp; Package: http; Base: 10 -*-")

(defmethod invoke-proxy-service ((server proxy-server-mixin) uri method http-version)
  (declare (ignore uri http-version))
  (error 'method-not-allowed :method method :url (server-url-string server)))


;========================
(SCT:BEGIN-PATCH-SECTION)
(SCT:PATCH-SECTION-SOURCE-FILE "HTTP:SERVER;HTTP-CONDITIONS.LISP.156")
(SCT:PATCH-SECTION-ATTRIBUTES
  "-*- Mode: LISP; Syntax: ANSI-Common-Lisp; Package: http; Base: 10; Default-character-style: (:fix :roman :normal) -*-")

(defun %report-status-message (url reason stream &optional report)
  (with-html-document (:declare-dtd-version-p t :stream stream)
    (with-document-preamble (:stream stream)
      (declare-title reason :stream stream))
    (with-standard-document-body (:stream stream)
      (with-section-heading (reason :stream stream)
        (horizontal-line :stream stream)
        (with-paragraph (:stream stream)
          (cond (report
		 (html:with-verbatim-text (:fresh-line nil :stream stream)
		   (html:write-string-quoting-specials report stream)))
                (url (fast-format stream "~A for URI ~A"
                                  reason (typecase url
                                           (url (url:name-string url))
                                           (t url))))
                (t (let ((mail-url (concatenate 'string "mailto:" (server-mail-address))))
                     (declare (dynamic-extent mail-url))
                     (fast-format stream "~&Error ~D not properly reported.~&Please advise the server maintainer at: "
                                  (server-status *server*))
                     (note-anchor (server-mail-address) :reference mail-url :stream stream)))))
        (horizontal-line :stream stream)
        (cl-http-signature stream)))))

