;;; -*- Mode: LISP; Syntax: Zetalisp; Package: ZWEI; Base: 10 -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

;;; AARRAY compatibility package.
;;; This file exists only for compatibility with 7.0 and 7.1.
;;; New programs should use the substrate in SYS:SYS;AARRAY.

;;; Required conversion of old programs to new programs:
;;;  All usages of ARRAY-LEADER, AREF, ASET, and other functions which
;;;  violate the abstraction of AARRAYs should be replaced with the appropriate
;;;  abstraction function.  For example,
;;;    replace MAKE-ARRAY		with SI:MAKE-AARRAY
;;;    replace (ARRAY-LEADER x 1)	with SI:AARRAY-SORTED-P

;;; Typical additional conversions to enhance performance:
;;;    replace STRING-IN-AARRAY-P	with SI:AARRAY-LOOKUP
;;;    replace MERGE-COMPLETION-AARRAY  with SI:MERGE-AARRAY
;;;    replace other functions as suggested in compiler warnings.

;;; For additional information, consult documentation in SYS:SYS;AARRAY.

(COMPILER:MAKE-OBSOLETE INSERT-AARRAY-ITEM "use SI:AARRAY-INSERT")
(DEFUN INSERT-AARRAY-ITEM (AARRAY STRING DATUM &OPTIONAL WHOLE-CDR)
  (SI:AARRAY-INSERT AARRAY (STRING STRING) DATUM WHOLE-CDR))

(COMPILER:MAKE-OBSOLETE DELETE-AARRAY-ITEM "use SI:AARRAY-DELETE")
(DEFUN DELETE-AARRAY-ITEM (AARRAY STRING DATUM &OPTIONAL WHOLE-CDR)
  (SI:WITH-AARRAY-LOCKED AARRAY
    (SI:AARRAY-DELETE AARRAY (STRING STRING) DATUM WHOLE-CDR)))

(COMPILER:MAKE-OBSOLETE DELETE-AARRAY-ITEMS-BY-NAME "use SI:AARRAY-DELETE-BY-NAME")
(DEFF DELETE-AARRAY-ITEMS-BY-NAME 'SI:AARRAY-DELETE-BY-NAME)

(COMPILER:MAKE-OBSOLETE DELETE-AARRAY-ITEM-INTERNAL "use SI:AARRAY-DELETE-INTERNAL")
(DEFF DELETE-AARRAY-ITEM-INTERNAL 'SI:AARRAY-DELETE-INTERNAL)

(COMPILER:MAKE-OBSOLETE SORT-COMPLETION-AARRAY "use SI:SORT-AARRAY")
(DEFF SORT-COMPLETION-AARRAY 'SI:SORT-AARRAY)

(COMPILER:MAKE-OBSOLETE STRING-IN-AARRAY-P "use SI:AARRAY-LOOKUP")
(DEFUN STRING-IN-AARRAY-P (STRING AARRAY)
  (SI:WITH-AARRAY-LOCKED AARRAY
    (SI:SORT-AARRAY AARRAY)
    (SI:SORTED-AARRAY-LOOKUP (STRING STRING) AARRAY)))

(COMPILER:MAKE-OBSOLETE MERGE-AND-ELIMINATE-DUPLICATES "use CL:UNION")
(DEFUN MERGE-AND-ELIMINATE-DUPLICATES (A B)
  (CL:UNION A B :TEST #'ZL:EQUAL))

(COMPILER:MAKE-OBSOLETE SHIFT-SUBARRAY-LATER "use SI:SHIFT-SUBARRAY-LATER")
(DEFF SHIFT-SUBARRAY-LATER 'SI:SHIFT-SUBARRAY-LATER)

(COMPILER:MAKE-OBSOLETE MERGE-AARRAY-DUPLICATES "use SI:MERGE-AARRAY-DUPLICATES")
(DEFF MERGE-AARRAY-DUPLICATES 'SI:MERGE-AARRAY-DUPLICATES)

(COMPILER:MAKE-OBSOLETE AARRAY-SORTED-P "use SI:AARRAY-SORTED-P")
(DEFF AARRAY-SORTED-P 'SI:AARRAY-SORTED-P)

(COMPILER:MAKE-OBSOLETE MERGE-COMPLETION-AARRAY
"Merging of AARRAYs is usually not necessary.
See SYS:SYS;AARRAY for details.")
(DEFUN MERGE-COMPLETION-AARRAY (AARRAY1 AARRAY2)
  (SI:WITH-AARRAY-LOCKED AARRAY1
    (SI:WITH-AARRAY-LOCKED AARRAY2
      (LET ((FILL-POINTER1 (FILL-POINTER AARRAY1))
	    (LENGTH1 (ARRAY-LENGTH AARRAY1))
	    (FILL-POINTER2 (FILL-POINTER AARRAY2)))
	(COND ((ZEROP FILL-POINTER1) AARRAY2)
	      ((ZEROP FILL-POINTER2) AARRAY1)
	      (T ;; Maximally conservative; the aarrays should already be sorted.
	       (UNLESS (SI:AARRAY-SORTED-P AARRAY1)
		 (SETQ AARRAY1 (SI:SORT-AARRAY AARRAY1)))
	       (UNLESS (SI:AARRAY-SORTED-P AARRAY2)
		 (SETQ AARRAY2 (SI:SORT-AARRAY AARRAY2)))
	       ;; These can change from sorting...
	       (SETQ FILL-POINTER1 (FILL-POINTER AARRAY1)
		     FILL-POINTER2 (FILL-POINTER AARRAY2))
	       (WHEN (> (+ FILL-POINTER1 FILL-POINTER2) LENGTH1)
		 (SETQ AARRAY1 (ADJUST-ARRAY-SIZE AARRAY1
						  (+ FILL-POINTER1 FILL-POINTER2 50.))))
	       ;; The old function always merged duplicates.
	       (SI:MERGE-AARRAYS AARRAY1 AARRAY2 NIL)
	       ;; Set the state to sorted.  Get the real fill-pointer set by
	       ;; MERGE-SINGLE-AARRAY.
	       (SETF (SI:AARRAY-SORT-MAX AARRAY1) (FILL-POINTER AARRAY1))
	       AARRAY1))))))
