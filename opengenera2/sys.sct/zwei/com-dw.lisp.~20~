;;; -*- Mode: LISP; Syntax: Zetalisp; Package: ZWEI; Base: 10 -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

;;; commands related to the presentation type system and any other DW stuff.

(DEFCOM COM-SHOW-PRESENTATION-TYPE "Shows info about a presentation type.
Presentation type name symbols in the buffer are mouse sensitive." ()
  (READ-COMMAND-AND-EXECUTE DW::SHOW-PRESENTATION-TYPE
			    (TYPEIN-LINE-ACCEPT
			      'DW:PRESENTATION-TYPE-NAME
			      :DEFAULT (MULTIPLE-VALUE-BIND (PT REAL)
					   (PRESENTATION-TYPE-NAME-AROUND-BP (POINT))
					 (IF REAL PT
					     (DW:PRESENTATION-TYPE-DEFAULT
					       'DW:PRESENTATION-TYPE-NAME))))))

(DEFUN SHOW-PRESENTATION-TYPE (PTN)
  (FORMAT T "~&Presentation type ~S:" PTN)
  (CP:EXECUTE-COMMAND "Show Presentation Type" PTN))

D,#TD1PsT[Begin using 006 escapes](1 0 (NIL 0) (NIL :ITALIC NIL) "CPTFONTI");;;Should this be someplace else?
0(SETF (DW:MOUSE-CHAR-FOR-GESTURE 'EDITOR-DESCRIBE) #\M-MOUSE-MIDDLE)
(SETF (DW:MOUSE-CHAR-FOR-GESTURE 'EDITOR-PRESENTATION-MENU) #\M-MOUSE-RIGHT)

(DEFINE-PRESENTATION-TO-EDITOR-COMMAND-TRANSLATOR SHOW-PRESENTATION-TYPE
  (DW:PRESENTATION-TYPE-NAME "Show Presentation Type" *STANDARD-COMTAB*
			     :GESTURE EDITOR-DESCRIBE
			     1;; only do this for things with explicit
0			     1;; presentation information, to avoid shadowing
0			     1;; all that useful flavor information.
0			     :TESTER ((OBJECT &REST IGNORE) (AND (SYMBOLP OBJECT)
					  (DW::SYMBOL-PRESENTATION-TYPE-DESCRIPTOR OBJECT))))
  (OBJECT)
  `(SHOW-PRESENTATION-TYPE ,OBJECT))

;;; no major mode, only sensible for Lisp.
(DEFUN PRESENTATION-TYPE-NAME-AROUND-BP (BP)
  (DECLARE (VALUES PRESENTATION-TYPE-NAME PRESENTATION-TYPE-NAME-FOR-REAL-P))
  (LET* ((BP1 (FORWARD-ATOM (FORWARD-CHAR BP 1 T) -1 T))
	 (BP2 (FORWARD-ATOM BP1))
	 VAR)
    (IF (NULL BP2) (RETURN-FROM PRESENTATION-TYPE-NAME-AROUND-BP NIL))
    (CONDITION-CASE (ERROR)
	 (WITH-INPUT-FROM-STRING (S (BP-LINE BP1) (BP-INDEX BP1) (BP-INDEX BP2))
	   (SETQ VAR (READ S)))
       (SYS:READ-ERROR (RETURN-FROM PRESENTATION-TYPE-NAME-AROUND-BP NIL)))
    (AND (SYMBOLP VAR) (DW::SYMBOL-PRESENTATION-TYPE-DESCRIPTOR VAR) (VALUES VAR T))))

(DEFCOM COM-SHOW-PRESENTATION-ARGLIST "Shows the argument list of a presentation type.
With a numeric argument, it reads the presentation type name from the minibuffer."
	()
  (MULTIPLE-VALUE-BIND (P-PT VALID-P)
      (PRESENTATION-TYPE-NAME-AROUND-BP (POINT))
    (LET ((PT (COND ((AND (NOT *NUMERIC-ARG-P*) VALID-P) P-PT)
		    ((NOT *NUMERIC-ARG-P*) (BARF))
		    (T 
		     (TYPEIN-LINE-ACCEPT
		       'DW:PRESENTATION-TYPE-NAME
		       :DEFAULT (IF VALID-P P-PT
				    (DW:PRESENTATION-TYPE-DEFAULT
				      'DW:PRESENTATION-TYPE-NAME)))))))
    (TYPEIN-LINE "~S: " PT)
    (PRINT-ARGLIST-INTERNAL (DW::PRESENTATION-TYPE-ARGLIST PT) *TYPEIN-WINDOW*)
    (SEND-IF-HANDLES *TYPEIN-WINDOW* :TYPEOUT-STAYS))
  DIS-NONE))

;;; no major mode, only sensible for Lisp.
(DEFUN RESOURCE-NAME-AROUND-BP (BP)
  (DECLARE (VALUES RESOURCE-NAME))
  (LET* ((BP1 (FORWARD-ATOM (FORWARD-CHAR BP 1 T) -1 T))
	 (BP2 (FORWARD-ATOM BP1))
	 VAR)
    (IF (NULL BP2) (RETURN-FROM RESOURCE-NAME-AROUND-BP NIL))
    (CONDITION-CASE (ERROR)
	 (WITH-INPUT-FROM-STRING (S (BP-LINE BP1) (BP-INDEX BP1) (BP-INDEX BP2))
	   (SETQ VAR (READ S)))
       (SYS:READ-ERROR (RETURN-FROM RESOURCE-NAME-AROUND-BP NIL)))
    (AND (SYMBOLP VAR) (GET VAR 'DEFRESOURCE) VAR)))

(DEFCOM COM-SHOW-RESOURCE-ARGLIST "Shows the argument list of a resource.
With a numeric argument, it reads the resource name from the minibuffer."
	()
  (LET ((RN (COND ((AND (NOT *NUMERIC-ARG-P*)
			(RESOURCE-NAME-AROUND-BP (POINT))))
		  ((NOT *NUMERIC-ARG-P*) (BARF))
		  (T 
		   (TYPEIN-LINE-ACCEPT
		     'SI:RESOURCE-NAME
		     :DEFAULT (OR (RESOURCE-NAME-AROUND-BP (POINT))
				  (DW:PRESENTATION-TYPE-DEFAULT
				    'SI:RESOURCE-NAME)))))))
    (LET ((DESCRIPTOR (GET RN 'DEFRESOURCE)))
      (TYPEIN-LINE "~S: " RN)
      (WHEN (SI:RESOURCE-PARAMETIZER DESCRIPTOR)
	(PRINT-ARGLIST-INTERNAL (ARGLIST (SI:RESOURCE-PARAMETIZER DESCRIPTOR))
				*TYPEIN-WINDOW*))))
  (SEND-IF-HANDLES *TYPEIN-WINDOW* :TYPEOUT-STAYS)
  DIS-NONE)

(DEFINE-PRESENTATION-TO-EDITOR-COMMAND-TRANSLATOR SHOW-RESOURCE
  (SI:RESOURCE-NAME "Show Resource" *STANDARD-COMTAB*
		    :GESTURE EDITOR-DESCRIBE)
  (OBJECT)
  `(SI:DESCRIBE-RESOURCE ,OBJECT))

(DEFINE-PRESENTATION-TO-EDITOR-COMMAND-TRANSLATOR STANDARD-PRESENTATION-MENU
  (T "Presentation Menu" *STANDARD-COMTAB* :GESTURE EDITOR-PRESENTATION-MENU
     :DOCUMENTATION "Presentation Menu"
     :TESTER ((IGNORE) T)
     :DO-NOT-COMPOSE T
     ;; This (2 0 (NIL 0) (NIL :BOLD NIL) "CPTFONTCB"):suppress-highlighting0 is needed in order to prevent "box conflict"
     ;; between this gesture (m-Right) and the Edit-Definition (m-Left) gesture.
     :SUPPRESS-HIGHLIGHTING T
     :DEFINES-MENU T
     :MENU NIL)
  (IGNORE &REST ARGS)
  ;; This return-from makes the correct :already-blip value get returned too, instead
  ;; of the blip being interpreted as the data portion of another blip.
  (RETURN-FROM STANDARD-PRESENTATION-MENU
    (CL:APPLY #'DW::CALL-PRESENTATION-MENU 'T ARGS)))

(DEFINE-PRESENTATION-TO-EDITOR-COMMAND-TRANSLATOR SHOW-INITIALIZATION-LIST
  (SI:INITIALIZATION-LIST-NAME "Show Initialization List"
			       *STANDARD-COMTAB* :GESTURE EDITOR-DESCRIBE)
  (LIST-NAME-SYMBOL)
  `(CP::COM-SHOW-INITIALIZATION-LIST ,LIST-NAME-SYMBOL))
