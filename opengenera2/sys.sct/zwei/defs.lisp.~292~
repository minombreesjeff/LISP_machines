;;; -*- Syntax: Zetalisp; Mode: LISP; Package: ZWEI; Base: 8 -*-
;;; ZWEI Definitions (ZWEI Was EINE Initially)

;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

(DEFVAR *EDITOR-PACKAGE* PACKAGE)	;One loaded into

;Area for lines, to keep them compact in address space.
(DEFVAR EDITOR-LINE-AREA (MAKE-AREA :NAME 'EDITOR-LINE-AREA :GC :DYNAMIC))

;Area for nodes (intervals) that stay around permanently, such as section nodes.
;Bps that act as node boundaries go here also.
;Zmacs buffers have their own area to make List Buffers faster.
(DEFVAR EDITOR-NODE-AREA (MAKE-AREA :NAME 'EDITOR-NODE-AREA :GC :DYNAMIC))

(DEFVAR *BP-AREA* WORKING-STORAGE-AREA)

;;; Global parameters.  These variables will have global values,
;;; and any editor may bind or not bind them as it pleases.
;;; NOTE: Those specials that are ZWEI variables are defined with DEFVARIABLE
;;; in the MACROS file.  They are of the same status as these variables.
(DEFVAR *GLOBAL-INITIALIZATION-LIST*)
(SETQ *GLOBAL-INITIALIZATION-LIST* NIL)
(DEFPROP DEFGLOBAL DEFVAR DEFINITION-FUNCTION-SPEC-TYPE)

(DEFMACRO DEFGLOBAL (VAR &OPTIONAL (INITIAL-VALUE NIL IVP))
  `(PROGN
     (DEFVAR ,VAR)
     ,@(AND IVP FS:THIS-IS-A-PATCH-FILE
	    `((SETQ ,VAR ,INITIAL-VALUE)))
     ,@(AND IVP
	    `((PUSH (CONS ',VAR ',INITIAL-VALUE) *GLOBAL-INITIALIZATION-LIST*)))))

(DEFGLOBAL *TICK* 0)			;A time-stamp, used for redisplay.
(DEFGLOBAL *LINE-AREA* EDITOR-LINE-AREA);The area in which to make lines.
					;Very few lines become garbage, so put them in
					;their own area.
(DEFGLOBAL *NODE-AREA* EDITOR-NODE-AREA);Where to put section nodes
(DEFGLOBAL *WORD-SYNTAX-TABLE*)		;These are 1-d arrays indexed by the
(DEFGLOBAL *LIST-SYNTAX-TABLE*)		;%%CH-CHAR, holding each chararcters syntax.
(DEFGLOBAL *CL-LIST-SYNTAX-TABLE*)	;For common lisp
(DEFGLOBAL *ATOM-WORD-SYNTAX-TABLE*)	;*WORD-SYNTAX-TABLE* for Atom Word Mode.
(DEFGLOBAL *C-WORD-SYNTAX-TABLE*)	;*WORD-SYNTAX-TABLE* for C Mode.
(DEFGLOBAL *PNAME-WORD-SYNTAX-TABLE*)	;atom-word syntax table with colon a delimiter
(DEFGLOBAL *UTILITY-PACKAGE*)		;A random hash table of things like qregs.
(DEFGLOBAL *REG-LIST* NIL)		;List of registers currently defined.
(DEFGLOBAL *STANDARD-COMTAB*)		;The standard set of harmless ZWEI commands.
(DEFGLOBAL *STANDARD-CONTROL-X-COMTAB*)	;Similarly, the simple control-X commands.
(DEFGLOBAL *COMPLETING-READER-COMTAB*)	;Comtab for the completing reader environment.
(DEFGLOBAL *SELECT-BUFFER-COMTAB*)      ;Comtab for the SELECT-BUFFER command.
(DEFGLOBAL *PATHNAME-READING-COMTAB*)	;Comtab for reading pathnames in mini-buffer.
(DEFGLOBAL *CONTROL-R-COMTAB*)		;Comtab for recursive edits on the same buffer.
(DEFGLOBAL *RECURSIVE-EDIT-COMTAB*)	;Comtab for recursive edits on a new buffer.
(DEFGLOBAL *STANDALONE-COMTAB*)		;Comtab for simple standalone editors
(DEFGLOBAL *PATCH-COMMENT-COMTAB*)	;Comtab for the quasi-standalone patch-comment editor.
(DEFGLOBAL *MINI-IE-COMTAB*)		;Comtab for the minibuffer editor
(DEFGLOBAL *WORD-ABBREV-TABLE*)		;For each character, non-0 => this expands abbrevs.
(DEFGLOBAL *PREVIOUS-MODE-LINE* NIL)	;List of strings that make up the state of mode line.
(DEFGLOBAL *MODE-LINE-MORE-ABOVE-BELOW*);NIL or e.g. "[More above]"
(DEFGLOBAL *TAB-STOP-BUFFER*)		;Buffer used by tab to tab stop

;;; Editor histories
;;; All of these histories should be mentioned in the BEFORE-COLD initialization
;;; named "Reset editor histories" in SYS:ZWEI;HISTORY

(DEFGLOBAL *KILL-HISTORY* (MAKE-INSTANCE 'INTERVAL-HISTORY ':NAME "Kill"))
(DEFVAR *KILL-HISTORY-USER* NIL)	;Last command loop to push on kill history
(DEFGLOBAL *DEFAULT-HISTORY* (MAKE-INSTANCE 'HISTORY ':NAME "Default command argument"))
(DEFGLOBAL *REPLACE-HISTORY* (MAKE-INSTANCE 'HISTORY ':NAME "Replace String"))
;The presentation type for buffer knows about this one, since it's a special kind.
(DEFGLOBAL *BUFFER-HISTORY* (MAKE-INSTANCE 'BUFFER-HISTORY ':NAME "Buffer"))
(DEFGLOBAL *PATHNAME-HISTORY* (DW::FIND-ACCEPT-HISTORY 'FS:PATHNAME))
(DEFGLOBAL *SEARCH-HISTORY* (MAKE-INSTANCE 'HISTORY ':NAME "Search"))
(DEFGLOBAL *SEARCH-RING* NIL)		;List of strings.

(DEFGLOBAL *CONTEXT-HISTORY* *DEFAULT-HISTORY*)	;Argument to EDIT-IN-MINI-BUFFER

(DEFGLOBAL *LISP-PARSE-PREPARSED-FLAG* NIL)
						;If this is T,
						; LISP-PARSE-FROM-DEFINITION assumes
					;that the lines are already parsed.

(DEFGLOBAL *MINI-BUFFER-COMMAND-IN-PROGRESS* NIL)
(SI:REMEMBER-VARIABLE-BINDING '*MINI-BUFFER-COMMAND-IN-PROGRESS* NIL 'SI:*WARM-BOOT-BINDINGS*)
(DEFVAR *MINI-BUFFER-TO-BE-SAVED*)
(DEFVAR *MINI-BUFFER-USING-COMMAND-LOOP*)
;;; Mouse-related variables.
(DEFGLOBAL *MOUSE-X*)			;Position of the mouse for the previous command
(DEFGLOBAL *MOUSE-Y*)			;relative to *WINDOW*
#||
(DEFVAR *MOUSE-X-OFFSET* 8)			;Three globals removed 11/12/86 17:09:50
(DEFVAR *MOUSE-Y-OFFSET* 0)			; in favor of modular per-window setup
(DEFGLOBAL *MOUSE-FONT-CHAR* #\MOUSE:NE-ARROW)	; for ZWEI windows.
(DEFVAR *GLOBAL-MOUSE-CHAR-BLINKER*)
(DEFVAR *GLOBAL-MOUSE-CHAR-BLINKER-HANDLER*)
(DEFVAR *MOUSE-P*)
(DEFVAR *MOUSE-BLINKER*)
(DEFVAR *MOUSE-CHAR-BLINKER*)
(DEFVAR *MOUSE-BOX-BLINKER*)
(DEFVAR *GLOBAL-ATOM-UNDER-MOUSE-HANDLER*)
(DEFVAR *GLOBAL-MOUSE-CHAR-BLINKER-DOCUMENTATION-STRING*)
(DEFVAR *GLOBAL-MOUSE-CHAR-BLINKER-AARRAY*)
(DEFVAR *GLOBAL-MOUSE-CHAR-BLINKER-IMPOSSIBLE-IS-OK-P*)
(DEFVAR *GLOBAL-MOUSE-CHAR-BLINKER-MUST-BE-FUNCTION*)
||#
(DEFVAR *MOUSE-CLICK-ALWAYS-SELECTS* NIL)
(DEFGLOBAL *NON-MOUSE-*WINDOW**)	;what *WINDOW* was before mouse-command bound it
(DEFGLOBAL *PATHNAME-DEFAULTS*)		;Default file names
(DEFGLOBAL *AUX-PATHNAME-DEFAULTS*)	;Auxiliary default.  Obsolete, now not
					; used by any standard commands.
(DEFGLOBAL *WORD-ABBREV-FILE-NAME* NIL)	;Last file used for word abbrevs
(DEFGLOBAL *WORD-ABBREV-FILE-TICK* -1)	;Time for that file
(DEFGLOBAL *WORD-ABBREV-TICK* -1)	;Time last modified

(DEFVAR *CURRENT-COMMAND-LOOP*)

(SETQ *GLOBAL-INITIALIZATION-LIST* (NREVERSE *GLOBAL-INITIALIZATION-LIST*))

;;; DOC related items.

(CL:PROCLAIM '(SPECIAL *COM-DOCUMENTATION-ALIST*))

;;; Redisplay levels.  These are symbolic constants.
;;; They have global values and should never be bound.
(DEFCONSTANT DIS-NONE 0)		;No redisplay needed.
(DEFCONSTANT DIS-MARK-GOES 1)		;No redisplay needed except maybe removing
					;region underlining.
(DEFCONSTANT DIS-BPS 2)			;Point and mark may have moved, but text is unchanged.
(DEFCONSTANT DIS-LINE 3)		;Text in one line may have changed.
					;WINDOW-REDISPLAY-LINE is that line.
					;WINDOW-REDISPLAY-INDEX says where
					;in the line changes start.
(DEFCONSTANT DIS-TEXT 4)		;Any text might have changed.
(DEFCONSTANT DIS-ALL 5)			;Global parameters of the window have changed.
					;Clean the window and redisplay all lines
					;from scratch.

(DEFPROP DIS-NONE	T COMPILER:DO-NOT-RECORD-OPEN-CODING)
(DEFPROP DIS-MARK-GOES	T COMPILER:DO-NOT-RECORD-OPEN-CODING)
(DEFPROP DIS-BPS	T COMPILER:DO-NOT-RECORD-OPEN-CODING)
(DEFPROP DIS-LINE	T COMPILER:DO-NOT-RECORD-OPEN-CODING)
(DEFPROP DIS-TEXT	T COMPILER:DO-NOT-RECORD-OPEN-CODING)
(DEFPROP DIS-ALL	T COMPILER:DO-NOT-RECORD-OPEN-CODING)

;;; Syntax codes in *LISP-SYNTAX-TABLE*
(DEFCONSTANT LIST-ALPHABETIC 0)		;Part of an atom.
(DEFCONSTANT LIST-DELIMITER 1)		;Separates things but has no other significance.
(DEFCONSTANT LIST-SLASH 2)		;Quotes the following character.
(DEFCONSTANT LIST-DOUBLE-QUOTE 3)	;Starts a grouping terminated by another of itself.
(DEFCONSTANT LIST-SINGLE-QUOTE 4)	;Tacks onto the front of a sexp to make another sexp.
(DEFCONSTANT LIST-CLOSE 5)		;Closeparentheses
(DEFCONSTANT LIST-OPEN 6)		;Openparentheses
(DEFCONSTANT LIST-COMMENT 7)		;Starts a comment.
(DEFCONSTANT LIST-COLON 10)		;End of package prefix
(DEFCONSTANT LIST-VERTICAL-BAR 11)      ;see CLtL, after all

;;; Syntax codes in *WORD-SYNTAX-TABLE*.
(DEFCONSTANT WORD-ALPHABETIC 0)		;Part of words.
(DEFCONSTANT WORD-DELIMITER 1)		;Separates words.

(UNLESS (= LIST-DELIMITER WORD-DELIMITER)
  (ERROR "LIST-DELIMITER and WORD-DELIMITER must be equal"))

;;; Many Zwei global variables

(DEFVAR EDITOR-MAIL-TEXT-SEPARATOR "--Text follows this line--"
  "Special string that separates headers and text of a message draft, when alone on a line.")

(DEFVAR *ENTER-COMMENT-HOOK* NIL "Standard hook symbol for indent-for-comment.")
(DEFVAR *EXIT-COMMENT-HOOK* NIL "Standard hook symbol for indent-for-comment.")
(DEFVAR *REVERT-FILE-NOT-FOUND-IS-AN-ERROR* NIL)
					; flag to tell (FILE-BUFFER-MIXIN :REVERT)
					; that file-not-found is an
					; error.  If it is a string,
					; use that as the error message header.
(DEFVAR *SET-ATTRIBUTE-UPDATES-LIST* :ASK)

(DEFVAR *ZMACS-BUFFER-AREA* (MAKE-AREA ':NAME '*ZMACS-BUFFER-AREA*))
(DEFVAR *ZMACS-BUFFER-LIST*)		; This is a list of all buffers.
(DEFVAR *ZMACS-BUFFER-ALIST*)		; Associates buffer "tags" to lists of buffers to
					; enable faster finding of special buffers.
(DEFVAR *ZMACS-BUFFER-HISTORY*)		; See UPDATE-BUFFER-HISTORY
(DEFVAR *ZMACS-BUFFER-COUNTER* 0)	; Used to generate new buffer names.
(DEFVAR *ZMACS-CALLER-WINDOW* NIL)		;Window selected when ZMACS was entered
(DEFVAR *ZMACS-COMTAB*)			; Main comtab for ZMACS
(DEFVAR *ZMACS-CONTROL-X-COMTAB*)	; Control-X prefix comtab for ZMACS.
(DEFVAR *ZMACS-MAIN-FRAME*)		; Superior to initial ZMACS windows
(DEFVAR *ZMACS-BUFFER-NAME*)		; This is for the ZMACS mode line
(DEFVAR *ZMACS-BUFFER-VERSION-STRING*)	; Ditto
(DEFVAR *ZMACS-COMPLETION-AARRAY*)	; As is this for (m-.)
(DEFVAR *ZMACS-COMMAND-LOOP* NIL)	; The command-loop closure
(DEFVAR *ZMACS-STREAM*)			; Recording stream
(DEFVAR *ZMACS-TAG-TABLE-USER* NIL)	; current tag table
(DEFVAR *ZMACS-WINDOW-PROCESS* NIL)	; Process to run ZMACS in
#||
(DEFVAR *TYPEOUT-COMMAND-ALIST* NIL)	; Typeout window's "menu" handling (in ZMacs)
(DEFVAR *ZWEI-TYPEOUT-COMMAND-ALIST* NIL)	; Same for non-Zmacs Zwei windows
||#
(DEFVAR *ZMACS-POSSIBILITIES-BUFFERS* NIL);For COM-NEXT-POSSIBILITY
(DEFVAR *ZMACS-DEFINITIONS-BUFFER* NIL)		;For EDIT-DEFINITION
(DEFVAR *ZMACS-FORCE-FUNDAMENTAL-MODE* NIL) ;For Find File in Fundamental Mode
;;; Version control setq's this to :VC-BUFFERS-ONLY to get the buffer name
;;; out of the mode line for VC buffers.
(CL:DEFPARAMETER *ALWAYS-LABEL-ZMACS-WINDOWS* NIL "Use window label instead of mode line
   for buffer name string.  Values are NIL, :VC-BUFFERS-ONLY, :ALWAYS.")

;;; Keys are strings and pathnames; values are buffers
;;; Test is ZL:EQUAL, which is case-insensitive for strings
(DEFVAR *ZMACS-BUFFER-NAME-TABLE* (CL:MAKE-HASH-TABLE :TEST #'ZL:EQUAL))

(DEFVAR *ZMACS-COMMAND-LOOPS* NIL)	; All of the command loops
(DEFVAR *ENFORCE-SINGLE-ZMACS-PROCESS* NIL)

;;; Modifier to certain methods telling them not to send a request back to the editor.
(DEFVAR *EDITOR-ALREADY-KNOWS* NIL)

;;; Bind this to NIL if you are deleting structural diagrams intentionally.
;;; For example, the Converse command to delete a conversation binds this.
(DEFVAR *ENABLE-STRUCTURAL-DIAGRAMS* T)

;;; The current patch object.  Used by various commands as well as PATED.
(DEFVAR *CURRENT-PATCH* NIL)			;this is shared by all editors!

;;; ZMAIL variables used in ZWEI
;;; since ZMAIL uses fancy macros to initialize USER-OPTIONS, the definitions
;;; cannot be moved here wholesale.  So all we do is declare them special
;;; to get correct references.
;;; defvar is NOT used, since this is not the source file of record.

(CL:PROCLAIM '(SPECIAL *REQUIRE-SUBJECTS*))
(CL:PROCLAIM '(SPECIAL *DUMMY-DRAFT-LIST*))


;;; Definitions of the ZWEI data structures.

;;; An editor is a command loop and the associated variables.
;;; Since almost all the code in the editor runs within one, all their
;;; variables are declared special.

(DEFGENERIC WITH-SPECIALS-INTERNAL (EDITOR CONTINUATION)
  (DECLARE (SYS:DOWNWARD-FUNARG CONTINUATION)))

(DEFFLAVOR EDITOR
       (
	*INTERVAL*			;The interval which you are editing
	*WINDOW*			;The default window.
	*COMTAB*			;Current comtab (for Install Command to hack).
	(*STYLE* 0)			;Current character style for self-inserting.
	(*NUMERIC-ARG* 1)		;The value of the numeric argument, or 1.
	(*NUMERIC-ARG-P* NIL)		;T if there is a numeric argument.
	*NUMERIC-ARG-N-DIGITS*		;Number of characters typed to get this command's arg
	(*LAST-COMMAND-CHAR* NIL)	;The character typed to get this command.
	(*CURRENT-COMMAND* NIL)		;The command (symbol) now being executed.
		;*CURRENT-COMMAND* is fairly bogus, this value is always NIL
	(*CURRENT-COMMAND-TYPE* NIL)	;The "type" (a symbol) of the current command.
	(*LAST-COMMAND-TYPE* NIL)	;The "type" of the last command executed.
	*CURRENT-YANK-HISTORY*		;The history that m-Y should use
	(*REAL-LINE-GOAL-XPOS* 0)	;Used by real-line commands.
	(*MARK-STAYS* NIL)		;Tells command loop whether to preserve region.
	(*CENTERING-FRACTION* *CENTER-FRACTION*);Tells redisplay where to recenter, if needed.
	*QUANTITY-MODE*			;Current MODE, also free var for the generic cmds.
	(*QUANTITY-MODE-SAVE* NIL)	;Array to save bindings if MODE feature is used.
		;*QUANTITY-MODE-SAVE* is bogus, never really used
	(*MODE-QUANTITY-NAME* NIL)	;This is for the mode line
	*IN-COM-DOC-P*			;T => We are inside COM-DOCUMENTATION.
	*REPEAT-DOC-P*			;T => COM-DOCUMENTATION is repeating what it did last.
		;*IN-COM-DOC-P* and *REPEAT-DOC-P* are bogus, setq'ed and never referenced,
		;only used as special variables, and only used in one function
	(*COM-DOC-LAST-CHAR* #/B)	;Last char typed to COM-DOCUMENTATION.
	(*STYLE-NAME* NIL)		;This is for the mode line
	(*MINI-BUFFER-COMMAND* NIL)	;Mini-buffer-using command in progress, using mini
					; buffer operated by some other EDITOR instance,
					; not pushed onto the mini-buffer-history yet.
	)
       ()
  (:INITABLE-INSTANCE-VARIABLES *COMTAB* *WINDOW*)
  :SPECIAL-INSTANCE-VARIABLES
  (:SPECIAL-INSTANCE-VARIABLE-BINDING-METHODS :INIT :EDIT WITH-SPECIALS-INTERNAL))

(DEFMETHOD (WITH-SPECIALS-INTERNAL EDITOR) (CONTINUATION)
  (FUNCALL CONTINUATION))

(DEFMACRO WITH-SPECIALS (EDITOR &BODY BODY)
  `(WITH-SPECIALS-INTERNAL ,EDITOR (SYS:NAMED-LAMBDA WITH-SPECIALS ()
				     (DECLARE (SYS:DOWNWARD-FUNCTION))
				     ,@BODY)))

;;; Bound at the start of a command by PROCESS-COMMAND-CHAR to (BP-LINE (POINT))
;;; so that a *POST-COMMAND-HOOK* can tell if POINT has moved off the line.
;;; Note that any use of this should take line merging/creation into consideration.
(DEFVAR *ORIGINAL-COMMAND-LINE*)

(DEFGENERIC EDITOR-MODE-LINE-LIST (EDITOR)
  "Accesses the mode line list of an editor.")

(DEFGENERIC (CL:SETF EDITOR-MODE-LINE-LIST) (EDITOR NEW-MODE-LINE-LIST)
  "Sets the mode line list of an editor.")

(DEFFLAVOR MINI-BUFFER-HISTORY () (HISTORY))

;;;Here's something you can call from outside
(DEFFLAVOR TOP-LEVEL-EDITOR
	((*MODE-LINE-LIST*
	   '("ZWEI " "(" *MODE-NAME-LIST*
	     (*MODE-QUANTITY-NAME* " <" *MODE-QUANTITY-NAME* ">")
	     ")"
	     (*STYLE-NAME* " " *STYLE-NAME*)
	     (*MODE-LINE-MORE-ABOVE-BELOW* "  " *MODE-LINE-MORE-ABOVE-BELOW*)))
	 (*MODE-LIST* NIL)			;List of modes in effect; see MODES >.
	 (*MAJOR-MODE*
	   (GET-MAJOR-MODE-ATTRIBUTE-FOR-BUFFER *DEFAULT-MAJOR-MODE*))	;Current
	 (*MODE-NAME-LIST* NIL)			;This is for the mode line
	 (*MACRO-LEVEL* NIL)			;This is for the mode line
	 *MODE-COMTAB*				;A sparse comtab for mode redefinitions
	 *MODE-CONTROL-X-COMTAB*		;Ditto, for control-X commands
	 *MODE-WORD-SYNTAX-TABLE*		;A syntax table for mode redefinitions
	 *MODE-LIST-SYNTAX-TABLE*		;A syntax table for mode redefinitions
	 (*USER-MODES-SET* NIL)			;Reset by logout
	 (*WINDOW-LIST* NIL)			;List of windows belonging to this editor
	 (*COMMAND-HOOK* NIL)			;List of functions to be applied to command char.
	 (*POST-COMMAND-HOOK* NIL)		;Same for after normal function has been done.
	 *TYPEOUT-WINDOW*			;The menu-like typeout window
	 *MODE-LINE-WINDOW*			;Where the mode line is displayed
	 *TYPEIN-WINDOW*			;For prompts
	 *MINI-BUFFER-WINDOW*			;A special editor window
	 (*MINI-BUFFER-HISTORY* (MAKE-INSTANCE 'MINI-BUFFER-HISTORY ':NAME "Command"))
	 TV:IO-BUFFER				;NOT a special-instance-variable!
	 )
	(EDITOR)
  (:INITABLE-INSTANCE-VARIABLES *MODE-LINE-LIST* *MAJOR-MODE*)
  (:GETTABLE-INSTANCE-VARIABLES TV:IO-BUFFER)
  (:SPECIAL-INSTANCE-VARIABLES *MODE-LINE-LIST* *MODE-LIST* *MAJOR-MODE* *MODE-NAME-LIST*
			       *MACRO-LEVEL*
			       *MODE-COMTAB* *MODE-CONTROL-X-COMTAB*
			       *MODE-WORD-SYNTAX-TABLE* *MODE-LIST-SYNTAX-TABLE*
			       *USER-MODES-SET* *WINDOW-LIST*
			       *COMMAND-HOOK* *POST-COMMAND-HOOK* *TYPEOUT-WINDOW*
			       *MODE-LINE-WINDOW* *TYPEIN-WINDOW*
			       *MINI-BUFFER-WINDOW* *MINI-BUFFER-HISTORY*)
  (:SPECIAL-INSTANCE-VARIABLE-BINDING-METHODS :INIT :EDIT)
  (:READABLE-INSTANCE-VARIABLES (EDITOR-MODE-LINE-LIST *MODE-LINE-LIST*))
  (:WRITABLE-INSTANCE-VARIABLES (EDITOR-MODE-LINE-LIST *MODE-LINE-LIST*))
  (:DOCUMENTATION :MIXIN "A callable editor"))

(DEFFLAVOR ZMACS-EDITOR
	((*MINI-BUFFER-HISTORY* (MAKE-INSTANCE 'MINI-BUFFER-HISTORY ':NAME "Command"))
	 )
	(EDITOR)
  :SPECIAL-INSTANCE-VARIABLES
  (:SPECIAL-INSTANCE-VARIABLE-BINDING-METHODS :INIT :EDIT :FIND-FILE-FROM-OUTSIDE)
  (:DOCUMENTATION :SPECIAL-PURPOSE "An editor for ZMACS"))

(DEFFLAVOR OWN-STANDARD-INPUT-EDITOR-MIXIN
	(STANDARD-INPUT)
	()
  (:REQUIRED-FLAVORS TOP-LEVEL-EDITOR)
  (:SPECIAL-INSTANCE-VARIABLES STANDARD-INPUT)
  (:SPECIAL-INSTANCE-VARIABLE-BINDING-METHODS :EDIT)
  (:INITABLE-INSTANCE-VARIABLES STANDARD-INPUT))

(DEFFLAVOR ZMACS-TOP-LEVEL-EDITOR
       ((*MODE-LINE-LIST*
	  '("Zmacs " *TOP-LEVEL-EDITOR-NUMBER*
	    "(" *MODE-NAME-LIST*
	    (*MODE-QUANTITY-NAME* " <" *MODE-QUANTITY-NAME* ">")
	    ")"
	    (*STYLE-NAME* " " *STYLE-NAME*)
	    ;;this space must be tied to the following *ALWAYS-LABEL-ZMACS-WINDOWS* item
	    " "
	    (*ALWAYS-LABEL-ZMACS-WINDOWS*
	      :ELSE *ZMACS-BUFFER-NAME* *ZMACS-BUFFER-VERSION-STRING*)
	    (*MACRO-LEVEL* "  Macro-level: " *MACRO-LEVEL*)
	    *BUFFER-MODIFIED-P*
	    (*MODE-LINE-MORE-ABOVE-BELOW*
	      "  " *MODE-LINE-MORE-ABOVE-BELOW*)))
	(PACKAGE SI:*USER-PACKAGE*)	;Must not be unbound or who-line will blow out
	(PROCESS NIL)
	(*TOP-LEVEL-EDITOR-NUMBER* NIL)
	)
       (ZMACS-EDITOR OWN-STANDARD-INPUT-EDITOR-MIXIN TOP-LEVEL-EDITOR)
  (:INITABLE-INSTANCE-VARIABLES PROCESS)
  (:GETTABLE-INSTANCE-VARIABLES PROCESS)
  (:SPECIAL-INSTANCE-VARIABLES *MODE-LINE-LIST* PACKAGE *TOP-LEVEL-EDITOR-NUMBER*)
  (:SPECIAL-INSTANCE-VARIABLE-BINDING-METHODS :INIT :EDIT)
  (:READABLE-INSTANCE-VARIABLES (EDITOR-MODE-LINE-LIST *MODE-LINE-LIST*))
  (:WRITABLE-INSTANCE-VARIABLES (EDITOR-MODE-LINE-LIST *MODE-LINE-LIST*))
  (:DOCUMENTATION :SPECIAL-PURPOSE "The actual (ED) editor"))

(DEFVAR *TOP-LEVEL-EDITOR-COUNTER* NIL)
(DEFMETHOD (:INIT ZMACS-TOP-LEVEL-EDITOR :AFTER) (IGNORE)
  (IF (NULL *TOP-LEVEL-EDITOR-COUNTER*)
      ;; The first Zmacs frame doesn't get a number
      (SETQ *TOP-LEVEL-EDITOR-COUNTER* 1)
    ;; All the rest get a number, starting at 2
    (SETQ *TOP-LEVEL-EDITOR-NUMBER*
	  (FORMAT NIL "~D " (WITHOUT-INTERRUPTS
			      (INCF *TOP-LEVEL-EDITOR-COUNTER*)))))
  ;; Make sure that control-X points to the right comtab for Zmacs
  (SET-COMTAB-INDIRECTION *MODE-CONTROL-X-COMTAB* *ZMACS-CONTROL-X-COMTAB*))

;; There are a bunch of things which should not be shared from one Zmacs to another,
;; and here they are.
;; Here is the criterion we use for choosing what things are shared and what things
;; are not shared: if Zmacs is capable of working with "the current foo" shared
;; between all processes, and if there is already a mechanism for selecting among
;; multiple "foos", then "foos" are not shared.  Therefore, *CURRENT-PATCH* and
;; *ZMACS-TAG-TABLE-BUFFER* D,#TD1PsT[Begin using 006 escapes](1 0 (NIL 0) (NIL :ITALIC NIL) "CPTFONTI")are0 shared, since there 1is0 a mechanism for selecting
;; them.  But c-. and c-U m-. are 1not0 shared, because there is no such mechanism
;; for them.
(DEFVAR *TOP-LEVEL-EDITOR-BINDINGS*
	'((*ZMACS-DEFINITIONS-BUFFER* *ZMACS-DEFINITIONS-BUFFER*)
	  (*ZMACS-POSSIBILITIES-BUFFERS* *ZMACS-POSSIBILITIES-BUFFERS*)
	  (*ZMACS-TAG-TABLE-USER* *ZMACS-TAG-TABLE-USER*)
	  (*LAST-MINI-BUFFER-MATCH-STRING* *LAST-MINI-BUFFER-MATCH-STRING*)
	  (*LAST-INPUT-CHARACTER-STYLE-NAME* *LAST-INPUT-CHARACTER-STYLE-NAME*)
	  (*FILL-DIFFERENTLY-FILL-COLUMN* *FILL-DIFFERENTLY-FILL-COLUMN*)
	  (*INDENT-DIFFERENTLY-REPETITION-LEVEL* *INDENT-DIFFERENTLY-REPETITION-LEVEL*)
	  (*INDENT-DIFFERENTLY-POSSIBLE-INDENTATIONS* *INDENT-DIFFERENTLY-POSSIBLE-INDENTATIONS*)
	  (*STRING-UNDER* NIL)
	  (*LAST-PATTERN* *LAST-PATTERN*)
	  (*LAST-PATTERN-BP* *LAST-PATTERN-BP*)
	  (*LAST-PATTERN-RESTART-LIST* *LAST-PATTERN-RESTART-LIST*)
	  (*IS-STRING* *IS-STRING*)
	  (*IS-BP* *IS-BP*)
	  (*IS-STATUS* *IS-STATUS*)
	  (*IS-REVERSE-P* *IS-REVERSE-P*)
	  (*IS-POINTER* *IS-POINTER*)
	  (*IS-OPERATION* *IS-OPERATION*)))

(DEFVAR-RESETTABLE *INSIDE-ZMACS* NIL)
(DEFVAR-RESETTABLE *INSIDE-BREAK* NIL)

(DEFWHOPPER-SUBST (:EDIT ZMACS-TOP-LEVEL-EDITOR) (&REST ARGS)
  (LET ((*ZMACS-WINDOW-PROCESS* (SEND SELF :PROCESS))
	(*ZMACS-COMMAND-LOOP* SELF)
	(*ZMACS-STREAM* STANDARD-INPUT)
	(*INSIDE-ZMACS* T)
	(*INSIDE-BREAK* NIL))
    (PROGW *TOP-LEVEL-EDITOR-BINDINGS*
      (LEXPR-CONTINUE-WHOPPER ARGS))))


;;; This declares all instance variables special whose name starts with an *.
(DEFMACRO GLOBALLY-DECLARE-FLAVOR-INSTANCE-VARIABLES (FLAVOR-NAME)
  `(CL:PROCLAIM '(SPECIAL ,@(LOOP FOR VAR IN (FLAVOR::FLAVOR-LOCAL-INSTANCE-VARIABLES
					       (FLAVOR:FIND-FLAVOR FLAVOR-NAME T 'COMPILE))
				  WHEN (CHAR-EQUAL (AREF (GET-PNAME VAR) 0) #/*)
				    COLLECT VAR))))

(GLOBALLY-DECLARE-FLAVOR-INSTANCE-VARIABLES EDITOR)
(GLOBALLY-DECLARE-FLAVOR-INSTANCE-VARIABLES TOP-LEVEL-EDITOR)

;;; Some flavor definitions for Zwei frames that need to be defined early.
(DEFFLAVOR ZWEI-FRAME
	((TV:IO-BUFFER NIL)
	 (MODE-LINE-WINDOW 'MODE-LINE-WINDOW))
	(TV:INITIALLY-INVISIBLE-MIXIN TV:BORDERS-MIXIN TV:BASIC-FRAME)
  (:INITABLE-INSTANCE-VARIABLES TV:IO-BUFFER MODE-LINE-WINDOW)
  (:GETTABLE-INSTANCE-VARIABLES MODE-LINE-WINDOW)
  (:INIT-KEYWORDS :NUMBER-OF-MINI-BUFFER-LINES)
  (:DEFAULT-INIT-PLIST :SAVE-BITS ':DELAYED
		       :NUMBER-OF-MINI-BUFFER-LINES 3
		       :BORDER-MARGIN-WIDTH 0))

(DEFFLAVOR NEW-PANES-ZWEI-FRAME () (ZWEI-FRAME)
  (:REQUIRED-METHODS :CREATE-NEW-PANE :UPDATE-LABELS))

(DEFVAR *ZMACS-WINDOW-DEFAULT-PANE-LABEL-CHARACTER-STYLE*	
	   (SI:PARSE-CHARACTER-STYLE '(NIL NIL NIL)))

(DEFFLAVOR ZMACS-FRAME
	(PANE-LABEL-CHARACTER-STYLE
	 (COMMAND-LOOP NIL))
	(TV:PROCESS-MIXIN NEW-PANES-ZWEI-FRAME)
  (:INITABLE-INSTANCE-VARIABLES PANE-LABEL-CHARACTER-STYLE)
  (:READABLE-INSTANCE-VARIABLES PANE-LABEL-CHARACTER-STYLE)
  (:GETTABLE-INSTANCE-VARIABLES COMMAND-LOOP)
  (:DEFAULT-INIT-PLIST
   :MODE-LINE-WINDOW 'ZMACS-MODE-LINE-WINDOW
   :PANE-LABEL-CHARACTER-STYLE *ZMACS-WINDOW-DEFAULT-PANE-LABEL-CHARACTER-STYLE*
   ))

(DEFMETHOD ((CL:SETF ZMACS-FRAME-PANE-LABEL-CHARACTER-STYLE) ZMACS-FRAME) (NCS)
  (SETQ PANE-LABEL-CHARACTER-STYLE (SI:PARSE-CHARACTER-STYLE NCS))
  (SEND SELF :UPDATE-LABELS))


;;; The error condition for ZWEI command complaints.
(DEFFLAVOR BARF () (ERROR))

;;; This is a version for complaints that have debugging nature.
;;;This allows condition traces to catch them without catching 
;;;all BARF's. 
(DEFFLAVOR DEBUGGING-BARF () (BARF))


(DEFSTRUCT (LINE :ARRAY-LEADER (:SIZE-SYMBOL LINE-LEADER-SIZE)
		 (:MAKE-ARRAY (:AREA *LINE-AREA*)))
  LINE-LENGTH				;Number of characters.
  LINE-NEXT				;Next line.
  LINE-PREVIOUS				;Previous line.
  LINE-BP-LIST				;List of permanent BPs.
  LINE-TICK				;Last time modified.
  LINE-NODE				;The bottommost node containing this line
					;This must be a NODE, not merely an INTERVAL.
  LINE-CONTENTS-PLIST			;Plist cleared out by MUNG-LINE.
					;Holds properties of the text in the line.
  LINE-PLIST				;Plist not cleared out.  Props of line itself.
  ;;*** move up later ***
  LINE-NEARBY-LINE-DELETED		;Tick when next or previous line wholly gone.
  LINE-TOKEN				;The tokens on this line, for LBEs
  )

(DEFSUBST LINE-DIAGRAM (LINE)
  (GET (LOCF (LINE-PLIST LINE)) :DIAGRAM))

;;--- Temporary definition (should maybe test a bit in LINE-FLAGS when that exists).
;;--- depending on efficiency considerations.
(DEFSUBST LINE-COPY-ON-WRITE (LINE)
  (MINUSP (LINE-TICK LINE)))

(DEFPROP LINE-COPY-ON-WRITE
	 ((LINE-COPY-ON-WRITE LINE) . (SET-LINE-COPY-ON-WRITE LINE SI:VAL))
	 SETF)

(DEFSUBST SET-LINE-COPY-ON-WRITE (LINE LINE-COPY-ON-WRITE)
  (SETF (LINE-TICK LINE) (IF LINE-COPY-ON-WRITE -1 *TICK*)))

(CL:DEFSETF LINE-COPY-ON-WRITE SET-LINE-COPY-ON-WRITE)

(DEFUN LINE-NEXT-IN-BUFFER (LINE &KEY (BUFFER () BUFFER-P) IGNORE-VC-DIAGRAM-LINES)
  (LET ((NEXT-LINE
	  (OR (LINE-NEXT LINE)
	      ;; Note that if the first branch of the OR succeeds, no reference
	      ;; is made to *INTERVAL* (which could be unbound, grrr)
	      (BUFFER-NEXT-UNLINKED-LINE (IF BUFFER-P BUFFER (INTERVAL-BUFFER *INTERVAL*))
					 LINE))))
    (WHEN (AND IGNORE-VC-DIAGRAM-LINES
	       (CL:MEMBER ':VERSION-CONTROL CL:*FEATURES*))
      (LOOP WITH BUFFER = (IF BUFFER-P BUFFER (INTERVAL-BUFFER *INTERVAL*))
	    WHILE (AND NEXT-LINE
		       (LET ((DIAGRAM (CL:GETF (LINE-PLIST NEXT-LINE) :DIAGRAM)))
			 (AND DIAGRAM (TYPEP DIAGRAM 'BASIC-VC-LINE-DIAGRAM))))
	    DO (SETQ NEXT-LINE (LINE-NEXT-IN-BUFFER NEXT-LINE :BUFFER BUFFER))))
    NEXT-LINE))

(DEFUN LINE-PREVIOUS-IN-BUFFER (LINE &KEY (BUFFER () BUFFER-P) IGNORE-VC-DIAGRAM-LINES)
  (LET ((PREV-LINE
	  (OR (LINE-PREVIOUS LINE)
	      ;; Note that if the first branch of the OR succeeds, no reference
	      ;; is made to *INTERVAL* (which could be unbound, grrr)
	      (BUFFER-PREVIOUS-UNLINKED-LINE (IF BUFFER-P BUFFER (INTERVAL-BUFFER *INTERVAL*))
					     LINE))))
    (WHEN (AND IGNORE-VC-DIAGRAM-LINES
	       (CL:MEMBER ':VERSION-CONTROL CL:*FEATURES*))
      (LOOP WITH BUFFER = (IF BUFFER-P BUFFER (INTERVAL-BUFFER *INTERVAL*))
	    WHILE (AND PREV-LINE
		       (LET ((DIAGRAM (CL:GETF (LINE-PLIST PREV-LINE) :DIAGRAM)))
			 (AND DIAGRAM (TYPEP DIAGRAM 'BASIC-VC-LINE-DIAGRAM))))
	    DO (SETQ PREV-LINE (LINE-PREVIOUS-IN-BUFFER PREV-LINE :BUFFER BUFFER))))
    PREV-LINE))


(DEFSTRUCT (TEMP-BP :LIST)
  BP-LINE					;Line at which we point.
  BP-INDEX					;Character position in line.
  )

(DEFSTRUCT (BP :LIST (:INCLUDE TEMP-BP))
  BP-STATUS					;:NORMAL or :MOVES
  BP-BUFFER-INTERNAL				;NIL or buffer containing this BP
  )

;;; NOTE:  LINE-NODE of a line must be a NODE, not an interval.
;;; Use a NODE for the container into which you insert text.

(DEFFLAVOR INTERVAL
	(FIRST-BP				;First line of the set, NIL if not yet in.
	 LAST-BP)				;Last line of the set.
	()
  :ORDERED-INSTANCE-VARIABLES
  :SETTABLE-INSTANCE-VARIABLES
  :GETTABLE-INSTANCE-VARIABLES
  :WRITABLE-INSTANCE-VARIABLES
  )

(DEFMETHOD (:NODE-P INTERVAL) () NIL)		;cheaper than typep

(DEFGENERIC BUFFER-BP-REACHABLE-P (BUFFER BP)
  "For buffers with disconnected sections, is T for BP's that are reachable
and NIL otherwise. Used to keep the mouse off of diagram lines."
  (:METHOD (INTERVAL) (IGNORE BP) T))

(DEFFLAVOR NODE
	(;; Inherited
	 FIRST-BP
	 LAST-BP
	 TICK					;Time this buffer was last munged
						;:READ-ONLY here means not changeable.
	 (NEXT NIL)				;Next node at this level
	 (PREVIOUS NIL)				;Previous node at this level
	 (SUPERIOR NIL)				;The next higher node
	 (INFERIORS NIL)			;A list of directly inferior nodes
	 (WRITE-LOCK NIL)			;Locker
	 (READ-LOCK NIL)			;List of readers
	 )
	(INTERVAL)
  :ORDERED-INSTANCE-VARIABLES
  :SETTABLE-INSTANCE-VARIABLES
  :GETTABLE-INSTANCE-VARIABLES
  :WRITABLE-INSTANCE-VARIABLES
  (:DEFAULT-INIT-PLIST :TICK *TICK*)
  )

(DEFMETHOD (:NODE-P NODE) () T)			;see above.

;;; A flavor of node with unlinked sections is one that owns a series of top-level-nodes
;;; and supports the next/previous-unlinked-line protocol.  By default, nodes don't.
(DEFMETHOD (:UNLINKED-SECTIONS-P NODE) () NIL)

(DEFGENERIC BUFFER-NEXT-UNLINKED-LINE (BUFFER LINE)
  "For buffers with disconnected sections, crosses a hard section boundary."
  (:METHOD (NODE) (IGNORE LINE) NIL)
  )

(DEFGENERIC BUFFER-PREVIOUS-UNLINKED-LINE (BUFFER LINE)
  "For buffers with disconnected sections, crosses a hard section boundary."
  (:METHOD (NODE) (IGNORE LINE) NIL)		; no unlinked lines
  )

(DEFSUBST MUNG-NODE (NODE &OPTIONAL (INNERMOST T))
  (SEND NODE :MUNG INNERMOST))


(DEFFLAVOR LOCAL-VARIABLE-MIXIN ((VARIABLE-VALUES NIL)) ()
  :SETTABLE-INSTANCE-VARIABLES)

;;; Used with top-level editor as *INTERVAL*
(DEFFLAVOR TOP-LEVEL-NODE
	   ((CHANGE-HISTORY NIL)	;List of change records, newest first
					;Set this to :DISABLED to disable change recording
	    ;; Next two instance variables are normally NIL, but if (FIRST CHANGE-HISTORY)
	    ;; is accumulating contiguous small changes, they contain the number of
	    ;; newline characters in that change's old-text and the number of characters
	    ;; in the last line of that change's old-text, to enable bp-position saving
	    ;; when appending to the change.
	    ;; CHANGE-ACCUMULATION-N-LINES also serves as a flag to enable change
	    ;; accumulation: it is NIL when (FIRST CHANGE-HISTORY) is not accumulating.
	    ;; CHANGE-ACCUMULATION-N-CHARS also serves to record any characters deleted
	    ;; at the end when accumulating insertions, so we can defer deciding whether
	    ;; to record the deletion as a separate change.
	    (CHANGE-ACCUMULATION-N-LINES NIL)
	    (CHANGE-ACCUMULATION-N-CHARS NIL))
	   (SI:PROPERTY-LIST-MIXIN LOCAL-VARIABLE-MIXIN NODE)
  (:CONC-NAME BUFFER-)				;Buffer protocol
  :WRITABLE-INSTANCE-VARIABLES)

(DEFMETHOD (:MAJOR-MODE TOP-LEVEL-NODE) ()
  (OR
    ;; This is the end of the line which is why we do a get.
    (SEND SELF :GET :MAJOR-MODE)
    (MAJOR-MODE-FROM-KEYWORD :FUNDAMENTAL)))
;;; If *INTERVAL*'s home-buffer isn't a TOP-LEVEL-NODE, change recording is always disabled
(DEFMETHOD (BUFFER-CHANGE-HISTORY INTERVAL) () ':DISABLED)

(DEFFLAVOR KILL-RING-INTERVAL
	((CHAR-BEFORE NIL)			;Character before stuff killed
	 (CHAR-AFTER NIL))			;Character after stuff killed
	(NODE)
  :SETTABLE-INSTANCE-VARIABLES
  :WRITABLE-INSTANCE-VARIABLES
  )

(DEFSTRUCT (WINDOW :ARRAY-LEADER :NAMED :CONC-NAME (:SIZE-SYMBOL WINDOW-LEADER-SIZE)
		   (:PRINT "#<ZWEI:WINDOW~@[ ~A~]~@[  ~A~] ~\SI:ADDRESS\>"
		    (AND (WINDOW-SHEET WINDOW)
			 (SEND-IF-HANDLES (WINDOW-SHEET WINDOW) :NAME))
		    (AND (WINDOW-INTERVAL WINDOW)
			 (SEND-IF-HANDLES (WINDOW-INTERVAL WINDOW) :NAME))
		    (SYS:%POINTER WINDOW)))

  N-PLINES					;Number of lines displayed.
  INTERVAL					;Interval being displayed.
  SHEET						;Screen system window
  REDISPLAY-DEGREE				;DIS-xxx
  REDISPLAY-LINE				;For DIS-LINE
  REDISPLAY-INDEX				;ditto
  LAST-POINT-PLINE				;Hint to REDISPLAY, last PLINE point was on.
  START-BP					;Where to start redisplaying.
  POINT
  MARK
  MARK-P
  POINT-PDL
  POINT-BLINKER
  SPECIAL-BLINKER-LIST
  
  LAST-BP-DISPLAYED-P				;Maintained by redisplay
  BUFFER-HISTORY				;for per-window history
  )
     
(DEFVAR *NUMBER-OF-PLINE-PARAMETERS*)	;For the window 2-d manual defstruct.
(DEFMACRO DEFINE-WINDOW-MACROS NAMES
  (DO ((NAMES NAMES (CDR NAMES))
       (I 0 (1+ I))
       (RESULT NIL (CONS `(DEFMACRO ,(CAR NAMES) (WINDOW PLINE)
			    `(AREF ,WINDOW ,',I ,PLINE))
			 RESULT)))
      ((NULL NAMES)
       `(PROGN 'COMPILE
	       (SETQ *NUMBER-OF-PLINE-PARAMETERS* ,I)
	       . ,RESULT))))


(DEFINE-WINDOW-MACROS PLINE-LINE PLINE-FROM-INDEX PLINE-TO-INDEX PLINE-TICK
		      PLINE-MARKING-LEFT PLINE-MARKING-WIDTH PLINE-TEXT-WIDTH
		      PLINE-Y PLINE-BASELINE PLINE-HEIGHT)

;;; ZMACS definitions


(DEFFLAVOR FUNCTION-SPEC-OBJECT
	(FUNCTION-SPEC				;Symbol, etc.
	 (DEFINITION-TYPE NIL))			;DEFUN, etc.
	()
  :SETTABLE-INSTANCE-VARIABLES
  )

(DEFMETHOD (:PRINT-SELF FUNCTION-SPEC-OBJECT) (STREAM &REST IGNORE)
  (SI:PRINTING-RANDOM-OBJECT (SELF STREAM :TYPEP)
    (FORMAT STREAM "~A" (SEND SELF ':DEFINITION-NAME))))

(DEFFLAVOR SECTION-NODE
	(DEFINITION-LINE			;Line that starts it
	 COMPILE-TICK				;Time of last compilation
	 SECTIONIZATION-TICK			;Time of last sectionization
	 (PLIST NIL)				;Random information

	FUNCTION-SPEC				;Inherited, but need access
	DEFINITION-TYPE
	(CORRESPONDENCE-TICK 0)			;Time of last correspondence calculation
	)
	(FUNCTION-SPEC-OBJECT NODE)
  (:READABLE-INSTANCE-VARIABLES CORRESPONDENCE-TICK)
  :SETTABLE-INSTANCE-VARIABLES
  :GETTABLE-INSTANCE-VARIABLES
  :WRITABLE-INSTANCE-VARIABLES
  (:LOCATABLE-INSTANCE-VARIABLES PLIST)
  )

(DEFMETHOD (:GET SECTION-NODE) (INDICATOR)
  (GET (LOCF PLIST) INDICATOR))

(DEFMETHOD (:PUTPROP SECTION-NODE) (VALUE INDICATOR)
  (PUTPROP (LOCF PLIST) VALUE INDICATOR))

(DEFUN SECTION-NODE-DEFINITION-OR-FIRST-LINE (NODE)
  (OR (SECTION-NODE-DEFINITION-LINE NODE)
      (BP-LINE (INTERVAL-FIRST-BP NODE))))

(DEFFLAVOR NAMED-BUFFER
	((NAME NIL))
	(TOP-LEVEL-NODE)
  :SETTABLE-INSTANCE-VARIABLES
  :WRITABLE-INSTANCE-VARIABLES
  )

(DEFGENERIC BUFFER-NAME-FOR-DISPLAY (BUFFER)
  "Protocol for the name that is displayed in the mode line/window label.
This may be an embelishment of the :NAME.")

(DEFMETHOD (BUFFER-NAME-FOR-DISPLAY NAMED-BUFFER) ()
  (LET ((VS (SEND SELF :VERSION-STRING)))
    (IF VS
	(FORMAT NIL "~A~A" NAME VS)
	NAME)))

(DEFFLAVOR NAMED-BUFFER-WITH-SECTIONS
 ((FIRST-SECTION NIL))
 (NAMED-BUFFER)
  (:READABLE-INSTANCE-VARIABLES FIRST-SECTION)
  (:WRITABLE-INSTANCE-VARIABLES FIRST-SECTION)
  :CONC-NAME)

(DEFMETHOD (:SECTIONS NAMED-BUFFER-WITH-SECTIONS) ()
  INFERIORS)

(DEFMETHOD (:PRINT-SELF NAMED-BUFFER) (STREAM IGNORE SLASHIFY-P)
  (IF SLASHIFY-P
      (SI:PRINTING-RANDOM-OBJECT (SELF STREAM :TYPEP)
	(PRIN1 NAME STREAM))
      (SEND STREAM :STRING-OUT NAME)))


;;; Buffers with a file associated with them.
(DEFFLAVOR FILE-BUFFER-MIXIN
	(PATHNAME
	 (SAVE-TICK 0)				;never saved.
	 (READ-TICK -1)				;never read unless it gets read.
	 (FILE-INFO NIL)
	 (VERSION-STRING NIL)
	 )
	()
  (:REQUIRED-FLAVORS NAMED-BUFFER)
  :GETTABLE-INSTANCE-VARIABLES
  (:INITABLE-INSTANCE-VARIABLES PATHNAME READ-TICK)
  )

(DEFGENERIC FILE-BUFFER-P (BUFFER)
  (:COMPATIBLE-MESSAGE :EDITING-FILE-P)
  (:METHOD (INTERVAL) NIL))


;;; ZMACS buffers
(DEFFLAVOR BUFFER
	(SAVED-POINT				;POINT the last time this was on a window.
	 SAVED-MARK				;Same for MARK.
	 (SAVED-MODE-LIST (STICKY-MODE-LIST))	;Saved *MODE-LIST* for this buffer.
	 SAVED-WINDOW-START-BP			;BP to top of window
	 (SECTION-LIST NIL)			;old zmacs-section-list property.
						;can anyone explain how this differs from
						;inferiors?
	 (TYPEIN-CHARACTER-STYLE NIL)		;Value of *STYLE* for this buffer.
	 )
	(NAMED-BUFFER-WITH-SECTIONS TOP-LEVEL-NODE)
  :SETTABLE-INSTANCE-VARIABLES
  :WRITABLE-INSTANCE-VARIABLES
  (:INIT-KEYWORDS :ACTIVATE-P :AUTOMATIC :PACKAGE :MAJOR-MODE)
  (:DEFAULT-INIT-PLIST :ACTIVATE-P T)
  )

(DEFGENERIC ZMACS-BUFFER-P (INTERVAL) 
  (:METHOD (INTERVAL) NIL)
  (:METHOD (BUFFER) T))

(DEFGENERIC VC-FILE-BUFFER-P (BUFFER)
  (:METHOD (INTERVAL) NIL))

(DEFGENERIC WITH-BUFFER-PROTECTED-INTERNAL (BUFFER CONTINUATION)
  (:METHOD (BUFFER) (FUNCALL CONTINUATION)))

(DEFMETHOD (ZMACS-SECTION-LIST BUFFER) ()
  SECTION-LIST)

(DEFMETHOD ((CL:SETF ZMACS-SECTION-LIST) BUFFER) (NEW-Z-S-LIST)
  (SETQ SECTION-LIST NEW-Z-S-LIST))

(DEFMETHOD (ZMACS-SECTION-LIST NODE) () NIL)

(DEFMETHOD ((CL:SETF ZMACS-SECTION-LIST) NODE) (IGNORE) NIL)

(DEFMETHOD (BUFFER-VERSION-CONTROLLED-P BUFFER) () NIL)

;;; ZMACS buffers with a file associated with them.
(DEFFLAVOR FILE-BUFFER () (FILE-BUFFER-MIXIN BUFFER))

(DEFFLAVOR NON-FILE-BUFFER
	()
	(BUFFER)
  (:DEFAULT-INIT-PLIST :NAME (GENERATE-BUFFER-NAME))
  )

;;; This is used for many special purposes, other than editing files.
;;; See SPCBUF LISP.
(DEFFLAVOR SPECIAL-PURPOSE-BUFFER () (BUFFER)
  (:METHOD-COMBINATION :REUSABLE :AND))

;;; NOTE: As per the following, it is required that the inferiors of a
;;; BUFFER be proper section nodes, as defined in sectio.lisp.  If other
;;; things are left in the inferiors list sectionization will try
;;; to treat them as sections and send them :function-spec messages, etc.
(DEFMETHOD (BUFFER-SECTIONS NAMED-BUFFER-WITH-SECTIONS) ()
  ;; This may look odd - but the resultant ordering for nested functions is
  ;; more intelligible to the poor user. (i.e. - does depth-first search)
  (LOOP FOR NODE IN INFERIORS
	COLLECT NODE
	APPEND (BUFFER-SECTIONS NODE)))

;;;
;;; Languages like Pascal and Ada have nested function definitions
;;;
(DEFMETHOD (BUFFER-SECTIONS SECTION-NODE) ()
  ;; This may look odd - but the resultant ordering for nested functions is
  ;; more intelligible to the poor user. (i.e. - does depth-first search)
  (LOOP FOR NODE IN INFERIORS
	COLLECT NODE
	APPEND (BUFFER-SECTIONS NODE)))


;;; These don't have that kind of sections
(DEFMETHOD (BUFFER-SECTIONS SPECIAL-PURPOSE-BUFFER) ()
  NIL)


;;; Presentation-types here for bootstrapping reasons

;; This is a clone of the 'string p-type, except with a special printer added
;; for printing strings as "stuff".
(dw:define-presentation-type zwei:string-for-variable (() &key delimiters)
   :expander 'string
   :printer ((string stream)
	     (cl:write string :stream stream)))


;;;; UNDO Stuff

(DEFVAR-RESETTABLE *ENABLE-CHANGE-RECORDING* T)	;If T, changes to buffers are recorded
						;Bound to NIL when change has been recorded
						;by WITH-UNDO-SAVE, so primitives don't record
						;You can set this to NIL in your init file
						;if you are a cretin

(DEFVAR-RESETTABLE *FORCIBLY-MERGE-CHANGE-RECORD* NIL)	;T to override the heuristics

;; Try to keep the change records out of the way of everything else.
;; Not useful to make them ephemeral because their lifetimes are quite long.
(DEFVAR *CHANGE-RECORD-AREA* (MAKE-AREA :NAME '*CHANGE-RECORD-AREA* :GC :DYNAMIC))

;;; Structures that record changes to buffers so they can be undone and redone

(DEFFLAVOR CHANGE-RECORD () ()			;Base flavor for all change records
  (:DEFAULT-INIT-PLIST :AREA *CHANGE-RECORD-AREA*))

;; Protocol followed by CHANGE-RECORDs (MUNG-NODE-RECORDs don't implement all of this)
;;
;; CHANGE-RECORD-KIND		;INITIAL, REDO, UNDO, or MUNG-NODE
;; CHANGE-RECORD-INTERVAL	;Returns two BP's that enclose the changes
;; CHANGE-RECORD-FIRST-BP	;First value of CHANGE-RECORD-INTERVAL
;; CHANGE-RECORD-LAST-BP	;Second value of CHANGE-RECORD-INTERVAL
;; CHANGE-RECORD-VERB		;A string briefly describing the change
;; ACCUMULATE-INSERTION		;Maybe merge an insertion into this change, return T if done
;; ACCUMULATE-CHANGE		;Maybe merge a change into this change, return T if done
;; FINALIZE-ACCUMULATED-CHANGES	;Remove accumulation state, copy into permanent area
;; FLUSH-BUFFER-POINTERS	;Call FLUSH-BP on all permanent BP's
;; UNDO-CHANGE			;Restore old text and old BP positions, return enclosing BP's
;; PREPARE-TO-UNDO-CHANGE	;Push a change-record so this can be redone
;; DISPLAY-CHANGE-RECORD	;Display self for history
;; RECONSTRUCT-CHANGED-TEXT	;Undo change's effect on text resulting from an earlier change


(DEFFLAVOR INTERVAL-CHANGE-RECORD		;Base flavor for most change records
	(FIRST-BP		;Start of changed interval (:normal)
	 LAST-BP		;End of changed interval (:moves)
	 BP-POSITIONS)		;Where bp's inside the interval were: ((bp line# char#)...)
	(CHANGE-RECORD)		;  line#,char# are relative to FIRST-BP
  (:CONC-NAME CHANGE-RECORD-)	;All one protocol
  :READABLE-INSTANCE-VARIABLES
  (:WRITABLE-INSTANCE-VARIABLES BP-POSITIONS))

(DEFFLAVOR SIMPLE-CHANGE-RECORD	;Accumulated simple changes
	(OLD-TEXT)		;A string or interval containing the old contents of interval
	(INTERVAL-CHANGE-RECORD)
  (:CONC-NAME CHANGE-RECORD-)	;All one protocol
  :WRITABLE-INSTANCE-VARIABLES
  (:CONSTRUCTOR MAKE-SIMPLE-CHANGE-RECORD (FIRST-BP LAST-BP BP-POSITIONS OLD-TEXT)))

(DEFFLAVOR NAMED-CHANGE-RECORD	;WITH-UNDO-SAVE uses this
	(VERB)			;A string naming the action performed
	(SIMPLE-CHANGE-RECORD)
  (:CONC-NAME CHANGE-RECORD-)	;All one protocol
  (:READABLE-INSTANCE-VARIABLES VERB)
  (:CONSTRUCTOR MAKE-NAMED-CHANGE-RECORD (VERB FIRST-BP LAST-BP BP-POSITIONS OLD-TEXT)))

(DEFFLAVOR REPLACE-CHANGE-RECORD	;Query Replace uses this
	()
	(SIMPLE-CHANGE-RECORD)
  (:CONSTRUCTOR MAKE-REPLACE-CHANGE-RECORD (FIRST-BP LAST-BP BP-POSITIONS OLD-TEXT)))

(DEFFLAVOR SPARSE-CHANGE-RECORD	;Scattered changes, as in filling
	(VERB			;A string naming the action performed
	 CHANGES)		;A list of encoded change descriptions
	(INTERVAL-CHANGE-RECORD)
  (:CONC-NAME CHANGE-RECORD-)	;All one protocol
  (:READABLE-INSTANCE-VARIABLES VERB)
  (:CONSTRUCTOR MAKE-SPARSE-CHANGE-RECORD (VERB FIRST-BP LAST-BP BP-POSITIONS CHANGES)))

(DEFFLAVOR SPARSE-REPLACE-CHANGE-RECORD	;For replace commands, displays self differently
	((VERB "replace")
	 FROM-STRING TO-STRING)	;These aren't necessarily strings, can be lists of strings
	(SPARSE-CHANGE-RECORD)
  (:REQUIRED-INSTANCE-VARIABLES FIRST-BP LAST-BP BP-POSITIONS CHANGES)
  (:INITABLE-INSTANCE-VARIABLES VERB FIRST-BP LAST-BP BP-POSITIONS CHANGES
				FROM-STRING TO-STRING))

;Same as SIMPLE-CHANGE-RECORD except that KILL-INTERVAL does special merging hair
;and OLD-TEXT is never a string.
(DEFFLAVOR KILL-RECORD () (SIMPLE-CHANGE-RECORD)
  (:CONSTRUCTOR MAKE-KILL-RECORD (FIRST-BP LAST-BP BP-POSITIONS OLD-TEXT)))


;;; Specialized flavors that are less general than INTERVAL-CHANGE-RECORD

;OLD-TEXT is empty, so neither it nor BP-POSITIONS needs to be stored
(DEFFLAVOR INSERT-RECORD (FIRST-BP LAST-BP) (CHANGE-RECORD)
  (:CONC-NAME CHANGE-RECORD-)	;All one protocol
  :READABLE-INSTANCE-VARIABLES
  (:CONSTRUCTOR MAKE-INSERT-RECORD (FIRST-BP LAST-BP)))

;Records the exchange of two intervals (twiddle commands)
(DEFFLAVOR EXCHANGE-RECORD
	(BP1 BP2 BP3 BP4	;Starts and ends of the two intervals exchanged
	 BP-POSITIONS)		;Where bp's inside the interval were: ((bp line# char#)...)
	(CHANGE-RECORD)		;  line#,char# are relative to FIRST-BP
  (:CONC-NAME CHANGE-RECORD-)	;All one protocol
  (:READABLE-INSTANCE-VARIABLES BP-POSITIONS)
  (:WRITABLE-INSTANCE-VARIABLES BP-POSITIONS)
  (:CONSTRUCTOR MAKE-EXCHANGE-RECORD (BP1 BP2 BP3 BP4 BP-POSITIONS)))

;Records changes of a node's tick, rather than changes of text
;These are only recorded for significant changes, such as the first after reading in a file
(DEFFLAVOR MUNG-NODE-RECORD (NODE TICK) (CHANGE-RECORD)
  :READABLE-INSTANCE-VARIABLES
  (:CONSTRUCTOR MAKE-MUNG-NODE-RECORD (NODE TICK)))

;;; Those were records of initial changes
;;; These are records of undoing and redoing of earlier changes

(DEFFLAVOR UNDO-REDO-RECORD (CANCELLED-CHANGE) (CHANGE-RECORD)
  (:CONC-NAME CHANGE-RECORD-)	;All one protocol
  (:READABLE-INSTANCE-VARIABLES CANCELLED-CHANGE))

(DEFUN-IN-FLAVOR (CHANGE-RECORD-INITIAL-CHANGE UNDO-REDO-RECORD) ()
  (LOOP FOR CHANGE = CANCELLED-CHANGE THEN (CHANGE-RECORD-CANCELLED-CHANGE CHANGE)
	UNTIL (EQ (CHANGE-RECORD-KIND CHANGE) 'INITIAL)
	FINALLY (RETURN CHANGE)))

(DEFFLAVOR UNDO-RECORD () (UNDO-REDO-RECORD SIMPLE-CHANGE-RECORD)
  (:CONSTRUCTOR MAKE-UNDO-RECORD (FIRST-BP LAST-BP BP-POSITIONS OLD-TEXT CANCELLED-CHANGE)))

(DEFFLAVOR REDO-RECORD () (UNDO-REDO-RECORD SIMPLE-CHANGE-RECORD)
  (:CONSTRUCTOR MAKE-REDO-RECORD (FIRST-BP LAST-BP BP-POSITIONS OLD-TEXT CANCELLED-CHANGE)))
