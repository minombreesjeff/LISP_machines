;;; -*- Mode: Lisp; Package: COMPILER; Lowercase: T; Base: 8 -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

(compile-flavor-methods no-op-instruction)
(compile-flavor-methods var-instruction)
(compile-flavor-methods fun-instruction)
(compile-flavor-methods const-instruction)
(compile-flavor-methods pop-instruction)
(compile-flavor-methods computed-pop-instruction)
(compile-flavor-methods setq-instruction)
(compile-flavor-methods ensure-mapping-information-instruction)
(compile-flavor-methods capture-argument-instruction)
(compile-flavor-methods copy-instruction)
(compile-flavor-methods start-call-instruction)
(compile-flavor-methods call-instruction)
(compile-flavor-methods jump-instruction)
(compile-flavor-methods return-instruction)
(compile-flavor-methods var-location-instruction)
(compile-flavor-methods bind-instruction)
(compile-flavor-methods unbind-instruction)
(compile-flavor-methods start-catch-instruction)
(compile-flavor-methods start-unwind-protect-instruction)
(compile-flavor-methods end-catch-instruction)
(compile-flavor-methods take-args-instruction)
(compile-flavor-methods take-arg-instruction)
(compile-flavor-methods require-args-instruction)
(compile-flavor-methods take-keyword-argument-instruction)
(compile-flavor-methods arg-supplied-p-instruction)
(compile-flavor-methods take-values-instruction)
(compile-flavor-methods relative-push-address-instruction)
(compile-flavor-methods throw-instruction)
(compile-flavor-methods allocate-local-block-instruction)
(compile-flavor-methods push-stack-closure-instruction)
(compile-flavor-methods popj-instruction)
(compile-flavor-methods fast-aref-begin-instruction)
(compile-flavor-methods fast-aref-instruction)
(compile-flavor-methods fast-aset-begin-instruction)
(compile-flavor-methods fast-aset-instruction)
(compile-flavor-methods setup-array-instruction)
(compile-flavor-methods push-pc-instruction)
(compile-flavor-methods push-pc-array-instruction)
(compile-flavor-methods push-logic-variable-instruction)
(compile-flavor-methods pop-vars-instruction)
(compile-flavor-methods name-instruction)
(compile-flavor-methods start-dbs-instruction)
(compile-flavor-methods end-dbs-instruction)
(compile-flavor-methods start-prog-instruction)
(compile-flavor-methods end-prog-instruction)
(compile-flavor-methods unwind-instruction)
(compile-flavor-methods unwind-quick-internal-instruction)
(compile-flavor-methods start-multiple-instruction)
(compile-flavor-methods end-multiple-instruction)
(compile-flavor-methods start-saved-multiple-instruction)
(compile-flavor-methods save-level-instruction)
(compile-flavor-methods restore-level-instruction)
(compile-flavor-methods kludge-stack-instruction)
(compile-flavor-methods fixup-labels-instruction)
(compile-flavor-methods flavor-mapping-table-instruction)
(compile-flavor-methods macro-instruction-instruction)
(compile-flavor-methods block-read-test-instruction)
(compile-flavor-methods internal-tag)
(compile-flavor-methods go-tag)
(compile-flavor-methods pc-tag)
(compile-flavor-methods split-interval-instruction)
(compile-flavor-methods tagbody-interval-instruction)
(compile-flavor-methods go-instruction)
(compile-flavor-methods computed-go-interval-instruction)
(compile-flavor-methods block-interval-instruction)
(compile-flavor-methods return-from-interval-instruction)
