;;;-*- Mode:LISP; Package:SI; Base:8. -*-
;;; L machine binary file printer
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

(DEFVAR *UNBIN-LEVEL*)

(DEFUN UNBIN-FILE (FILE &OPTIONAL OUTFILE)
  (SETF FILE (FS:PARSE-PATHNAME FILE))
  (UNLESS OUTFILE (SETQ OUTFILE (SEND FILE ':NEW-TYPE :UNBIN)))
  (WITH-OPEN-FILE (STANDARD-OUTPUT OUTFILE ':DIRECTION ':OUTPUT)
    (UNBIN-FILE-TO-STREAM FILE)
    (CLOSE STANDARD-OUTPUT)
    (SEND STANDARD-OUTPUT ':TRUENAME)))

(DEFUN UNBIN-FILE-TO-STREAM (FILE)
  (SETQ FILE (BIN-FILE-PATHNAME FILE))
  (WITH-OPEN-FILE (STREAM FILE ':DIRECTION ':INPUT ':CHARACTERS NIL)
    (FORMAT T "-*-Text-*-~%This is the UNBIN for ~A~%" (SEND STREAM ':TRUENAME))
    (LET ((*UNBIN-LEVEL* 0))
      (LOADING-BIN-FILE (STREAM PATHNAME #'UNBIN-NEXT-COMMAND)
	PATHNAME
	(BIN-LOAD-TOP-LEVEL STREAM)))))

(DEFVAR *UNBIN-OP-COMMAND-TABLE* (MAKE-BIN-OP-DISPATCH-TABLE))

(DEFUN UNBIN-NEXT-COMMAND (STREAM)
  (WITH-DECODED-BIN-OPCODE (INDEX EXTRA-ARG) (SEND STREAM :TYI)
    (FORMAT T "~&~V@T~A" (* *UNBIN-LEVEL* 3)
			 (BIN-OP-DISPATCH *BIN-OP-COMMAND-NAME-TABLE* INDEX))
    (LET ((FUNCTION (BIN-OP-DISPATCH *UNBIN-OP-COMMAND-TABLE* INDEX))
	  (*UNBIN-LEVEL* (1+ *UNBIN-LEVEL*)))
      (IF EXTRA-ARG
	  (FUNCALL FUNCTION STREAM EXTRA-ARG)
	  (FUNCALL FUNCTION STREAM)))))

(DEFMACRO DEFINE-UNBIN-COMMAND (OP-NAME ARGLIST &BODY BODY)
  `(DEFINE-BIN-COMMAND-OP ,OP-NAME DEFINE-UNBIN-COMMAND
			  *UNBIN-OP-COMMAND-TABLE* "UNBIN-" ,ARGLIST
     . ,BODY))

(DEFMACRO DEFINE-UNBIN-COMMAND-FOR-EFFECT (OP-NAME ARGLIST &BODY BODY)
  `(DEFINE-BIN-COMMAND-OP ,OP-NAME DEFINE-UNBIN-COMMAND-FOR-EFFECT
			  *UNBIN-OP-COMMAND-TABLE* "UNBIN-" ,ARGLIST
     ,@BODY
     *NO-VALUE-MARKER*))

(DEFMACRO DEFINE-UNBIN-COMMAND-FOR-VALUE (OP-NAME ARGLIST &BODY BODY)
  `(DEFINE-BIN-COMMAND-OP ,OP-NAME DEFINE-UNBIN-COMMAND-FOR-VALUE
			  *UNBIN-OP-COMMAND-TABLE* "UNBIN-" ,ARGLIST
     (UNBIN-ENTER-TABLE (PROGN . ,BODY))))

(DEFMACRO UNBIN-ENTER-TABLE (VALUE)
  `(LET ((.INDEX. *BIN-LOAD-INDEX*))
     (INCF *BIN-LOAD-INDEX*)
     (UNBIN-ENTER-TABLE-INTERNAL ,VALUE .INDEX.)))

(DEFUN UNBIN-ENTER-TABLE-INTERNAL (VALUE INDEX)
  (AND ( INDEX (ARRAY-LENGTH *BIN-LOAD-TABLE*))
       (ADJUST-ARRAY-SIZE *BIN-LOAD-TABLE* (* 2 (ARRAY-LENGTH *BIN-LOAD-TABLE*))))
  (UNLESS (< INDEX (CL:LENGTH *BIN-LOAD-TABLE*))
    (SETF (FILL-POINTER *BIN-LOAD-TABLE*) (1+ INDEX)))
  (ASET VALUE *BIN-LOAD-TABLE* INDEX)
  (FORMAT T "  [~O]" INDEX)
  VALUE)

(DEFUN UNBIN-SHOW-VALUE (VALUE)
  (FORMAT T "  ")
  (CL:WRITE VALUE :ESCAPE T :PRETTY T :CIRCLE T)
  VALUE)

(DEFINE-UNBIN-COMMAND BIN-OP-NUMBER-IMMEDIATE (IGNORE VALUE)
  (UNBIN-SHOW-VALUE (SIGN-EXTEND-IMMEDIATE-OPERAND VALUE)))

(DEFINE-UNBIN-COMMAND-FOR-EFFECT BIN-OP-FORMAT-VERSION (STREAM)
  (BIN-NEXT-VALUE STREAM))

(DEFINE-UNBIN-COMMAND-FOR-EFFECT BIN-OP-FILE-ATTRIBUTE-LIST (STREAM)
  (BIN-NEXT-VALUE STREAM))

(DEFINE-UNBIN-COMMAND-FOR-EFFECT BIN-OP-EOF (IGNORE)
  (THROW 'BIN-LOAD-DONE T))

(DEFINE-UNBIN-COMMAND BIN-OP-TABLE-FETCH-IMMEDIATE (IGNORE INDEX)
  (LET ((VALUE (AREF *BIN-LOAD-TABLE* INDEX)))
    (FORMAT T " [~O]" INDEX)
    (UNBIN-SHOW-VALUE VALUE)
    VALUE))

(DEFINE-UNBIN-COMMAND BIN-OP-TABLE-FETCH-MEDIUM (STREAM)
  (LET* ((INDEX (SEND STREAM ':TYI))
	 (VALUE (AREF *BIN-LOAD-TABLE* INDEX)))
    (FORMAT T " [~O]" INDEX)
    (UNBIN-SHOW-VALUE VALUE)
    VALUE))

(DEFINE-UNBIN-COMMAND BIN-OP-TABLE-FETCH-LARGE (STREAM)
  (LET* ((LOW-BYTE (SEND STREAM ':TYI))
	 (HIGH-BYTE (SEND STREAM ':TYI))
	 (INDEX (DPB HIGH-BYTE (BYTE 20 20) LOW-BYTE))
	 (VALUE (AREF *BIN-LOAD-TABLE* INDEX)))
    (FORMAT T " [~O]" INDEX)
    (UNBIN-SHOW-VALUE VALUE)
    VALUE))

(DEFINE-UNBIN-COMMAND BIN-OP-TABLE-FETCH (STREAM)
  (LET* ((INDEX (BIN-NEXT-VALUE STREAM))
	 (VALUE (AREF *BIN-LOAD-TABLE* INDEX)))
    (FORMAT T " [~O]" INDEX)
    (UNBIN-SHOW-VALUE VALUE)
    VALUE))

(DEFINE-UNBIN-COMMAND BIN-OP-TABLE-STORE (STREAM)
  (UNBIN-ENTER-TABLE (BIN-NEXT-VALUE STREAM)))

(DEFINE-UNBIN-COMMAND BIN-OP-TABLE-STORE-INITIALIZER (STREAM)
  (PROG1 (UNBIN-ENTER-TABLE (BIN-NEXT-VALUE STREAM))
	 (BIN-NEXT-COMMAND STREAM)))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-PACKAGE (STREAM)
  (LET ((PKG
	  (PROG ((DATA (BIN-NEXT-VALUE STREAM)))
		(TYPECASE DATA
		  ;; String means this is the name was gotten from the global registry,
		  ;; with ZL:PKG-NAME
		  (:STRING (RETURN (PKG-FIND-PACKAGE DATA)))
		  ;; List means this name is Syntax relative, as in
		  ;; ("ZL" . "USER")
		  (:LIST
		    (WHEN (AND (STRINGP (CAR DATA)) (STRINGP (CDR DATA)))
		      (RETURN
			(SYS:FIND-PACKAGE-FOR-SYNTAX (CDR DATA) (CAR DATA))))))
		(ERROR "Bad format in BIN-OP-PACKAGE: ~S" DATA))))
    (FORMAT T "  ~S" PKG)
    PKG))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-SYMBOL (STREAM)
  (UNBIN-SHOW-VALUE (INTERN (BIN-NEXT-VALUE STREAM))))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-PACKAGE-SYMBOL (STREAM)
  (LET* ((PKG (BIN-NEXT-VALUE STREAM))
	 (PNAME (BIN-NEXT-VALUE STREAM))
	 (SYMBOL (TYPECASE PKG
		   (:NULL (MAKE-SYMBOL PNAME))
		   (:STRING
		    (LET ((PACKAGE (SETQ PKG (PKG-FIND-PACKAGE PKG NIL PACKAGE))))
		      (FUNCALL (PKG-PREFIX-INTERN-FUNCTION PKG) PNAME)))
		   (:ARRAY ;Really a package
		     (UNLESS (TYPEP PKG 'PACKAGE)
		       (ERROR "Expected a package but got an array: ~S" PKG))
		    (FUNCALL (PKG-PREFIX-INTERN-FUNCTION PKG) PNAME PKG))
		   (:LIST
		    (MULTIPLE-VALUE-BIND (PACKAGE INTERNAL)
			(GET-PACKAGE-FROM-REFNAME-LIST PKG)
		      (FUNCALL (IF INTERNAL #'INTERN (PKG-PREFIX-INTERN-FUNCTION PACKAGE))
			       PNAME))))))
    (FORMAT T "  ~S" SYMBOL)			;PKG displayed adequately via BIN-NEXT-VALUE
    SYMBOL))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-VALUE-CELL-LOCATION (STREAM)
  (UNBIN-SHOW-VALUE (VALUE-CELL-LOCATION (BIN-NEXT-VALUE STREAM))))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-FDEFINITION-LOCATION (STREAM)
  (UNBIN-SHOW-VALUE (SYS:FDEFINITION-LOCATION (BIN-NEXT-VALUE STREAM) T)))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-STRING-IMMEDIATE (STREAM LENGTH)
  (UNBIN-SHOW-VALUE (LOAD-STRING STREAM LENGTH)))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-STRING (STREAM)
  (UNBIN-SHOW-VALUE (LOAD-STRING STREAM)))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-LIST-IMMEDIATE (STREAM LENGTH)
  (UNBIN-SHOW-VALUE (LOAD-LIST STREAM LENGTH)))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-LIST (STREAM)
  (UNBIN-SHOW-VALUE (LOAD-LIST STREAM)))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-LIST*-IMMEDIATE (STREAM LENGTH)
  (UNBIN-SHOW-VALUE (LOAD-LIST* STREAM LENGTH)))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-LIST* (STREAM)
  (UNBIN-SHOW-VALUE (LOAD-LIST* STREAM)))

(DEFUN UNBIN-NEW-LIST (STREAM DOTIFY LENGTH)
  (FORMAT T " ~A ~D [~O-~O]" (IF DOTIFY 'LIST* 'LIST) LENGTH
	  *BIN-LOAD-INDEX* (+ *BIN-LOAD-INDEX* LENGTH -1))
  (UNBIN-SHOW-VALUE (LOAD-NEW-LIST STREAM DOTIFY LENGTH)))

(DEFINE-UNBIN-COMMAND BIN-OP-INITIALIZE-LIST-IMMEDIATE (STREAM ARG)
  (UNBIN-NEW-LIST STREAM (LDB-TEST (BYTE 1 11.) ARG) (LDB (BYTE 11. 0) ARG)))

(DEFINE-UNBIN-COMMAND BIN-OP-INITIALIZE-LIST (STREAM)
  (UNBIN-NEW-LIST STREAM (BIN-NEXT-VALUE STREAM) (BIN-NEXT-VALUE STREAM)))

(DEFINE-UNBIN-COMMAND BIN-OP-32-BIT-FIXNUM (STREAM)
  (UNBIN-SHOW-VALUE (LET* ((LOW  (BIN-NEXT-BYTE STREAM))
			   (HIGH (BIN-NEXT-BYTE STREAM)))
		      (%LOGDPB HIGH (BYTE 16. 16.) LOW))))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-INTEGER (STREAM)
  (UNBIN-SHOW-VALUE (LOAD-INTEGER STREAM)))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-NEGATIVE-INTEGER (STREAM)
  (UNBIN-SHOW-VALUE (- (LOAD-INTEGER STREAM))))

(DEFINE-UNBIN-COMMAND BIN-OP-IEEE-SINGLE-FLOAT (STREAM)
  (UNBIN-SHOW-VALUE (LOAD-IEEE-SINGLE-FLOAT STREAM)))

(DEFINE-UNBIN-COMMAND BIN-OP-IEEE-DOUBLE-FLOAT (STREAM)
  (UNBIN-SHOW-VALUE (LOAD-IEEE-DOUBLE-FLOAT STREAM)))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-RATIO (STREAM)
  (UNBIN-SHOW-VALUE (SI:%MAKE-RATIONAL (BIN-NEXT-VALUE STREAM) (BIN-NEXT-VALUE STREAM))))

(DEFINE-UNBIN-COMMAND BIN-OP-COMPLEX (STREAM)
  (UNBIN-SHOW-VALUE (SI:%MAKE-COMPLEX (BIN-NEXT-VALUE STREAM) (BIN-NEXT-VALUE STREAM))))

;; --- If the counters in the dumper show this to be obsolete, remove before Release 8
(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-EXTENDED-NUMBER (STREAM)
  (UNBIN-SHOW-VALUE (LOAD-EXTENDED-NUMBER STREAM)))

;; --- If the counters in the dumper show this to be obsolete, remove before Release 8
(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-FLOAT (STREAM)
  (UNBIN-SHOW-VALUE (LOAD-FLOAT STREAM NIL)))

;; --- If the counters in the dumper show this to be obsolete, remove before Release 8
(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-NEGATIVE-FLOAT (STREAM)
  (UNBIN-SHOW-VALUE (LOAD-FLOAT STREAM T)))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-SMALL-CHARACTER (STREAM)
  (LET ((NUMBER (BIN-NEXT-VALUE STREAM)))
    (UNBIN-SHOW-VALUE (CODE-CHAR (LDB (BYTE 8 0) NUMBER) (LDB (BYTE 4 8) NUMBER)))))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-CHARACTER (STREAM)
  (LET* ((BITS (BIN-NEXT-VALUE STREAM))
	 (CHAR-SET (BIN-NEXT-VALUE STREAM))
	 (INDEX (BIN-NEXT-VALUE STREAM))
	 (STYLE (BIN-NEXT-VALUE STREAM))
	 (CHAR (CODE-CHAR (SEND CHAR-SET :DECODE-INDEX INDEX) BITS)))
    (SETF (CHAR-STYLE-INDEX CHAR) (STYLE-INDEX STYLE T))
    (UNBIN-SHOW-VALUE CHAR)))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-CHARACTER-STYLE (STREAM)
  (LET* ((FAMILY (BIN-NEXT-VALUE STREAM))
	 (FACE (BIN-NEXT-VALUE STREAM))
	 (SIZE (BIN-NEXT-VALUE STREAM))
	 (EXTENDED-ATTRIBUTES (BIN-NEXT-VALUE STREAM))
	 (STYLE (INTERN-CHARACTER-STYLE FAMILY FACE SIZE)))
    ;; Extended Attributes belong as an argument to INTERN-STYLE, above.
    ;; For now, we just preserve them, until INTERN-STYLE is fixed.
    (SETF (CS-EXTENDED-ATTRIBUTES STYLE) EXTENDED-ATTRIBUTES)
    (UNBIN-SHOW-VALUE STYLE)))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-CHARACTER-SET (STREAM)
  (LET ((NAME (BIN-NEXT-VALUE STREAM)))
    (UNBIN-SHOW-VALUE (LOOKUP-CHARACTER-SET NAME))))

(DEFINE-UNBIN-COMMAND BIN-OP-FORM (STREAM)
  (LET ((FORM (BIN-NEXT-VALUE STREAM)))
    `(**EVAL** ,FORM)))

(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-ARRAY (STREAM LENGTH)
  (UNBIN-SHOW-VALUE (LOAD-ARRAY STREAM LENGTH)))

#+3600
(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-L-COMPILED-FUNCTION (STREAM)
  (LET ((CCA (LOAD-L-COMPILED-FUNCTION STREAM T)))
    (UNBIN-SHOW-VALUE CCA)
    (L-LISP-COMPILER:DISASSEMBLE CCA)
    (TERPRI)
    CCA))

#+IMACH
(DEFINE-UNBIN-COMMAND-FOR-VALUE BIN-OP-I-COMPILED-FUNCTION (STREAM)
  (LET ((CCA (LOAD-I-COMPILED-FUNCTION STREAM T)))
    (UNBIN-SHOW-VALUE CCA)
    (I-LISP-COMPILER:DISASSEMBLE CCA)
    (TERPRI)
    CCA))

(DEFINE-UNBIN-COMMAND BIN-OP-MAKE-INSTANCE-IMMEDIATE (STREAM LENGTH)
  (LET ((FLAVOR-NAME (BIN-NEXT-VALUE STREAM))
	(INIT-PLIST (MAKE-LIST LENGTH)))
    (LOOP REPEAT LENGTH
	  FOR SLOT ON INIT-PLIST
	  DO (SETF (CAR SLOT) (BIN-NEXT-VALUE STREAM)))
    (UNBIN-SHOW-VALUE
      (UNBINNIFY-FORM `(MAKE-INSTANCE ,FLAVOR-NAME ,@INIT-PLIST)))))

#+IMach
(DEFINE-UNBIN-COMMAND BIN-OP-EMBEDDED-CONSTANT-IMMEDIATE (IGNORE OPERAND)
  (UNBIN-SHOW-VALUE
    (%SET-TAG
      (%POINTER-PLUS (CDAR *LOADING-COMPILED-FUNCTIONS*)
		     (- (LDB (BYTE 9 3) OPERAND)
			(DEFSTORAGE-SIZE COMPILED-FUNCTION)))
      (AREF #.(CL:MAKE-ARRAY 8 :ELEMENT-TYPE '(CL:UNSIGNED-BYTE 8)
			       :INITIAL-CONTENTS '(#.DTP-LIST		 ;0
						   #.DTP-LEXICAL-CLOSURE	 ;1
						   #.DTP-DYNAMIC-CLOSURE	 ;2
						   #.DTP-DOUBLE-FLOAT	 ;3
						   #.DTP-BIG-RATIO	 ;4
						   #.DTP-COMPLEX		 ;5
						   #.DTP-COMPILED-FUNCTION ;6
						   #.DTP-LOCATIVE))	 ;7 ... and no spares
	    (LDB (BYTE 3 0) OPERAND)))))

#+IMACH
(DEFINE-UNBIN-COMMAND BIN-OP-NATIVE-INSTRUCTION (STREAM)
  (UNBIN-SHOW-VALUE (LET* ((LOW  (BIN-NEXT-BYTE STREAM))
			   (HIGH (BIN-NEXT-BYTE STREAM)))
		      (%SET-TAG (%LOGDPB HIGH (BYTE 16. 16.) LOW) DTP-SPARE-IMMEDIATE-1))))

(DEFUN UNBINNIFY-FORM (X)
  (CONS (CAR X)
	(LOOP FOR SUBFORM IN (CDR X)
	      WHEN (AND (LISTP SUBFORM) (EQ (CAR SUBFORM) '**EVAL**))
	      COLLECT (CADR SUBFORM)
	      ELSE COLLECT `',SUBFORM)))

(DEFINE-UNBIN-COMMAND-FOR-EFFECT BIN-OP-FDEFINE (STREAM)
  (BIN-NEXT-VALUE STREAM)
  (BIN-NEXT-VALUE STREAM)
  )

(DEFINE-UNBIN-COMMAND BIN-OP-SETQ (STREAM)
  (BIN-NEXT-VALUE STREAM)
  (BIN-NEXT-VALUE STREAM)
  )

(DEFINE-UNBIN-COMMAND BIN-OP-PUTPROP (STREAM)
  (PROG2					;extract value
    (BIN-NEXT-VALUE STREAM)
    (BIN-NEXT-VALUE STREAM)
    (BIN-NEXT-VALUE STREAM)
    ))

(DEFINE-UNBIN-COMMAND-FOR-EFFECT BIN-OP-DEFCONST (STREAM LENGTH)
  (UNBIN-DEFCONST-1 STREAM LENGTH))

(DEFINE-UNBIN-COMMAND-FOR-EFFECT BIN-OP-DEFVAR (STREAM LENGTH)
  (UNBIN-DEFCONST-1 STREAM LENGTH))

(DEFUN UNBIN-DEFCONST-1 (STREAM LENGTH)
  (LOOP REPEAT LENGTH
	DO (BIN-NEXT-VALUE STREAM)))

(DEFINE-UNBIN-COMMAND-FOR-EFFECT BIN-OP-INITIALIZE-ARRAY (STREAM)
  (INITIALIZE-ARRAY STREAM))

(DEFINE-UNBIN-COMMAND-FOR-EFFECT BIN-OP-INITIALIZE-NUMERIC-ARRAY (STREAM)
  (INITIALIZE-NUMERIC-ARRAY STREAM))

(DEFINE-UNBIN-COMMAND BIN-OP-INITIALIZE-AND-RETURN-ARRAY (STREAM)
  (INITIALIZE-ARRAY STREAM))

(DEFINE-UNBIN-COMMAND BIN-OP-INITIALIZE-AND-RETURN-NUMERIC-ARRAY (STREAM)
  (INITIALIZE-NUMERIC-ARRAY STREAM))

(DEFINE-UNBIN-COMMAND BIN-OP-CONVERT-ARRAY-TO-FLOATING (STREAM)
  (CONVERT-ARRAY-TO-FLOATING STREAM))

