;;;-*- Mode:LISP; Package:si; Base:8. -*-
;;; Lisp machine binary file format definitions
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

;;; BIN file format:
;;; Commands are 16-bit bytes.
;;; The high 4 bits are the main command dispatch.
;;; The low 12 bits are an immediate operand.
;;; One high 4 command escapes the low 12 into a dispatch for the remainder.
;;; To make it a little easier to keep track of what is going on, commands in the
;;; low 12 bits do not overlap with the immediate opcode, even though these latter
;;; will never be called in their non-immediate form.

;;; Opcode definitions
(EVAL-WHEN (COMPILE LOAD EVAL)
(DEFSYSBYTE %%BIN-OP-HIGH 4 12.)		;DEFSYSBYTE so LDBs get open-coded
(DEFSYSBYTE %%BIN-OP-LOW 12. 0)
)			;These values can never be changed anyway

(DEFSUBST SIGN-EXTEND-IMMEDIATE-OPERAND (NUMBER)
  (IF (LDB-TEST (BYTE 1 13) NUMBER) (- NUMBER 1_14) NUMBER))

(EVAL-WHEN (COMPILE LOAD EVAL)
(DEFCONSTANT *NUMBER-OF-IMMEDIATE-OPS* (LSH 1 (LDB (BYTE 6 0) %%BIN-OP-HIGH)))
)

(DEFMACRO MAKE-BIN-OP-DISPATCH-TABLE ()
  `(MAKE-ARRAY 100))

(DEFMACRO BIN-OP-DISPATCH (TABLE NUMBER)
  `(AREF ,TABLE ,NUMBER))

(DEFMACRO STORE-BIN-OP-DISPATCH (VALUE TABLE NUMBER)
  `(ASET ,VALUE ,TABLE ,NUMBER))

(DEFPROP BIN-OP-DISPATCH
	 ((BIN-OP-DISPATCH TABLE NUMBER) . (STORE-BIN-OP-DISPATCH SI:VAL TABLE NUMBER))
	 SETF)

(DEFVAR *BIN-OP-COMMAND-NAME-TABLE* (MAKE-BIN-OP-DISPATCH-TABLE))

(DEFMACRO DEFINE-BIN-OP (NAME VALUE INDEX)
  `(PROGN 'COMPILE
     (EVAL-WHEN (COMPILE LOAD EVAL)
       (DEFCONSTANT ,NAME ,VALUE))
     (SETF (BIN-OP-DISPATCH *BIN-OP-COMMAND-NAME-TABLE* ,INDEX) ',NAME)))

(DEFMACRO DEFINE-IMMEDIATE-BIN-OP (NAME VALUE)
  `(DEFINE-BIN-OP ,NAME ,VALUE ,VALUE))

(DEFINE-IMMEDIATE-BIN-OP BIN-OP-NUMBER-IMMEDIATE 0)

(DEFINE-IMMEDIATE-BIN-OP BIN-OP-TABLE-FETCH-IMMEDIATE 1)

(DEFINE-IMMEDIATE-BIN-OP BIN-OP-STRING-IMMEDIATE 2)

(DEFINE-IMMEDIATE-BIN-OP BIN-OP-LIST-IMMEDIATE 3)
(DEFINE-IMMEDIATE-BIN-OP BIN-OP-LIST*-IMMEDIATE 4)

(DEFINE-IMMEDIATE-BIN-OP BIN-OP-ARRAY 5)

(DEFINE-IMMEDIATE-BIN-OP BIN-OP-DEFCONST 6)
(DEFINE-IMMEDIATE-BIN-OP BIN-OP-DEFVAR 7)

(DEFINE-IMMEDIATE-BIN-OP BIN-OP-MAKE-INSTANCE-IMMEDIATE 10)
#+IMach
(DEFINE-IMMEDIATE-BIN-OP BIN-OP-EMBEDDED-CONSTANT-IMMEDIATE 11)
(DEFINE-IMMEDIATE-BIN-OP BIN-OP-INITIALIZE-LIST-IMMEDIATE #o12)

(DEFINE-IMMEDIATE-BIN-OP BIN-OP-COMMAND-IMMEDIATE (1- *NUMBER-OF-IMMEDIATE-OPS*))

(DEFMACRO DEFINE-COMMAND-BIN-OP (NAME VALUE)
  `(DEFINE-BIN-OP ,NAME ,(DPB BIN-OP-COMMAND-IMMEDIATE %%BIN-OP-HIGH VALUE) ,VALUE))

(DEFINE-COMMAND-BIN-OP BIN-OP-FORM 20)
(DEFINE-COMMAND-BIN-OP BIN-OP-EOF 21)
(DEFINE-COMMAND-BIN-OP BIN-OP-FILE-ATTRIBUTE-LIST 22)
(DEFINE-COMMAND-BIN-OP BIN-OP-FORMAT-VERSION 23)
(DEFINE-COMMAND-BIN-OP BIN-OP-TABLE-FETCH 24)
(DEFINE-COMMAND-BIN-OP BIN-OP-TABLE-STORE 25)
(DEFINE-COMMAND-BIN-OP BIN-OP-SYMBOL 26)
(DEFINE-COMMAND-BIN-OP BIN-OP-PACKAGE-SYMBOL 27)

(DEFINE-COMMAND-BIN-OP BIN-OP-STRING 30)
(DEFINE-COMMAND-BIN-OP BIN-OP-LIST 31)
(DEFINE-COMMAND-BIN-OP BIN-OP-LIST* 32)
(DEFINE-COMMAND-BIN-OP BIN-OP-INTEGER 33)
(DEFINE-COMMAND-BIN-OP BIN-OP-NEGATIVE-INTEGER 34)
(DEFINE-COMMAND-BIN-OP BIN-OP-RATIO 35)
(DEFINE-COMMAND-BIN-OP BIN-OP-FLOAT 36)
(DEFINE-COMMAND-BIN-OP BIN-OP-NEGATIVE-FLOAT 37)

(DEFINE-COMMAND-BIN-OP BIN-OP-VALUE-CELL-LOCATION 40)
(DEFINE-COMMAND-BIN-OP BIN-OP-FDEFINITION-LOCATION 41)
(DEFINE-COMMAND-BIN-OP BIN-OP-FDEFINE 42)
(DEFINE-COMMAND-BIN-OP BIN-OP-SETQ 43)
(DEFINE-COMMAND-BIN-OP BIN-OP-PUTPROP 44)
(DEFINE-COMMAND-BIN-OP BIN-OP-L-COMPILED-FUNCTION 45)
;; Next two obsolete, keep around for several systems.
(DEFINE-COMMAND-BIN-OP BIN-OP-INITIALIZE-ARRAY 46)
(DEFINE-COMMAND-BIN-OP BIN-OP-INITIALIZE-NUMERIC-ARRAY 47)

(DEFINE-COMMAND-BIN-OP BIN-OP-TABLE-FETCH-MEDIUM 50)
(DEFINE-COMMAND-BIN-OP BIN-OP-INITIALIZE-AND-RETURN-ARRAY 51)
(DEFINE-COMMAND-BIN-OP BIN-OP-INITIALIZE-AND-RETURN-NUMERIC-ARRAY 52)

(DEFINE-COMMAND-BIN-OP BIN-OP-SMALL-CHARACTER 53)
(DEFINE-COMMAND-BIN-OP BIN-OP-CHARACTER 54)

(DEFINE-COMMAND-BIN-OP BIN-OP-EXTENDED-NUMBER 55)

(DEFINE-COMMAND-BIN-OP BIN-OP-CONVERT-ARRAY-TO-FLOATING 56)

(DEFINE-COMMAND-BIN-OP BIN-OP-TABLE-FETCH-LARGE 57)
(DEFINE-COMMAND-BIN-OP BIN-OP-CHARACTER-STYLE 60)
(DEFINE-COMMAND-BIN-OP BIN-OP-CHARACTER-SET 61)

(DEFINE-COMMAND-BIN-OP BIN-OP-32-BIT-FIXNUM 62)
(DEFINE-COMMAND-BIN-OP BIN-OP-IEEE-SINGLE-FLOAT 63)
(DEFINE-COMMAND-BIN-OP BIN-OP-IEEE-DOUBLE-FLOAT 64)
(DEFINE-COMMAND-BIN-OP BIN-OP-COMPLEX 65)
(DEFINE-COMMAND-BIN-OP BIN-OP-I-COMPILED-FUNCTION #o66)
(DEFINE-COMMAND-BIN-OP BIN-OP-PACKAGE #o67)
(DEFINE-COMMAND-BIN-OP BIN-OP-TABLE-STORE-INITIALIZER #o70)
(DEFINE-COMMAND-BIN-OP BIN-OP-INITIALIZE-LIST #o71)
(DEFINE-COMMAND-BIN-OP BIN-OP-NATIVE-INSTRUCTION #o72)

(DEFCONSTANT %%I-COMPILED-FUNCTION-TYPE-FROM-TAG (BYTE 1. 8.))
(DEFCONSTANT %%I-COMPILED-FUNCTION-IMMEDIATE (BYTE 1. 9.))
(DEFCONSTANT %%I-COMPILED-FUNCTION-RELATIVE (BYTE 1. 10.))

;;; Currently supported version number
(DEFCONST *VERSION-NUMBER* 5)

;;; Loading variables
(DEFVAR *NO-VALUE-MARKER* (NCONS 'NO-VALUE))
(DEFVAR *BIN-NEXT-COMMAND-FUNCTION*)
(DEFVAR *BIN-DEFINITION-FORWARD-REFERENCE-ALIST*)

(DEFVAR SI:FASL-GENERIC-PATHNAME-PLIST)		;No one else seems to declare this

(DEFMACRO BIN-NEXT-COMMAND (&REST ARGS)
  `(FUNCALL *BIN-NEXT-COMMAND-FUNCTION* . ,ARGS))

(DEFVAR *BIN-LOAD-TABLE*)
(DEFVAR *BIN-LOAD-TABLE-LENGTH*)
(DEFVAR *BIN-LOAD-INDEX*)
(DEFVAR *BIN-LOAD-PACKAGE*)
(DEFVAR *BIN-LOAD-SYNTAX*)
(DEFVAR *BIN-LOAD-STREAM-BUFFERED-P*)
(DEFVAR *LOADING-COMPILED-FUNCTIONS*)

(DEFMACRO SETF-BIN-NEXT-VALUE (PLACE STREAM)
  `(LET* ((*BIN-LOCATION-BEING-SET* (LOCF ,PLACE))
	  (.BIN-NEXT-VALUE. (BIN-NEXT-VALUE ,STREAM)))
     (RPLACD *BIN-LOCATION-BEING-SET* .BIN-NEXT-VALUE.)
     .BIN-NEXT-VALUE.))

(DEFMACRO LOADING-BIN-FILE ((STREAM PATHNAME NEXT-COMMAND-FUNCTION
				    &OPTIONAL PATHNAME-PLIST SKIP-READING-ATTRIBUTE-LIST)
			    &BODY BODY)
  `(LOADING-BIN-FILE-INTERNAL ,STREAM ,NEXT-COMMAND-FUNCTION
			      #'(LAMBDA (,PATHNAME ,(OR PATHNAME-PLIST 'IGNORE)) ,@BODY)
			      ,SKIP-READING-ATTRIBUTE-LIST))

(DEFMACRO DEFINE-BIN-COMMAND-OP (OP-NAME DEFINING-FUNCTION TABLE FUNCTION-PREFIX ARGLIST
				 &BODY DEFINITION)
  (LET ((FUNCTION-NAME (LET (#+IMACH (DEFAULT-CONS-AREA WORKING-STORAGE-AREA))
			 (INTERN (STRING-APPEND FUNCTION-PREFIX OP-NAME)))))
    `(PROGN 'COMPILE
       (RECORD-SOURCE-FILE-NAME ',OP-NAME ',DEFINING-FUNCTION)
       (LOCAL-DECLARE ((SYS:FUNCTION-PARENT ,OP-NAME ,DEFINING-FUNCTION))
	 (DEFUN ,FUNCTION-NAME ,ARGLIST . ,DEFINITION))
       (SETF (BIN-OP-DISPATCH ,TABLE (LDB %%BIN-OP-LOW ,OP-NAME)) #',FUNCTION-NAME))))

(DEFMACRO WITH-DECODED-BIN-OPCODE ((HIGH LOW) WORD &BODY BODY &ENVIRONMENT ENV)
  (ONCE-ONLY (WORD &ENVIRONMENT ENV)
    `(LET ((,HIGH (LDB %%BIN-OP-HIGH ,WORD))
	   (,LOW (LDB %%BIN-OP-LOW ,WORD)))
       (IF (= ,HIGH BIN-OP-COMMAND-IMMEDIATE)
	   (SETQ ,HIGH ,LOW ,LOW NIL))
       . ,BODY)))

;Replaced by above WITH-DECODED-BIN-OPCODE
;(DEFUN DECODE-BIN-OPCODE (WORD)
;  (LET ((HIGH (LDB %%BIN-OP-HIGH WORD))
;	(LOW (LDB %%BIN-OP-LOW WORD)))
;    (IF (= HIGH BIN-OP-COMMAND-IMMEDIATE) LOW
;	(VALUES HIGH LOW))))

;;; Dumping variables

(DEFVAR *BIN-DUMP-TABLE*)
(DEFVAR *BIN-DUMP-INDEX*)
(DEFVAR *BIN-DUMP-PACKAGE*)
(DEFVAR *BIN-DUMP-SYNTAX* NIL);Initialized for now in case some existing caller doesn't know to bind it

(DEFVAR *BIN-DUMP-NO-LIST-SHARING* NIL)

(DEFMACRO WRITING-BIN-FILE ((STREAM FILE &KEY NO-TABLE-P SET-LOAD-DEFAULT-P)
			    &BODY BODY)
  `(WRITING-BIN-FILE-1 #'(NAMED-LAMBDA WRITING-BIN-FILE (,STREAM)
			   (WRITING-BIN-STREAM (,STREAM ,@(AND NO-TABLE-P
							       `(:NO-TABLE-P ,NO-TABLE-P)))
			     ,@BODY))
		       ,FILE ,SET-LOAD-DEFAULT-P))

(DEFMACRO WRITING-BIN-STREAM ((STREAM &KEY NO-TABLE-P) &BODY BODY)
  `(WRITING-BIN-STREAM-1 #'(NAMED-LAMBDA WRITING-BIN-STREAM (,STREAM)
			     ,@BODY)
			 ,STREAM ,@(AND NO-TABLE-P `(,NO-TABLE-P))))
