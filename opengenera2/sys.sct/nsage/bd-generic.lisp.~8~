;;; -*- Syntax: Common-lisp; Mode: LISP; Base: 10; Package: NSAGE -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

(define-book-design D,#TD1PsT[Begin using 006 escapes](1 0 (NIL 0) (NIL :BOLD NIL) "CPTFONTCB")generic-generic0 ()
  (use page-heading-environments
       section-heading-environments
       table-of-contents-environments
       numbered-sections other-counters
       standard-collectors
       user-visible-environments
       facecode-environments
       defline)
  )

(define-book-design 1generic-screen0 ()
  (use generic-generic
       screen-inner-styles)
  (first
    ;; To calculate Paper-Width: multiply inside width of DEX viewer pane
    ;; (in pixels) by *microns-per-screen-pixel* and divide the result by
    ;; *microns-per-inch*.
    (envr (text
	    (Paper-Width "6.38in")
	    (LeftMargin ".58in")
	    (RightMargin ".5in")))
    (envr (text (Indent "0")
		 (Use BodyStyle)
		 (Justification On)		;turned off by 1initialize-generic-screen
0		 (LeftMargin 0)
		 (RightMargin 0)
		 (Spaces Compact)
		(Font BodyFont)
		 (FaceCode R)
		 ))
    (init
      initialize-generic-screen)))

(defparameter *min-screen-pixels-per-line* 200)
(defparameter *max-screen-pixels-per-line* 638)
(defparameter *screen-margin-in-inches* 1.08)

(defun 1initialize-generic-screen0 ()
  (sage-command () 'style '((leading "2 pixels")))
  (sage-command () 'style '((justification nil)))
  (sage-command () 'pageheading `((odd T) (immediate T)))
  (sage-command () 'pageheading `((Even T) (immediate T)))
  (sage-command () 'pagefooting '((immediate T)))
  (sage-command () 'style '((date "March 1952")))
  (sage-command () 'style '((hyphenation T) (hyphenbreak T)))
  (sage-command () 'style '((hide-undefined-tags T)))
  (sage-command () 'style `((linewidth
			      ,(format nil "~2$in"
				       (- (* (max *min-screen-pixels-per-line* 
						  (min *max-screen-pixels-per-line* 
						       (send *terminal-io* :inside-width)))
					     (/ *microns-per-screen-pixel*
						*microns-per-inch*))
					  *screen-margin-in-inches*))))))

(define-book-design 1generic-dex0 ()
  (use generic-screen))

(define-book-design 1generic-dex-background0 ()
  (use generic-dex))

(define-book-design 1generic-paper0 ()
  (use generic-generic)
  (first
    (envr (text
	    (Paper-Width "8.5in")
	    (LeftMargin "8picas")
	    (RightMargin "8picas")
	    (TopMargin "8picas")
	    (BottomMargin "6picas")
	    ))
    (envr (Text (Indent "0")
		(Use BodyStyle)
		(Spaces Compact)
		(Font BodyFont)
		(FaceCode R)))
    (init
      initialize-generic-paper)))

(defun 1initialize-generic-paper0 ()
  (macrolet ((in (&body body)
	       `(making-sage-directives () (idirs ,@body)))
	     (page ()
	       `(in (envr (transparent font smallbodyfont facecode i) "Page " (value page)))))
    (sage-command () 'pageheading `((odd T) (right ,(page))))
    (sage-command () 'pageheading `((even T) (right ,(page))))
    (sage-command () 'pagefooting '((immediate T)))
    (sage-command () 'style '((justification t)))
    (sage-command () 'style '((date "March 1952")))
    (sage-command () 'style '((hyphenation T) (hyphenbreak T)))))

(define-book-design 1generic-lgp20 ()
  (use generic-paper
       lgp2-inner-styles))

#||
(define-book-design 1generic-lgp10 ()
  (use generic-paper
       lgp1-inner-styles))
||#

(define-book-design 1generic-dmp10 ()
  (use generic-paper
       dmp1-inner-styles))


(note-book-design-specifics 'generic 'generic 'generic-generic)
(note-book-design-specifics 'generic :screen 'generic-screen)
(note-book-design-specifics 'generic :dex 'generic-dex)
(note-book-design-specifics 'generic :dex-background 'generic-dex-background)

(note-book-design-specifics 'generic :lgp2 'generic-lgp2)
;;(note-book-design-specifics 'generic :lgp1 'generic-lgp1)
(note-book-design-specifics 'generic :dmp1 'generic-dmp1)

