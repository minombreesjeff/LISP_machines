;;; -*- Mode: LISP; Syntax: ANSI-Common-Lisp; Package: CLOS-INTERNALS; Base: 10 -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

;;; Class definitions are ordered so that each class's direct-superclasses will have already
;;; been defined.

(IN-PACKAGE :CLOS-INTERNALS)

#+Genera
(DEFMACRO ALLOW-TYPE-REDEFINITION (&REST CLASSES)
  `(PROGN
     ,@(MAPCAR #'(LAMBDA (CLASS)
		   `(SI:ALLOW-REDEFINITION ',CLASS 'DEFTYPE))
	       CLASSES)))

#+Genera
(ALLOW-TYPE-REDEFINITION
  T
  CHARACTER
  SYMBOL
  ARRAY
  SEQUENCE
  VECTOR
  STRING
  BIT-VECTOR
  LIST
  NULL
  CONS
  LOCATIVE
  NUMBER
  #+IGNORE REAL
  FLOAT
  SINGLE-FLOAT
  DOUBLE-FLOAT
  RATIONAL
  INTEGER
  FIXNUM
  BIGNUM
  RATIO
  #+IMACH SYS:BIG-RATIO
  #+IMACH SYS:SMALL-RATIO
  COMPLEX
  FUNCTION
  SYS:COMPILED-FUNCTION
  SYS:DYNAMIC-CLOSURE
  SYS:LEXICAL-CLOSURE
  REAL
  PACKAGE
  READTABLE
  )

(DEFINE-BUILT-IN-CLASS T ())

#+CLOE-Runtime
(DEFINE-BUILT-IN-CLASS SYS::IMMOBJ (T))

(DEFINE-BUILT-IN-CLASS CHARACTER (#+CLOE-Runtime SYS::IMMOBJ #-CLOE-Runtime T))

(DEFINE-BUILT-IN-CLASS SYMBOL (T))

(DEFINE-BUILT-IN-CLASS ARRAY (T))

(DEFINE-BUILT-IN-CLASS SEQUENCE (T))

(DEFINE-BUILT-IN-CLASS VECTOR (ARRAY SEQUENCE))

(DEFINE-BUILT-IN-CLASS STRING (VECTOR))

(DEFINE-BUILT-IN-CLASS BIT-VECTOR (VECTOR))

#+Genera
(DEFINE-BUILT-IN-CLASS PACKAGE (VECTOR))

#+Genera
(DEFINE-BUILT-IN-CLASS READTABLE (ARRAY))

(DEFINE-BUILT-IN-CLASS LIST (SEQUENCE))

(DEFINE-BUILT-IN-CLASS NULL (SYMBOL LIST))

(DEFINE-BUILT-IN-CLASS CONS (LIST))

#+(OR Genera Minima)
(DEFINE-BUILT-IN-CLASS LOCATIVE (T))

(DEFINE-BUILT-IN-CLASS NUMBER (T))

(DEFINE-BUILT-IN-CLASS REAL (NUMBER))

(DEFINE-BUILT-IN-CLASS FLOAT (REAL))

#+(OR NIL)
(DEFINE-BUILT-IN-CLASS SHORT-FLOAT (FLOAT))

#+(OR Genera CLOE-Runtime Minima NIL)
(DEFINE-BUILT-IN-CLASS SINGLE-FLOAT (FLOAT))

#+(OR Genera Minima NIL)
(DEFINE-BUILT-IN-CLASS DOUBLE-FLOAT (FLOAT))

#+(OR NIL)
(DEFINE-BUILT-IN-CLASS LONG-FLOAT (FLOAT))

(DEFINE-BUILT-IN-CLASS RATIONAL (REAL))

(DEFINE-BUILT-IN-CLASS INTEGER (RATIONAL))

(DEFINE-BUILT-IN-CLASS FIXNUM (INTEGER))

(DEFINE-BUILT-IN-CLASS BIGNUM (INTEGER))

(DEFINE-BUILT-IN-CLASS RATIO (RATIONAL))

#+IMACH
(DEFINE-BUILT-IN-CLASS SYS:BIG-RATIO (RATIO))

#+IMACH
(DEFINE-BUILT-IN-CLASS SYS:SMALL-RATIO (RATIO))

(DEFINE-BUILT-IN-CLASS COMPLEX (NUMBER))

#+Minima
(DEFINE-BUILT-IN-CLASS IVORY::PC (T))

#+Minima
(DEFINE-BUILT-IN-CLASS IVORY::PHYSICAL-ADDRESS (T))

(DEFINE-BUILT-IN-CLASS FUNCTION (T))

#+Genera
;;; In Genera, SYS:COMPILED-FUNCTION means DTP-COMPILED-FUNCTION, which is not the
;;; same thing as what ANSI Common Lisp refers to as COMPILED-FUNCTION.
(DEFINE-BUILT-IN-CLASS SYS:COMPILED-FUNCTION (FUNCTION))

#+Minima
(DEFINE-BUILT-IN-CLASS IVORY::COMPILED-CODE (FUNCTION))

#+Genera
(DEFINE-BUILT-IN-CLASS SYS:DYNAMIC-CLOSURE (FUNCTION))

#+Genera
(DEFINE-BUILT-IN-CLASS SYS:LEXICAL-CLOSURE (FUNCTION))

#+Minima
(DEFINE-BUILT-IN-CLASS IVORY::LEXICAL-CLOSURE (FUNCTION))

#+CLOE-Runtime
(DEFINE-BUILT-IN-CLASS SYS::TRAMPOLINE (FUNCTION))

#+CLOE-Runtime
(DEFINE-BUILT-IN-CLASS SYS::LEXICAL-CLOSURE (SYS::TRAMPOLINE))

#+CLOE-Runtime
(DEFINE-BUILT-IN-CLASS SYS::SIMPLE-FUNCTION (FUNCTION))

#+(OR Genera Minima)
(DEFINE-BUILT-IN-CLASS GENERIC-FUNCTION-SELECTOR (FUNCTION))

#+Genera
(DEFCLASS MESSAGE-PASSING-MIXIN
	  (T)
    ()
  (:METACLASS METHOD-ONLY-CLASS))

(DEFCLASS STANDARD-OBJECT
	  (#+Genera MESSAGE-PASSING-MIXIN T)
    ()
  #+Genera (:DEFAULT-INITARGS STORAGE-AREA SYS:*DEFAULT-CONS-AREA*)
  #+CLOE-Runtime (:DEFAULT-INITARGS STORAGE-AREA SYS::AKIND$K-DEFAULT)
  #+Minima (:DEFAULT-INITARGS STORAGE-AREA T)
  )

(DEFCLASS META-OBJECT
	  (STANDARD-OBJECT)
    ()
  )

(DEFCLASS FUNCALLABLE-INSTANCE
	  (META-OBJECT #+CLOE-Runtime SYS::TRAMPOLINE #-CLOE-Runtime FUNCTION)
    (#+(OR Genera Minima)
     (FUNCALLABLE-INSTANCE)
     (NAME :INITFORM NIL))
  (:METACLASS FUNCALLABLE-STANDARD-CLASS)
  )

(DEFCLASS DISPATCHING-FUNCALLABLE-INSTANCE
	  (FUNCALLABLE-INSTANCE)
    ()
  (:METACLASS FUNCALLABLE-STANDARD-CLASS)
  )

(DEFCLASS GENERIC-FUNCTION
	  (DISPATCHING-FUNCALLABLE-INSTANCE)
    ()
  (:METACLASS FUNCALLABLE-STANDARD-CLASS)
  )

(DEFCLASS STANDARD-GENERIC-FUNCTION
      (GENERIC-FUNCTION)
      (;; These are aligned with the fields of a Flavors Generic Function
       (NAME
	 :READER GENERIC-FUNCTION-NAME
	 :READER FUNCTION-NAME-OBJECT)
       (LAMBDA-LIST
	 :READER GENERIC-FUNCTION-LAMBDA-LIST)
       (DEBUGGING-INFO
	 :READER GENERIC-FUNCTION-DEBUGGING-INFO
	 :INITFORM NIL)
       (METHOD-COMBINATION
	 :READER GENERIC-FUNCTION-METHOD-COMBINATION)
       (FLAGS
	 :INITFORM (DPB 1 (BYTE 1 11.) 0))
       (METHODS
	 :INITFORM NIL
	 :READER GENERIC-FUNCTION-METHODS)
       #+Genera
       (SELECTOR
	 :INITFORM NIL
	 :READER GENERIC-FUNCTION-SELECTOR)
       ;; These are specific to CLOS
       (TABLE
	 :ACCESSOR DISPATCHING-FUNCALLABLE-INSTANCE-TABLE
	 :INITFORM NIL)
       (PRECEDENCE-ORDER
	 :READER DISPATCHING-FUNCALLABLE-INSTANCE-PRECEDENCE-ORDER)
       (INITIAL-METHODS
	 :READER GENERIC-FUNCTION-INITIAL-METHODS
	 :INITFORM NIL)
       (METHOD-CLASS
	 :READER GENERIC-FUNCTION-METHOD-CLASS)
       (MAPPING-TABLE-FAMILIES
	 :READER GENERIC-FUNCTION-MAPPING-TABLE-FAMILIES
	 :INITFORM NIL))
  (:METACLASS FUNCALLABLE-STANDARD-CLASS))

(DEFCLASS METHOD
	  (META-OBJECT)
    ()
  )

(DEFCLASS STANDARD-METHOD
	  (METHOD BASIC-FUNCTION-NAME)
    ((GENERIC-FUNCTION
       :READER METHOD-GENERIC-FUNCTION
       :INITFORM NIL)
     (LAMBDA-LIST
       :READER METHOD-LAMBDA-LIST)
     #+Genera
     ;; This is a function spec of the form (METHOD ...).
     (FUNCTION-PARENT)
     (CELL
       :READER METHOD-FUNCTION)
     ;; A list of classes or list of the form (EQL value)
     (SPECIALIZERS
       :READER METHOD-SPECIALIZERS)
     (QUALIFIERS
       :READER METHOD-QUALIFIERS)
     (DOCUMENTATION
       :ACCESSOR DOCUMENTATION-OBJECT
       :INITFORM NIL)
     ;; T if we care about the next method, NIL otherwise.
     (NO-NEXT-METHOD-INFORMATION
       :READER METHOD-NO-NEXT-METHOD-INFORMATION
       :INITARG NO-NEXT-METHOD-INFORMATION
       :INITFORM NIL)
     (MAPPING-TABLE-FAMILY
       :READER METHOD-MAPPING-TABLE-FAMILY
       :INITARG METHOD-MAPPING-TABLE-FAMILY
       :INITFORM NIL)
     #+Genera
     ;; For the disassembler, keep around the list of mapped argument names.
     (MAPPING-TABLE-ARGUMENTS
       :READER METHOD-MAPPING-TABLE-ARGUMENTS
       :INITFORM NIL)
     ;; Bit position k is 1 iff argument k uses mapped slot access.
     (MAPPED-ARGUMENTS-BITMAP
       :READER METHOD-MAPPED-ARGUMENTS-BITMAP
       :INITARG METHOD-MAPPED-ARGUMENTS-BITMAP
       :INITFORM 0))
  )

(DEFCLASS STANDARD-ACCESSOR-METHOD
	  (STANDARD-METHOD)
    ((SLOT-NAME
       :READER METHOD-SLOT-NAME
       :INITARG :SLOT-NAME))
  )

(DEFCLASS STANDARD-READER-METHOD
	  (STANDARD-ACCESSOR-METHOD)
    ()
  )

(DEFCLASS STANDARD-WRITER-METHOD
	  (STANDARD-ACCESSOR-METHOD)
    ()
  )

#+(OR Genera Minima)
(DEFCLASS STANDARD-LOCATOR-METHOD
	  (STANDARD-ACCESSOR-METHOD)
    ()
  )

(DEFCLASS METHOD-COMBINATION-DEFINITION
	  (META-OBJECT)
    ((NAME
       :READER METHOD-COMBINATION-DEFINITION-NAME
       :INITARG :NAME)
     (DOCUMENTATION
       :ACCESSOR DOCUMENTATION-OBJECT
       :INITARG :DOCUMENTATION))
  )

(DEFCLASS SHORT-FORM-METHOD-COMBINATION-DEFINITION
	  (METHOD-COMBINATION-DEFINITION)
    ((OPERATOR
       :READER METHOD-COMBINATION-DEFINITION-OPERATOR
       :INITARG :OPERATOR)
     (IDENTITY-WITH-ONE-ARGUMENT
       :READER METHOD-COMBINATION-DEFINITION-IDENTITY-WITH-ONE-ARGUMENT
       :INITARG :IDENTITY-WITH-ONE-ARGUMENT))
  )

(DEFCLASS LONG-FORM-METHOD-COMBINATION-DEFINITION
	  (METHOD-COMBINATION-DEFINITION)
    ((METHOD-GROUPS
       :READER METHOD-COMBINATION-DEFINITION-METHOD-GROUPS
       :INITARG METHOD-GROUPS)
     (FUNCTION
       :READER METHOD-COMBINATION-DEFINITION-FUNCTION
       :INITARG :FUNCTION)
     (ARGUMENTS-LAMBDA-LIST
       :READER METHOD-COMBINATION-DEFINITION-ARGUMENTS-LAMBDA-LIST
       :INITARG :ARGUMENTS-LAMBDA-LIST))
  )

(DEFCLASS METHOD-COMBINATION
	  (META-OBJECT)
    ()
  )

(DEFCLASS STANDARD-METHOD-COMBINATION
	  (METHOD-COMBINATION)
    ((TYPE
       :READER METHOD-COMBINATION-TYPE
       :INITARG :TYPE)
     (OPTIONS
       :READER METHOD-COMBINATION-OPTIONS
       :INITARG :OPTIONS))
  )

(DEFCLASS SLOT-DEFINITION
	  (META-OBJECT)
    ((NAME
       :READER SLOT-DEFINITION-NAME)
     (INITFORM
       :READER SLOT-DEFINITION-INITFORM)
     (INITFUNCTION
       :READER SLOT-DEFINITION-INITFUNCTION)
     ;; INITFORM-INLINABLE encodes the dependency of INITFORM on its lexical environment
     ;; and its side-effects status:
     ;;  NIL - the INITFUNCTION must be called because of a lexical environment dependency
     ;;  CONSTANT - the INITFORM is a constant
     ;;  SPECIAL - the INITFORM is a special-variable reference
     ;;  SIMPLE - the INITFORM neither causes nor sees side-effects
     ;;  READER - the INITFORM might see side-effects but does not cause them
     ;;  WRITER - the INITFORM might cause side-effects
     (INITFORM-INLINABLE :INITFORM NIL
	 :READER SLOT-DEFINITION-INITFORM-INLINABLE)
     (TYPE
       :READER SLOT-DEFINITION-TYPE)
     (ALLOCATION
       :READER SLOT-DEFINITION-ALLOCATION)
     (INITARGS
       :READER SLOT-DEFINITION-INITARGS)
     (DOCUMENTATION
       :ACCESSOR DOCUMENTATION-OBJECT))
  )

(DEFCLASS STANDARD-SLOT-DEFINITION
	  (SLOT-DEFINITION)
    ()
    )

(DEFCLASS DEFSTRUCT-SLOT-DESCRIPTOR ()
    ((NAME :INITARG :NAME :READER SLOT-DEFINITION-NAME)
     (INITFORM :INITFORM NIL :INITARG :INITFORM :READER SLOT-DEFINITION-INITFORM)
     (INITFORM-INLINABLE :INITFORM 'CONSTANT :INITARG INITFORM-INLINABLE :READER SLOT-DEFINITION-INITFORM-INLINABLE)
     (INITFUNCTION :INITFORM NIL :INITARG :INITFUNCTION :READER SLOT-DEFINITION-INITFUNCTION)
     (TYPE :INITFORM T :INITARG :TYPE :READER SLOT-DEFINITION-TYPE)
     (LOCATION :INITARG :LOCATION :READER SLOT-DEFINITION-LOCATION)
     (READ-ONLY :INITFORM NIL :INITARG SLOT-READ-ONLY :READER SLOT-DEFINITION-READ-ONLY-P)
     (SIZE :INITFORM 1 :INITARG SLOT-SIZE :READER SLOT-DEFINITION-SIZE)
     #+(OR Genera Minima)
     (LOCATABLE :INITFORM NIL :INITARG SLOT-LOCATABLE :READER SLOT-DEFINITION-LOCATABLE-P)
     #+(OR Genera Minima)
     (ACCESSOR :INITFORM NIL :INITARG SLOT-ACCESSOR :READER SLOT-DEFINITION-ACCESSOR)
     )
  )

(DEFCLASS DIRECT-SLOT-DEFINITION
	  (SLOT-DEFINITION)
    ((READERS
       :READER SLOT-DEFINITION-READERS)
     (WRITERS
       :READER SLOT-DEFINITION-WRITERS)
     #+(OR Genera Minima)
     (LOCATORS
       :READER SLOT-DEFINITION-LOCATORS)
     (METHODS
       :READER SLOT-DEFINITION-METHODS))
  )

(DEFCLASS EFFECTIVE-SLOT-DEFINITION
	  (SLOT-DEFINITION)
    ((LOCATION
       :ACCESSOR SLOT-DEFINITION-LOCATION
       :INITARG :LOCATION))
  )

(DEFCLASS STANDARD-DIRECT-SLOT-DEFINITION
	  (STANDARD-SLOT-DEFINITION DIRECT-SLOT-DEFINITION)
    ()
  )

(DEFCLASS STRUCTURE-SLOT-DEFINITION (DEFSTRUCT-SLOT-DESCRIPTOR EFFECTIVE-SLOT-DEFINITION)
    ((ALLOCATION :INITFORM :INSTANCE)
     (INITARGS :INITFORM NIL))
  )

(DEFCLASS STANDARD-DIRECT-CLASS-SLOT-DEFINITION
	  (STANDARD-DIRECT-SLOT-DEFINITION)
    ((LOCATION
       :READER SLOT-DEFINITION-LOCATION
       :INITFORM NIL))
  )

(DEFCLASS STANDARD-EFFECTIVE-SLOT-DEFINITION
	  (STANDARD-SLOT-DEFINITION EFFECTIVE-SLOT-DEFINITION)
    ()
  )

(DEFCLASS CLASS
	  (META-OBJECT)
    ((CONSTRUCTORS
       :INITFORM NIL
       :ACCESSOR CLASS-CONSTRUCTORS))
  #+Genera
  ;; Put these in static space so the GC doesn't move them around, which
  ;; would cause the function-spec hash tables to get rehashed a lot
  (:DEFAULT-INITARGS STORAGE-AREA *CLOS-STATIC-AREA*))

(DEFCLASS CLOS-CLASS
	  (CLASS)
    ((INSTANCE-INFORMATION
       :READER CLASS-INSTANCE-INFORMATION)
     (NAME
       :ACCESSOR CLASS-NAME :INITFORM NIL)
     (DIRECT-SUPERCLASSES
       :READER CLASS-DIRECT-SUPERCLASSES
       :INITFORM NIL)
     (DIRECT-SUBCLASSES
       :READER CLASS-DIRECT-SUBCLASSES
       :INITFORM NIL)
     (PROTOTYPE
       :READER CLASS-PROTOTYPE)
     (DOCUMENTATION
       :ACCESSOR DOCUMENTATION-OBJECT
       :INITFORM NIL))
  )

(DEFCLASS BUILT-IN-CLASS
	  (CLOS-CLASS)
    ()
  )

(DEFCLASS METHOD-ONLY-CLASS
	  (CLOS-CLASS)
    ()
  )

(DEFCLASS BASIC-DEFSTRUCT-DESCRIPTOR ()
    ((NAME :INITARG NAME :READER CLASS-NAME)
     (DOCUMENTATION :INITARG :DOCUMENTATION :READER DOCUMENTATION-OBJECT)
     (STANDARD-CONSTRUCTOR :INITARG STANDARD-CONSTRUCTOR :INITFORM NIL)
     #+(OR Genera Minima)
     (FUNCTIONS :INITFORM NIL :INITARG FUNCTIONS :READER DEFSTRUCT-DESCRIPTOR-FUNCTIONS))
  )

(DEFCLASS STRUCTURE-CLASS (BASIC-DEFSTRUCT-DESCRIPTOR CLOS-CLASS)
    ((PRINT-FUNCTION :INITARG PRINT-FUNCTION :INITFORM NIL))
  )

(DEFCLASS STRUCTURE-OBJECT
	  (#+Genera MESSAGE-PASSING-MIXIN T)
    ()
  (:METACLASS STRUCTURE-CLASS))

(DEFCLASS FORWARD-REFERENCED-CLASS
	  (CLOS-CLASS)
    ()
  )

(DEFCLASS MAPPED-CLASS-MIXIN (CLASS)
    ((MAPPING-TABLES
       ;; These are the mapping tables to this class, i.e. the ones which will become
       ;; invalid if this class' instances are made obsolete.
       :INITFORM NIL
       :ACCESSOR CLASS-MAPPING-TABLES))
  )

;;; Metaclass of classes that correspond to a flavor.
;;; An instance of FLAVOR-CLASS is created for a flavor the first time it is needed.
;;; This has some of the same slots and methods as CLOS-CLASS, but not all of them,
;;; because we get some of the information from the flavor instead.
;;; The %INSTANCE-INFORMATION-CLASS of one of these is the flavor name, not the class object.
;;;
;;; Note that there is no (SETF CLASS-NAME) method since we can't rename these
;;; Note that there is no SHARED-INITIALIZE :AFTER method because these classes
;;; do not get created or re-created by DEFCLASS, and don't get passed initialization
;;; arguments for :DIRECT-SUPERCLASSES and :DOCUMENTATION
;;; ADD-DIRECT-SUBCLASS will blow up, but should never be called
;;; (SETF CLASS-NAME) :AFTER will do something terrible, but should never be called
;;; ENSURE-CLASS-USING-CLASS will never be called, I hope
;;; REMOVE-DIRECT-SUBCLASS will blow up, but should never be called
;;; CLASS-DEFAULT-DIRECT-SUPERCLASSES should never be called
;;; No applicable method for FINALIZE-INHERITANCE, later see if we need one
#+Genera
(DEFCLASS FLAVOR-CLASS (MAPPED-CLASS-MIXIN CLASS)
    ((NAME
       :READER CLASS-NAME :INITARG :NAME)))

(DEFCLASS STANDARD-CLASS
	  (MAPPED-CLASS-MIXIN CLOS-CLASS)
    ((DIRECT-DEFAULT-INITARGS
       :READER CLASS-DIRECT-DEFAULT-INITARGS)
     (DEFAULT-INITARGS)
     (BITS
       :INITFORM 0
       :READER CLASS-BITS)
     (DIRECT-SLOTS
       :READER CLASS-DIRECT-SLOTS)
     (SHARED-SLOTS
       :INITFORM NIL
       :READER CLASS-SHARED-SLOTS)
     (MAKE-INSTANCE-KEYWORDS
       :INITFORM NIL
       :ACCESSOR CLASS-MAKE-INSTANCE-KEYWORDS)
     (KEYWORD-CONSTRUCTOR))
  )

(DEFCLASS FUNCALLABLE-STANDARD-CLASS
	  (STANDARD-CLASS)
    ()
  )

(DEFCLASS INSTANCE-FUNCTION-NAME
	  ()
    ()
  )

(DEFCLASS BASIC-CELL
	  ()
    ((CELL)))

(DEFCLASS BASIC-FUNCTION-NAME
	  (BASIC-CELL INSTANCE-FUNCTION-NAME)
    ())

(DEFCLASS FUNCTION-NAME-WITH-PLIST-MIXIN
	  ()
    ((PLIST
       :INITFORM NIL
       :ACCESSOR FUNCTION-NAME-PLIST)))

;;; When method combination shares combined method code, it will use a
;;; MISCELLANEOUS-FUNCTION to hold the function, and to serve as the function name.
(DEFCLASS MISCELLANEOUS-FUNCTION
	  (FUNCTION-NAME-WITH-PLIST-MIXIN BASIC-FUNCTION-NAME)
    ((LAMBDA-EXPRESSION :INITARG :LAMBDA-EXPRESSION)
     (NAME :INITARG :NAME :INITFORM NIL)))

;;; When method combination does not share combined method code, it will use one of
;;; these to hold the function and to serve as the function name.
(DEFCLASS COMBINED-METHOD
	  (FUNCTION-NAME-WITH-PLIST-MIXIN BASIC-FUNCTION-NAME)
    ((GENERIC-FUNCTION :INITARG :GENERIC-FUNCTION)
     (SPECIALIZERS :INITARG :SPECIALIZERS)
     (INTERNAL :INITARG :INTERNAL)))

;;; A constructor that takes positional arguments, called by an optimized
;;; call to MAKE-INSTANCE of a constant class with constant keywords
;;; This is a function whose function-spec is `(CONSTRUCTOR ,CONSTRUCTOR)
(DEFCLASS POSITIONAL-CONSTRUCTOR
	  (FUNCTION-NAME-WITH-PLIST-MIXIN BASIC-FUNCTION-NAME)
    ((CLASS :TYPE (OR CLASS SYMBOL) :INITARG :CLASS :READER CONSTRUCTOR-CLASS)
     (INITARGS :TYPE LIST :INITARG :INITARGS :READER CONSTRUCTOR-INITARGS)
     (KEYS-P :INITARG :KEYS-P :READER CONSTRUCTOR-KEYS-P)
     (INTERNAL-P :INITFORM NIL :INITARG :INTERNAL-P :READER CONSTRUCTOR-INTERNAL-P)
     (TRAPPING-FUNCTION)			;makes the real constructor function on first call
     (DEFAULT-FUNCTION))			;escape hatch if a real constructor function can't be made
  #+Genera
  ;; Put these in static space so the GC doesn't move them around, which
  ;; would cause the function-spec hash tables to get rehashed a lot
  (:DEFAULT-INITARGS STORAGE-AREA *CLOS-STATIC-AREA*))

(SETQ *T-CLASS* (FIND-CLASS T))


(INITIALIZE-CLOS-3)
