;;; -*- Mode: LISP; Syntax: ANSI-Common-Lisp; Package: CLOS-INTERNALS; Base: 10 -*-
;;;>
;;;> *****************************************************************************************
;;;> ** (c) Copyright 1998-1982 Symbolics, Inc.  All rights reserved.
;;;> ** Portions of font library Copyright (c) 1984 Bitstream, Inc.  All Rights Reserved.
;;;>
;;;>    The software, data, and information contained herein are proprietary to,
;;;> and comprise valuable trade secrets of, Symbolics, Inc., which intends 
;;;> to keep such software, data, and information confidential and to preserve them
;;;> as trade secrets.  They are given in confidence by Symbolics pursuant 
;;;> to a written license agreement, and may be used, copied, transmitted, and stored
;;;> only in accordance with the terms of such license.
;;;> 
;;;> Symbolics, Symbolics 3600, Symbolics 3675, Symbolics 3630, Symbolics 3640,
;;;> Symbolics 3645, Symbolics 3650, Symbolics 3653, Symbolics 3620, Symbolics 3610,
;;;> Zetalisp, Open Genera, Virtual Lisp Machine, VLM, Wheels, Dynamic Windows,
;;;> SmartStore, Semanticue, Frame-Up, Firewall, Document Examiner,
;;;> Delivery Document Examiner, "Your Next Step in Computing", Ivory, MacIvory,
;;;> MacIvory model 1, MacIvory model 2, MacIvory model 3, XL400, XL1200, XL1201,
;;;> Symbolics UX400S, Symbolics UX1200S, NXP1000, Symbolics C, Symbolics Pascal,
;;;> Symbolics Prolog, Symbolics Fortran, CLOE, CLOE Application Generator,
;;;> CLOE Developer, CLOE Runtime, Common Lisp Developer, Symbolics Concordia,
;;;> Joshua, Statice, and Minima are trademarks of Symbolics, Inc.
;;;> 
;;;> Symbolics 3670, Symbolics Common Lisp, Symbolics-Lisp, and Genera are registered
;;;> trademarks of Symbolics, Inc.
;;;>
;;;> GOVERNMENT PURPOSE RIGHTS LEGEND
;;;> 
;;;>      Contract No.: various
;;;>      Contractor Name: Symbolics, Inc.
;;;>      Contractor Address: c/o Ropes & Gray
;;;> 			 One International Place
;;;> 			 Boston, Massachusetts 02110-2624
;;;>      Expiration Date: 2/27/2018
;;;>      
;;;> The Government's rights to use, modify, reproduce, release, perform, display or
;;;> disclose this software are restricted by paragraph (b)(2) of the "Rights in
;;;> Noncommercial Computer Software and Noncommercial Computer Software Documentation"
;;;> contained in the above identified contracts.  No restrictions apply after the
;;;> expiration date shown above.  Any reproduction of the software or portions thereof
;;;> marked with this legend must also reproduce the markings.  Questions regarding
;;;> the Government's rights may be referred to the AS&T Contracts Office of the
;;;> National Reconnaissance Office, Chantilly, Virginia 20151-1715.
;;;> 
;;;>      Symbolics, Inc.
;;;>      c/o Ropes & Gray
;;;>      One International Place
;;;>      Boston, Massachusetts 02110-2624
;;;>      781-937-7655
;;;>
;;;> *****************************************************************************************
;;;>

(IN-PACKAGE :CLOS-INTERNALS)

;;; These are the generic functions in 88-002R Draft Submitted to X3J13 June 1988
(DEFGENERIC ADD-METHOD (GENERIC-FUNCTION METHOD))
(DEFGENERIC CHANGE-CLASS (INSTANCE NEW-CLASS))
(DEFGENERIC CLASS-NAME (CLASS))
(DEFGENERIC (SETF CLASS-NAME) (NEW-NAME CLASS))
(DEFGENERIC COMPUTE-APPLICABLE-METHODS (GENERIC-FUNCTION ARGUMENTS))
(DEFGENERIC DESCRIBE-OBJECT (OBJECT STREAM))
(DEFGENERIC DOCUMENTATION (OBJECT &OPTIONAL DOC-TYPE))
(DEFGENERIC (SETF DOCUMENTATION) (NEW-DOCUMENTATION OBJECT &OPTIONAL DOC-TYPE))
(DEFGENERIC FIND-METHOD (GENERIC-FUNCTION METHOD-QUALIFIERS SPECIALIZERS &OPTIONAL ERRORP))
(DEFGENERIC FUNCTION-KEYWORDS (METHOD))
(DEFGENERIC INITIALIZE-INSTANCE (INSTANCE &KEY &ALLOW-OTHER-KEYS))
(DEFGENERIC MAKE-INSTANCE (CLASS &KEY &ALLOW-OTHER-KEYS))
(DEFGENERIC MAKE-INSTANCES-OBSOLETE (CLASS))
(DEFGENERIC METHOD-QUALIFIERS (METHOD))
(DEFGENERIC NO-APPLICABLE-METHOD (GENERIC-FUNCTION &REST FUNCTION-ARGUMENTS))
(DEFGENERIC NO-NEXT-METHOD (GENERIC-FUNCTION METHOD &REST ARGS))
(DEFGENERIC PRINT-OBJECT (OBJECT STREAM))
(DEFGENERIC REINITIALIZE-INSTANCE (INSTANCE &KEY &ALLOW-OTHER-KEYS))
(DEFGENERIC REMOVE-METHOD (GENERIC-FUNCTION METHOD))
(DEFGENERIC SHARED-INITIALIZE (INSTANCE SLOT-NAMES &KEY &ALLOW-OTHER-KEYS))
(DEFGENERIC SLOT-MISSING (CLASS OBJECT SLOT-NAME OPERATION &OPTIONAL NEW-VALUE))
(DEFGENERIC SLOT-UNBOUND (CLASS INSTANCE SLOT-NAME))
(DEFGENERIC UPDATE-INSTANCE-FOR-DIFFERENT-CLASS (PREVIOUS CURRENT &KEY &ALLOW-OTHER-KEYS))
(DEFGENERIC UPDATE-INSTANCE-FOR-REDEFINED-CLASS
	    (INSTANCE ADDED-SLOTS DISCARDED-SLOTS PROPERTY-LIST
		      &KEY &ALLOW-OTHER-KEYS))

;;; These are the generic functions in 89-003 MOP Draft number 10
(DEFGENERIC ADD-DEPENDENT (METAOBJECT DEPENDENT))
(DEFGENERIC ADD-DIRECT-METHOD (SPECIALIZER METHOD))
(DEFGENERIC ADD-DIRECT-SUBCLASS (SUPERCLASS SUBCLASS))
(DEFGENERIC ALLOCATE-INSTANCE (CLASS &REST INITARGS))
(DEFGENERIC APPLY-METHOD-FUNCTION
	    (GENERIC-FUNCTION METHOD METHOD-FUNCTION NEXT-METHODS ARGUMENTS))
(DEFGENERIC CLASS-DEFAULT-INITARGS (CLASS))
(DEFGENERIC CLASS-DIRECT-DEFAULT-INITARGS (CLASS))
(DEFGENERIC CLASS-DIRECT-METHODS (CLASS))
(DEFGENERIC CLASS-DIRECT-SLOTS (CLASS))
(DEFGENERIC CLASS-DIRECT-SUBCLASSES (CLASS))
(DEFGENERIC CLASS-DIRECT-SUPERCLASSES (CLASS))
(DEFGENERIC CLASS-FINALIZED-P (CLASS))
(DEFGENERIC CLASS-PRECEDENCE-LIST (CLASS))
(DEFGENERIC CLASS-PROTOTYPE (CLASS))
(DEFGENERIC CLASS-SLOTS (CLASS))
(DEFGENERIC COMPUTE-CLASS-PRECEDENCE-LIST (CLASS))
(DEFGENERIC COMPUTE-DISCRIMINATING-FUNCTION (GENERIC-FUNCTION))
(DEFGENERIC COMPUTE-EFFECTIVE-METHOD (GENERIC-FUNCTION METHOD-COMBINATION METHODS))
(DEFGENERIC COMPUTE-EFFECTIVE-METHOD-1 (GENERIC-FUNCTION METHODS ARGUMENT-FUNCTION))
(DEFGENERIC COMPUTE-EFFECTIVE-SLOT-DEFINITION (CLASS NAME DIRECT-SLOT-DEFINITIONS))
(DEFGENERIC COMPUTE-SLOTS (CLASS))
(DEFGENERIC DEFAULT-INITARGS (CLASS INITARGS))
(DEFGENERIC DIRECT-SLOT-DEFINITION-CLASS (CLASS CANONICALIZED-SLOT-SPECIFICATION))
(DEFGENERIC ENSURE-CLASS-USING-CLASS
	    (CLASS NAME &KEY METACLASS ENVIRONMENT DIRECT-SUPERCLASSES &ALLOW-OTHER-KEYS))
(DEFGENERIC ENSURE-GENERIC-FUNCTION-USING-CLASS
	    (GENERIC-FUNCTION FUNCTION-SPECIFIER
	     &KEY GENERIC-FUNCTION-CLASS ENVIRONMENT &ALLOW-OTHER-KEYS))
(DEFGENERIC EFFECTIVE-SLOT-DEFINITION-CLASS (CLASS))
(DEFGENERIC FINALIZE-INHERITANCE (CLASS))
(DEFGENERIC FIND-METHOD-COMBINATION
	    (GENERIC-FUNCTION METHOD-COMBINATION-TYPE METHOD-COMBINATION-OPTIONS))
(DEFGENERIC GENERIC-FUNCTION-ARGUMENT-PRECEDENCE-ORDER (GENERIC-FUNCTION))
(DEFGENERIC GENERIC-FUNCTION-DECLARATIONS (GENERIC-FUNCTION))
(DEFGENERIC GENERIC-FUNCTION-INITIAL-METHODS (GENERIC-FUNCTION))
(DEFGENERIC GENERIC-FUNCTION-LAMBDA-LIST (GENERIC-FUNCTION))
(DEFGENERIC GENERIC-FUNCTION-METHOD-CLASS (GENERIC-FUNCTION))
(DEFGENERIC GENERIC-FUNCTION-METHOD-COMBINATION (GENERIC-FUNCTION))
(DEFGENERIC GENERIC-FUNCTION-METHODS (GENERIC-FUNCTION))
(DEFGENERIC GENERIC-FUNCTION-NAME (GENERIC-FUNCTION))
(DEFGENERIC MAKE-METHOD-LAMBDA
	    (GENERIC-FUNCTION METHOD LAMBDA-EXPRESSION &OPTIONAL ENVIRONMENT))
(DEFGENERIC MAP-DEPENDENTS (METAOBJECT FUNCTION))
(DEFGENERIC METHOD-FUNCTION (METHOD))
(DEFGENERIC METHOD-GENERIC-FUNCTION (METHOD))
(DEFGENERIC METHOD-LAMBDA-LIST (METHOD))
(DEFGENERIC METHOD-SPECIALIZERS (METHOD))

;;; Bitmap of arguments which use mapping table
(DEFGENERIC METHOD-MAPPED-ARGUMENTS-BITMAP (METHOD))

;;; The mapping table arguments (for disassembler) associated with ths method.
#+Genera
(DEFGENERIC METHOD-MAPPING-TABLE-ARGUMENTS (METHOD))

;;; The mapping table family currently associated with this method.
(DEFGENERIC METHOD-MAPPING-TABLE-FAMILY (METHOD))
(DEFGENERIC METHOD-SLOT-NAME (ACCESSOR-METHOD))
(DEFGENERIC METHOD-COMBINATION-TYPE (METHOD-COMBINATION))
(DEFGENERIC METHOD-COMBINATION-OPTIONS (METHOD-COMBINATION))
(DEFGENERIC REMOVE-DEPENDENT (METAOBJECT DEPENDENT))
(DEFGENERIC REMOVE-DIRECT-METHOD (SPECIALIZER METHOD))
(DEFGENERIC REMOVE-DIRECT-SUBCLASS (SUPERCLASS SUBCLASS))
(DEFGENERIC SLOT-BOUNDP-USING-CLASS (CLASS OBJECT SLOT-NAME))
(DEFGENERIC SLOT-DEFINITION-NAME (SLOT-DEFINITION))
(DEFGENERIC SLOT-DEFINITION-INITFORM (SLOT-DEFINITION))
(DEFGENERIC SLOT-DEFINITION-INITFUNCTION (SLOT-DEFINITION))
(DEFGENERIC SLOT-DEFINITION-TYPE (SLOT-DEFINITION))
(DEFGENERIC SLOT-DEFINITION-ALLOCATION (SLOT-DEFINITION))
(DEFGENERIC SLOT-DEFINITION-INITARGS (SLOT-DEFINITION))
(DEFGENERIC SLOT-DEFINITION-READERS (DIRECT-SLOT-DEFINITION))
(DEFGENERIC SLOT-DEFINITION-WRITERS (DIRECT-SLOT-DEFINITION))
(DEFGENERIC SLOT-DEFINITION-LOCATION (EFFECTIVE-SLOT-DEFINITION))
(DEFGENERIC (SETF SLOT-DEFINITION-LOCATION) (NEW-LOCATION EFFECTIVE-SLOT-DEFINITION))
(DEFGENERIC SLOT-EXISTS-P-USING-CLASS (CLASS OBJECT SLOT-NAME))
(DEFGENERIC SLOT-MAKUNBOUND-USING-CLASS (CLASS OBJECT SLOT-NAME))
(DEFGENERIC SLOT-VALUE-USING-CLASS (CLASS OBJECT SLOT-NAME))
(DEFGENERIC (SETF SLOT-VALUE-USING-CLASS) (NEW-VALUE CLASS OBJECT SLOT-NAME))
(DEFGENERIC SPECIALIZER-DIRECT-GENERIC-FUNCTIONS (SPECIALIZER))
(DEFGENERIC SPECIALIZER-DIRECT-METHODS (SPECIALIZER))
(DEFGENERIC UPDATE-DEPENDENT (METAOBJECT DEPENDENT &REST REINITARGS))
(DEFGENERIC VALIDATE-GENERIC-FUNCTION-CLASS-CHANGE (GENERIC-FUNCTION PROTOTYPE-OF-NEW-CLASS))
(DEFGENERIC VALIDATE-METACLASS-CHANGE (CLASS PROTOTYPE-OF-NEW-CLASS))
(DEFGENERIC VALIDATE-SUPERCLASS (CLASS SUPERCLASS))

;;; Additional ANSI Generic Functions

(DEFGENERIC MAKE-LOAD-FORM (OBJECT))
(DEFGENERIC MAKE-LOAD-FORM-SAVING-SLOTS (OBJECT &OPTIONAL SAVE-SLOTS))


;;; These are additional generic functions in the Symbolics implementation
#+(OR Genera Minima)
(DEFGENERIC (LOCF SLOT-VALUE-USING-CLASS) (CLASS OBJECT SLOT-NAME))

(DEFGENERIC ADD-MAPPING-TABLE (CLASS MAPPING-TABLE))
(DEFGENERIC ALLOCATE-SLOT-VECTOR (CLASS #+Genera AREA))
(DEFGENERIC ARGLIST-OBJECT (FUNCALLABLE-INSTANCE))

;;; The SHARED-INITIALIZE :AFTER method for CLOS-CLASS will call
;;; CHECK-CLASS-OPTIONS to check the various initialization arguments
;;; before it starts modifying the various internal CLOS tables.
;;; CHECK-CLASS-OPTIONS should do all required error checking.
(DEFGENERIC CHECK-CLASS-OPTIONS (CLASS SLOT-NAMES &KEY &ALLOW-OTHER-KEYS)
  (:METHOD-COMBINATION PROGN))

(DEFGENERIC CLASS-BITS (CLASS))
(DEFGENERIC CLASS-DEFAULT-DIRECT-SUPERCLASSES (CLASS &KEY ENVIRONMENT))
(DEFGENERIC CLASS-CONSTRUCTORS (CLASS))
(DEFGENERIC (SETF CLASS-CONSTRUCTORS) (CONSTRUCTORS CLASS))
(DEFGENERIC CLASS-INSTANCE-INFORMATION (CLASS))
(DEFGENERIC CLASS-INITIALIZED-P (CLASS))
(DEFGENERIC CLASS-MAKE-INSTANCE-KEYWORDS (CLASS))
(DEFGENERIC (SETF CLASS-MAKE-INSTANCE-KEYWORDS) (KEYWORDS CLASS))
(DEFGENERIC CLASS-MAPPING-TABLES (CLASS))
(DEFGENERIC (SETF CLASS-MAPPING-TABLES) (MAPPING-TABLE CLASS))
(DEFGENERIC CLASS-NAME-PROPER-P (CLASS))
(DEFGENERIC CLASS-NAME-FOR-TYPE-OF (CLASS))
(DEFGENERIC CLASS-EQL-IS-EQ-P (CLASS))
(DEFGENERIC CLASS-OBSOLETE-DISPATCH-TABLE (CLASS))
(DEFGENERIC CLASS-SHARED-SLOTS (CLASS))
(DEFGENERIC COMPUTE-DEFAULT-INITARGS (CLASS))
(DEFGENERIC COMPUTE-PROTOTYPE (CLASS))
(DEFGENERIC COMPUTE-SLOT-VECTOR-SIZE (CLASS SLOTS))
(DEFGENERIC CONSTRUCTOR-CLASS (CONSTUCTOR))
(DEFGENERIC CONSTRUCTOR-INITARGS (CONSTUCTOR))
(DEFGENERIC CONSTRUCTOR-INTERNAL-P (CONSTRUCTOR))
(DEFGENERIC CONSTRUCTOR-KEYS-P (CONSTRUCTOR))
(DEFGENERIC CONSTRUCTOR-FDEFINITION (CONSTRUCTOR))
(DEFGENERIC (SETF CONSTRUCTOR-FDEFINITION) (NEW-VALUE CONSTRUCTOR))
(DEFGENERIC COPY-INSTANCE-USING-CLASS (CLASS INSTANCE))
;;; Defined later, for bootstrapping purposes
;(DEFGENERIC DEBUGGING-INFORMATION-FUNCTION (FUNCTION))
(DEFGENERIC DEFAULT-ARGUMENTS (CLASS INITARGS))
(DEFGENERIC DISPATCHING-FUNCALLABLE-INSTANCE-SELECTOR (DISPATCHING-FUNCALLABLE-INSTANCE))
(DEFGENERIC DISPATCHING-FUNCALLABLE-INSTANCE-FROM-SELECTOR (SELECTOR))
(DEFGENERIC DISPATCHING-FUNCALLABLE-INSTANCE-TABLE (FUNCALLABLE-INSTANCE))
(DEFGENERIC DISPATCHING-FUNCALLABLE-INSTANCE-PRECEDENCE-ORDER (FUNCALLABLE-INSTANCE))
(DEFGENERIC DOCUMENTATION-OBJECT (OBJECT))
(DEFGENERIC (SETF DOCUMENTATION-OBJECT) (NEW-DOCUMENTATION OBJECT))
(DEFGENERIC ENSURE-CLASS-INITIALIZATION-INFORMATION (CLASS))
(DEFGENERIC ENSURE-CONSTRUCTOR-FUNCTION (CONSTRUCTOR))
(DEFGENERIC ENSURE-EXISTING-INSTANCES-WILL-GET-UPDATED (CLASS OLD-INFORMATION))
(DEFGENERIC EQUIVALENT-METHOD-P (METHOD1 METHOD2))
(DEFGENERIC FIND-POSITIONAL-CONSTRUCTOR (CLASS INITARGS &OPTIONAL KEYS-P))
#+Genera
(DEFGENERIC FORMAT-SELF (INSTANCE STREAM)
  (:SELECTOR :FORMAT-SELF))

;;; The best guess at the current definition of the function name.
#+Genera
(DEFGENERIC FUNCTION-NAME-CURRENT-DEFINITION (FUNCTION-NAME))

;;; Function name refers to the "current" definition
#+Genera
(DEFGENERIC FUNCTION-NAME-CURRENT-P (FUNCTION-NAME))

(DEFGENERIC FUNCTION-NAME-OBJECT (FUNCALLABLE-INSTANCE))

;;; Given a method object, return the function spec naming it
(DEFGENERIC FUNCTION-SPEC-OBJECT (METHOD-OBJECT))

;;; called by (:property clos:method sys:function-spec-handler)
;;; values are parent and parent definition type.
;;; This is used to find the defining form which defined the method object.
(DEFGENERIC FUNCTION-PARENT-OBJECT (METHOD-OBJECT))

(DEFGENERIC (SETF DISPATCHING-FUNCALLABLE-INSTANCE-TABLE) (NEW-TABLE FUNCALLABLE-INSTANCE))

;;; Makes a form that FUNCALLs or APPLYs FUNCTION using the argument passing conventions
;;; appropriate for the generic function.  Also see GENERIC-FUNCTION-MAKE-LAMBDA, which
;;; makes a lambda expression that accepts arguments in this format.
(DEFGENERIC GENERIC-FUNCTION-CALL-FORM
	    (GENERIC-FUNCTION FUNCALL-OR-APPLY FUNCTION EXTRA-ARGUMENT &REST ARGUMENTS))

(DEFGENERIC GENERIC-FUNCTION-DEBUGGING-INFO (GENERIC-FUNCTION))

;;; Will be true when the generic function has been explicitly defined (as with
;;; DEFGENERIC) as opposed to implicitly defined (as by a DEFMETHOD).
(DEFGENERIC GENERIC-FUNCTION-EXPLICITLY-DEFINED-P (GENERIC-FUNCTION))
(DEFGENERIC (SETF GENERIC-FUNCTION-EXPLICITLY-DEFINED-P) (NEW-VALUE GENERIC-FUNCTION))

(DEFGENERIC GENERIC-FUNCTION-INITIALIZED-P (GENERIC-FUNCTION))
(DEFGENERIC (SETF GENERIC-FUNCTION-INITIALIZED-P) (NEW-VALUE GENERIC-FUNCTION))

;;; Converts a lambda expression and an extra argument variable name into a format
;;; appropriate for the generic function's argument passing conventions.  Also see
;;; GENERIC-FUNCTION-CALL-FORM, which passes arguments in this format.
(DEFGENERIC GENERIC-FUNCTION-MAKE-LAMBDA
	    (GENERIC-FUNCTION EXTRA-ARGUMENT-VARIABLE LAMBDA-LIST BODY))

(DEFGENERIC GENERIC-FUNCTION-MAPPING-TABLE-FAMILIES (GENERIC-FUNCTION))

;;; Returns an appropriate function name and extra argument for a call
;;; to NO-NEXT-METHOD.
(DEFGENERIC GENERIC-FUNCTION-NO-APPLICABLE-METHOD-FUNCTION-NAME-AND-EXTRA-ARGUMENT
	    (GENERIC-FUNCTION))

(DEFGENERIC GENERIC-FUNCTION-SELECTOR (GENERIC-FUNCTION))
(DEFGENERIC LAMBDA-LIST-CONGRUENT-P
	    (GENERIC-FUNCTION LAMBDA-LIST &OPTIONAL GENERIC-FUNCTION-LAMBDA-LIST))
(DEFGENERIC MAP-ALL-CLASS-COMPONENTS (CLASS FUNCTION STOP-CLASS))
(DEFGENERIC MAP-OVER-CLASS-AND-ITS-SUBCLASSES (CLASS FUNCTION))

;;; Returns the lambda list derived from the method combination's :ARGUMENTS option.
(DEFGENERIC METHOD-COMBINATION-ARGUMENTS-LAMBDA-LIST (METHOD-COMBINATION))

(DEFGENERIC METHOD-COMBINATION-DEFINITION-FUNCTION (METHOD-COMBINATION-DEFINITION))
(DEFGENERIC METHOD-COMBINATION-DEFINITION-NAME (METHOD-COMBINATION-DEFINITION))
(DEFGENERIC METHOD-COMBINATION-DEFINITION-OPERATOR (METHOD-COMBINATION-DEFINITION))
(DEFGENERIC METHOD-COMBINATION-DEFINITION-IDENTITY-WITH-ONE-ARGUMENT
	    (METHOD-COMBINATION-DEFINITION))
(DEFGENERIC METHOD-COMBINATION-DEFINITION-METHOD-GROUPS (METHOD-COMBINATION-DEFINITION))
(DEFGENERIC METHOD-COMBINATION-DEFINITION-ARGUMENTS-LAMBDA-LIST
	    (METHOD-COMBINATION-DEFINITION))

;;; Returns an appropriate function name and extra argument suitable for
;;; calling the method.
;;;
;;; GENERIC-FUNCTION should be a generic function.
;;;
;;; METHOD should be a "method" that can appear in a CALL-METHOD form in a method
;;; combination.  This includes ordinary methods as well as lists whose CAR is
;;; MAKE-METHOD.
;;;
;;; NEXT-METHOD-FUNCTION is a function of no arguments.  When called, it will return a
;;; function name and extra argument value appropriate for CALL-NEXT-METHOD.
;;; The function should obey the calling conventions appropriate for the
;;; generic function (for example, see GENERIC-FUNCTION-MAKE-LAMBDA and
;;; GENERIC-FUNCTION-CALL-FORM).
;;;
;;; ARGUMENT-FUNCTION is a function of two arguments, a type and an argument number
;;; (N) which must be greater than or equal to 0 and less than the number
;;; of required arguments for the generic function.  The type is one of:
;;;
;;;    CLASS -- Return the most specific class for the Nth argument.  The class T is
;;;    returned if the argument class will not be known.
;;;
;;;    EQL -- If a value EQL to the Nth argument is known, returns T and something EQL
;;;    to the Nth argument.  Otherwise returns NIL and NIL.
;;;
;;; KEYS is the list of keywords passed to GENERATE-COMBINED-METHOD.
(DEFGENERIC METHOD-FUNCTION-NAME-AND-EXTRA-ARGUMENT
	    (GENERIC-FUNCTION METHOD NEXT-METHOD-FUNCTION ARGUMENT-FUNCTION &REST KEYS)
  #+Genera (DECLARE (VALUES FUNCTION-NAME EXTRA-ARGUMENT)))

(DEFGENERIC METHOD-MAPPING-TABLE (METHOD ARGUMENT-FUNCTION))
(DEFGENERIC METHOD-NO-NEXT-METHOD-INFORMATION (METHOD))
#+Genera
(DEFGENERIC NOTE-CLASS-CHANGE-FOR-DW (CLASS))
#+Genera
(DEFGENERIC NOTE-CLASS-INITIALIZATION-FUNCTIONS (CLASS))
(DEFGENERIC NOTICE-CLASS-NAME-CHANGE (CLASS))
(DEFGENERIC PRINT-STRUCTURE-OBJECT-USING-CLASS (CLASS OBJECT STREAM))
(DEFGENERIC PROPERTY-LIST-OBJECT (OBJECT))
(DEFGENERIC (SETF PROPERTY-LIST-OBJECT) (NEW-VALUE OBJECT))
(DEFGENERIC RECOMBINE-METHODS (CLASS UPDATEP OLD-INFORMATION))

;;; Returns a function name and extra argument suitable for accessing
;;; the slot location LOCATION in an instance of CLASS.  METHOD should
;;; be an accessor method.  The function should obey the calling
;;; conventions appropriate for the generic function (for example, see
;;; GENERIC-FUNCTION-MAKE-LAMBDA and GENERIC-FUNCTION-CALL-FORM).
(DEFGENERIC SLOT-ACCESSOR-NAME-AND-EXTRA-ARGUMENT-USING-CLASS
	    (GENERIC-FUNCTION METHOD CLASS LOCATION)
  #+Genera (DECLARE (VALUES FUNCTION EXTRA-ARGUMENT)))

(DEFGENERIC SLOT-DEFINITION-INITFORM-INLINABLE (SLOT-DEFINITION))
(DEFGENERIC SLOT-DEFINITION-LOCATORS (SLOT))
(DEFGENERIC SLOT-DEFINITION-METHODS (SLOT))
(DEFGENERIC SLOT-DEFINITION-READ-ONLY-P (SLOT))
(DEFGENERIC SLOT-DEFINITION-SIZE (SLOT))
#+(OR Genera Minima)
(DEFGENERIC SLOT-DEFINITION-LOCATABLE-P (SLOT))
#+(OR Genera Minima)
(DEFGENERIC SLOT-DEFINITION-ACCESSOR (SLOT))
(DEFGENERIC SLOT-READER-USING-CLASS (CLASS LOCATION))
(DEFGENERIC SLOT-WRITER-USING-CLASS (CLASS LOCATION))
(DEFGENERIC SOURCE-FILE-OBJECT (OBJECT))
(DEFGENERIC (SETF SOURCE-FILE-OBJECT) (NEW-SOURCE-FILE OBJECT))
(DEFGENERIC UPDATE-INSTANCE-USING-CLASS (CLASS INSTANCE &REST INITARGS &KEY &ALLOW-OTHER-KEYS))

#+(OR Genera Minima)
(DEFGENERIC DEFSTRUCT-DESCRIPTOR-FUNCTIONS (DEFSTRUCT-DESCRIPTOR))

(DEFGENERIC COMPUTE-SLOT-METHODS (CLASS ENVIRONMENT))

;;; Instance function spec support

#+Genera
(DEFGENERIC DECODE-SLOT-LOCATIVE (INSTANCE LOCATION))

;;; Returns a function which can handle function spec operations.
#+(OR Genera CLOE-Runtime)
(DEFGENERIC FUNCTION-SPEC-TYPE (FUNCTION-NAME)
  #+Genera (:SELECTOR :FUNCTION-SPEC-TYPE)
  )

#+Genera
(DEFGENERIC (:PROPERTY INSTANCE-FUNCTION-NAME SI:FUNCTION-SPEC-HANDLER)
	    (FUNCTION FUNCTION-NAME &OPTIONAL ARG1 ARG2))

#+CLOE-Runtime
(DEFGENERIC INSTANCE-FUNCTION-NAME-HANDLER (OP FUNCTION-NAME &OPTIONAL ARG1 ARG2))

(DEFGENERIC FUNCTION-NAME-DEFINITION (FUNCTION-NAME &OPTIONAL ENVIRONMENT))
(DEFGENERIC (SETF FUNCTION-NAME-DEFINITION) (DEFINITION FUNCTION-NAME &OPTIONAL ENVIRONMENT))
#+Minima
(DEFGENERIC (LOCF FUNCTION-NAME-DEFINITION) (FUNCTION-NAME))
(DEFGENERIC FUNCTION-NAME-BOUNDP (FUNCTION-NAME &OPTIONAL ENVIRONMENT))
(DEFGENERIC FUNCTION-NAME-MAKUNBOUND (FUNCTION-NAME))
#+Genera
(DEFGENERIC FUNCTION-NAME-DEFINITION-LOCATION (FUNCTION-NAME))
#+Genera
(DEFGENERIC FUNCTION-NAME-DEFINITION-HAS-LOCATION-P (FUNCTION-NAME))
#+Genera
(DEFGENERIC FUNCTION-NAME-FORWARD-FUNCTION-CELL-INTO-COMPILED-FUNCTION-P (FUNCTION-NAME))
#+Genera
(DEFGENERIC FUNCTION-NAME-FUNCTION-PARENT (FUNCTION-NAME))
(DEFGENERIC FUNCTION-NAME-GET (FUNCTION-NAME INDICATOR))
(DEFGENERIC (SETF FUNCTION-NAME-GET) (VALUE FUNCTION-NAME INDICATOR))
#+Genera
(DEFGENERIC FUNCTION-NAME-LOCATION-IS-DEFINITION-LOCATION-P (FUNCTION-NAME LOCATION))
(DEFGENERIC FUNCTION-NAME-PLIST (FUNCTION-NAME))
(DEFGENERIC (SETF FUNCTION-NAME-PLIST) (NEW-PLIST FUNCTION-NAME))
(DEFGENERIC FUNCTION-NAME-REMPROP (FUNCTION-NAME INDICATOR))

;;; Kludges
#+Genera
(PROGN

(DEFGENERIC PRINT-SELF (OBJECT STREAM PRINT-DEPTH SLASHIFY-P)
  (:SELECTOR :PRINT-SELF))

(DEFGENERIC WHICH-OPERATIONS (OBJECT)
  (:SELECTOR :WHICH-OPERATIONS))

(DEFGENERIC OPERATION-HANDLED-P (OBJECT MESSAGE)
  (:SELECTOR :OPERATION-HANDLED-P))

(DEFGENERIC SEND-IF-HANDLES (OBJECT MESSAGE &REST ARGS)
  (:SELECTOR :SEND-IF-HANDLES))

)

(INITIALIZE-CLOS-2)
